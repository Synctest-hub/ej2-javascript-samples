{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/click-add-point/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"AddPoint\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for click to add a point.\n */\nvar chartData = [\n    { x: 20, y: 20 }, { x: 80, y: 80 }\n];\n\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X and Y Axis\n        primaryXAxis: {\n            edgeLabelPlacement: 'Shift',\n            rangePadding: 'Additional',\n            majorGridLines: { width: 0 }\n        },\n        chartArea: { border: { width: 0 } },\n        primaryYAxis:\n        {\n            title: 'Value', interval: 20, lineStyle: { width: 0 }, majorTickLines: { width: 0 }\n        },\n        //Initializing Chart Series\n        series: [\n            {\n                dataSource: chartData, xName: 'x', yName: 'y', type: 'Line', width: 3,\n                marker: { visible: true, isFilled: true, border: { width: 2, color: 'White' }, width: 13, height: 13 }\n            }\n        ],\n        width: ej.base.Browser.isDevice ? '100%' : '70%',\n        title: 'User supplied data',\n        tooltip: { enable: true },\n        load: function (args) {\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        },\n        chartMouseClick: function (args) {\n            var isRemoved = false;\n            if (args.axisData) {\n                for (var i = 0; i < chart.series[0].points.length; i++) {\n                    var markerWidth = chart.series[0].marker.width / 2;\n                    var roundedX = Math.round(args.axisData.primaryXAxis) + markerWidth;\n                    var roundedY = Math.round(args.axisData.primaryYAxis) + markerWidth;\n                    var pointX = Math.round(chart.series[0].points[i].x) + markerWidth;\n                    var pointY = Math.round(chart.series[0].points[i].y) + markerWidth;\n                    if ((roundedX === pointX || roundedX + 1 === pointX || roundedX - 1 === pointX) &&\n                        (roundedY === pointY || roundedY + 1 === pointY || roundedY - 1 === pointY)) {\n                        if (chart.series[0].points.length > 1) {\n                            var points = chart.series[0].points;\n                            var duration = i === 0 || i === points[points.length - 1].index ? 500 : 0;\n                            chart.series[0].removePoint(i, duration);\n                        }\n                        isRemoved = true;\n                    }\n                }\n                if (!isRemoved) {\n                    chart.series[0].addPoint({ x: Math.round(args.axisData.primaryXAxis), y: Math.round(args.axisData.primaryYAxis) });\n                }\n            }\n        },\n        axisRangeCalculated: function(args) {\n            if (args.axis.name === 'primaryXAxis') {\n                if (args.interval < 10) {\n                    args.maximum = args.maximum + 10;\n                    args.minimum = args.minimum - 10;\n                    args.interval = 10;\n                }\n            }\n            if (args.axis.name === 'primaryYAxis') {\n                if (args.maximum <= 60) {\n                    args.interval = 10;\n                }\n            }\n        }\n    });\n    chart.appendTo('#AddPoint');\n"}