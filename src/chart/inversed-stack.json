{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/inversed/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"inverse-container\" align=\"center\"></div>\n    <div style=\"float: right; margin-right: 10px; margin-top: -5px\">\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}var pointRender = function (args) {\n    var inverseTheme = location.hash.split('/')[1];\n    inverseTheme = inverseTheme ? inverseTheme : 'Fluent2';\n    var fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n        \"#C19C00\"];\n    var fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n        \"#0B6A0B\", \"#C19C00\"];\n    var pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\n    var pointTailwindDarkColors = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\n    var pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\n    var pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\n    if (inverseTheme && inverseTheme.indexOf('fabric') > -1) {\n        args.fill = window.fabricColors[args.point.index % 10];\n    } else if (inverseTheme === 'material') {\n        args.fill = window.materialColors[args.point.index % 10];\n    } else if (inverseTheme === 'highcontrast') {\n        args.fill = window.highcontrastColors[args.point.index % 10];\n    } else if (inverseTheme === 'fluent') {\n        args.fill = window.fluentColors[args.point.index % 10];\n    } else if (inverseTheme === 'fluent-dark') {\n        args.fill = window.fluentDarkColors[args.point.index % 10];\n    } else if (inverseTheme === 'fluent2') {\n        args.fill = fluent2Colors[args.point.index % 10];\n    } else if (inverseTheme === 'fluent2-highcontrast' || inverseTheme === 'fluent2-dark') {\n        args.fill = fluent2HighContrastColors[args.point.index % 10];\n    } else if (inverseTheme === 'tailwind') {\n        args.fill = pointTailwindColors[args.point.index % 10];\n    } else if (inverseTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[args.point.index % 10];\n    }else if (inverseTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[args.point.index % 10];\n    } else if (inverseTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[args.point.index % 10];\n    } else {\n        args.fill = window.bootstrapColors[args.point.index % 10];\n    }\n};\n\n/**\n * Sample for Inversed Axis\n */\n\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            valueType: 'Category',\n            opposedPosition: true,\n            isInversed: true,\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 }\n        },\n        //Initializing Primary Y Axis\n        primaryYAxis: {\n            edgeLabelPlacement: 'Shift',\n            labelIntersectAction: 'Rotate45',\n            isInversed: true,\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            lineStyle: { width: 0 },\n            labelStyle: {\n                color: 'transparent'\n            }\n        },\n        chartArea: {\n            border: {\n                width: 0\n            }\n        },\n        pointRender: pointRender,\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Column',\n                dataSource: [\n                    { x: '2008', y: 1.5 }, { x: '2009', y: 7.6 }, { x: '2010', y: 11 },\n                    { x: '2011', y: 16.2 }, { x: '2012', y: 18 }, { x: '2013', y: 21.4 },\n                    { x: '2014', y: 16 }, { x: '2015', y: 17.1 }\n                ],\n                marker: { dataLabel: { visible: true, position: 'Top', font: { fontWeight: '600', color:'#ffffff' } } },\n                xName: 'x',\n                yName: 'y',\n                width: 2,\n                name: 'Rate'\n            },\n        ],\n        //Initializing Tooltip\n        tooltip: {\n            enable: true\n        },\n        legendSettings: { visible: false },\n        //Initializing Chart Titel\n        title: 'Exchange Rate (INR per USD)',\n        width: ej.base.Browser.isDevice ? '100%' : '75%',\n\n    });\n    chart.appendTo('#inverse-container');\n"}