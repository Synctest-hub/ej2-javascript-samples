{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/live-data-sorting/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"column-sorting\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}\n\n/**\n * Sample for Column Series\n */\nvar intervalId;\nvar materialColors = [\"#00bdae\", \"#404041\", \"#357cd2\", \"#e56590\", \"#f8b883\", \"#70ad47\", \"#dd8abd\", \"#7f84e8\", \"#7bb4eb\",\n    \"#ea7a57\", \"#404041\", \"#00bdae\"];\nvar fabricColors = [\"#4472c4\", \"#ed7d31\", \"#ffc000\", \"#70ad47\", \"#5b9bd5\",\n    \"#c1c1c1\", \"#6f6fe2\", \"#e269ae\", \"#9e480e\", \"#997300\", \"#4472c4\", \"#70ad47\", \"#ffc000\", \"#ed7d31\"];\nvar bootstrapColors = [\"#a16ee5\", \"#f7ce69\", \"#55a5c2\", \"#7ddf1e\", \"#ff6ea6\",\n    \"#7953ac\", \"#b99b4f\", \"#407c92\", \"#5ea716\", \"#b91c52\"];\nvar highContrastColors = [\"#79ECE4\", \"#E98272\", \"#DFE6B6\", \"#C6E773\", \"#BA98FF\",\n    \"#FA83C3\", \"#00C27A\", \"#43ACEF\", \"#D681EF\", \"#D8BC6E\"];\nvar fluentColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nvar fluentDarkColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nvar fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nvar fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nvar fluent2DarkColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nvar pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\nvar pointTailwindDarkColors = [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\nvar pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\nvar pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\nvar updatedData = [\n    { x: 'India', y: 97.21 },\n    { x: 'France', y: 95.21 },\n    { x: 'Indonesia', y: 62.74 },\n    { x: 'Iceland', y: 61.71 },\n    { x: 'United States', y: 57.97 },\n    { x: 'Greece', y: 57.51 },\n    { x: 'Iran', y: 55.31 },\n    { x: 'Canada', y: 48.76 },\n    { x: 'Finland', y: 48.50 },\n    { x: 'Brazil', y: 45.13 },\n\n];\nvar updatedData2 = [\n    { x: 'India', y: 102.54 },\n    { x: 'France', y: 90.76 },\n    { x: 'Indonesia', y: 64.61 },\n    { x: 'Iceland', y: 70.95 },\n    { x: 'United States', y: 61.52 },\n    { x: 'Greece', y: 49.03 },\n    { x: 'Iran', y: 33.05 },\n    { x: 'Canada', y: 59.83 },\n    { x: 'Finland', y: 43.13 },\n    { x: 'Brazil', y: 55.56 },\n];\nvar updatedData3 = [\n    { x: 'India', y: 99.33 },\n    { x: 'France', y: 94.50 },\n    { x: 'Indonesia', y: 64.86 },\n    { x: 'Iceland', y: 77.86 },\n    { x: 'United States', y: 62.14 },\n    { x: 'Greece', y: 47.73 },\n    { x: 'Iran', y: 39.97 },\n    { x: 'Canada', y: 66.53 },\n    { x: 'Finland', y: 43.15 },\n    { x: 'Brazil', y: 50.02 }\n];\nvar updatedData4 = [\n    { x: 'India', y: 98.85 },\n    { x: 'France', y: 101.11 },\n    { x: 'Indonesia', y: 60.72 },\n    { x: 'Iceland', y: 71.09 },\n    { x: 'United States', y: 60.97 },\n    { x: 'Greece', y: 52.07 },\n    { x: 'Iran', y: 37.99 },\n    { x: 'Canada', y: 58.35 },\n    { x: 'Finland', y: 43.41 },\n    { x: 'Brazil', y: 58.61 }\n];\nvar updatedData5 = [\n    { x: 'India', y: 100.02 },\n    { x: 'France', y: 100.55 },\n    { x: 'Indonesia', y: 62.84 },\n    { x: 'Iceland', y: 89.05 },\n    { x: 'United States', y: 59.46 },\n    { x: 'Greece', y: 54.04 },\n    { x: 'Iran', y: 42.58 },\n    { x: 'Canada', y: 59.90 },\n    { x: 'Finland', y: 46.18 },\n    { x: 'Brazil', y: 65.06 }\n];\nvar updatedData6 = [\n    { x: 'India', y: 102.54 },\n    { x: 'France', y: 103.56 },\n    { x: 'Indonesia', y: 60.23 },\n    { x: 'Iceland', y: 94.00 },\n    { x: 'United States', y: 59.39 },\n    { x: 'Greece', y: 50.11 },\n    { x: 'Iran', y: 34.23 },\n    { x: 'Canada', y: 60.40 },\n    { x: 'Finland', y: 44.73 },\n    { x: 'Brazil', y: 50.04 }\n];\nvar updatedData7 = [\n    { x: 'India', y: 98.84 },\n    { x: 'France', y: 101.95 },\n    { x: 'Indonesia', y: 60.86 },\n    { x: 'Iceland', y: 89.51 },\n    { x: 'United States', y: 58.26 },\n    { x: 'Greece', y: 53.20 },\n    { x: 'Iran', y: 34.28 },\n    { x: 'Canada', y: 57.22 },\n    { x: 'Finland', y: 42.99 },\n    { x: 'Brazil', y: 51.68 }\n];\nvar updatedData8 = [\n    { x: 'India', y: 100.41 },\n    { x: 'France', y: 108.54 },\n    { x: 'Indonesia', y: 56.44 },\n    { x: 'Iceland', y: 107.98 },\n    { x: 'United States', y: 57.75 },\n    { x: 'Greece', y: 56.34 },\n    { x: 'Iran', y: 35.53 },\n    { x: 'Canada', y: 57.49 },\n    { x: 'Finland', y: 43.32 },\n    { x: 'Brazil', y: 64.56 }\n];\nvar updatedData9 = [\n    { x: 'India', y: 104.45 },\n    { x: 'France', y: 102.07 },\n    { x: 'Indonesia', y: 61.19 },\n    { x: 'Iceland', y: 97.05 },\n    { x: 'United States', y: 59.53 },\n    { x: 'Greece', y: 55.61 },\n    { x: 'Iran', y: 41.84 },\n    { x: 'Canada', y: 64.13 },\n    { x: 'Finland', y: 43.69 },\n    { x: 'Brazil', y: 64.73 }\n];\nvar updatedData10 = [\n    { x: 'India', y: 111.84 },\n    { x: 'France', y: 95.53 },\n    { x: 'Indonesia', y: 55.15 },\n    { x: 'Iceland', y: 85.79 },\n    { x: 'United States', y: 59.53 },\n    { x: 'Greece', y: 58.93 },\n    { x: 'Iran', y: 46.53 },\n    { x: 'Canada', y: 59.52 },\n    { x: 'Finland', y: 45.67 },\n    { x: 'Brazil', y: 67.84 }\n];\n\nvar updatedDataArray = [\n    updatedData, updatedData2, updatedData3, updatedData4, updatedData5,\n    updatedData6, updatedData7, updatedData8, updatedData9, updatedData10\n];\nvar yearIndex = 2;\n\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            border: { width: 0 },\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 },\n            labelRotation: -90,\n            labelIntersectAction:'None',\n            interval: 1\n        },\n        primaryYAxis: {\n            interval: 30,\n            title: 'Nitrogen Fertilizer Use (KG/Ha)',\n            labelFormat: '{value}',\n            border: { width: 0 },\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 }\n\n        },\n        series: [{\n            dataSource: updatedData,\n            xName: 'x', yName: 'y',\n            type: 'Column', animation: { enable: true },\n            marker: { visible: false, dataLabel: { visible: true, position: 'Top', enableRotation: ej.base.Browser.isDevice ? true : false, angle: -90, format: '{value}', font: { color: '#ffffff' } } },\n            cornerRadius: { topLeft: 5, topRight: 5 }, columnWidth: 0.7\n        },\n        ],\n        chartArea: { border: { width: 0 } },\n        title: 'Nitrogen Fertilizer Usage',\n        width: ej.base.Browser.isDevice ? '100%' : '75%',\n        load: function (args) {\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n            updateClearInterval();\n            intervalId = setInterval(function () {\n                var container = document.getElementById('column-sorting');\n                if (container && container.id === args.chart.element.id) {\n                    var newData = (updatedDataArray[yearIndex - 1] || []).map(function (item) {\n                        return { x: item.x, y: item.y };\n                    });\n                    if (chart.series.length > 0) {\n                        var newSource = ej.charts.sort(newData, ['y'], true);\n                        chart.series[0].setData(newSource, 1400);\n                    }\n                    yearIndex = yearIndex < 10 ? yearIndex + 1 : 2;\n                }\n                else {\n                    updateClearInterval();\n                }\n            }, 2000);\n        },\n        axisRangeCalculated: function (args) {\n            if (args.axis.name === 'primaryYAxis') {\n                if (args.maximum > 120) {\n                    args.interval = 30;\n                }\n                else {\n                    args.interval = 20;\n                }\n                if (args.maximum > 150) {\n                    args.maximum = 150;\n                }\n            }\n        },\n        pointRender: function (args) {\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n                args.fill = fabricColors[args.point.index % 10];\n            } else if (selectedTheme === 'material') {\n                args.fill = materialColors[args.point.index % 10];\n            } else if (selectedTheme === 'highcontrast') {\n                args.fill = highContrastColors[args.point.index % 10];\n            } else if (selectedTheme === 'fluent2') {\n                args.fill = fluent2Colors[args.point.index % 10];\n            } else if (selectedTheme === 'fluent2-dark') {\n                args.fill = fluent2DarkColors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind') {\n                args.fill = pointTailwindColors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind-dark') {\n                args.fill = pointTailwindDarkColors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind3') {\n                args.fill = pointTailwind3Colors[args.point.index % 10];\n            } else if (selectedTheme === 'tailwind3-dark') {\n                args.fill = pointTailwind3DarkColors[args.point.index % 10];\n            } else {\n                args.fill = bootstrapColors[args.point.index % 10];\n            }\n        },\n        textRender: function (args) {\n            if (ej.base.Browser.isDevice) {\n                args.series.marker.dataLabel.font.size = '10px';\n            }\n        }\n        // custom code end\n    });\n    chart.appendTo('#column-sorting');\n    function updateClearInterval() {\n        if (intervalId) {\n            clearInterval(intervalId);\n            intervalId = null;\n        }\n    }\n"}