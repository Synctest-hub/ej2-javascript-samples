{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/dashed-line/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    \n\n    #container_Series_1 {\n        stroke-dasharray: 10px 10px;\n       stroke-linejoin: round; stroke-linecap: round;\n       -webkit-animation: dash 1s linear infinite;\n       animation: dash 1s linear infinite;\n    }\n\n    #container_Series_0_Point_3_Symbol {\n        -webkit-animation: opac 1s ease-out infinite;\n         animation: opac 1s ease-out infinite;\n    }\n\n    @-webkit-keyframes dash {\n        100% {\n            stroke-dashoffset: -20px;\n        }\n    }\n\n    @keyframes dash {\n        100% {\n            stroke-dashoffset: -20px;\n        }\n    }\n\n    @keyframes opac {\n        0% {\n            stroke-opacity: 1;\n            stroke-width: 0px;\n        }\n        100% {\n            stroke-opacity: 0;\n            stroke-width: 10px;\n        }\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for line series with dashed line\n */\n\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            valueType: 'Category',\n            majorGridLines: { width: 0 },\n            interval: 1, majorTickLines: {width : 0},\n            minorTickLines: {width: 0},\n            labelRotation: ej.base.Browser.isDevice ? -45 : 0,\n            labelIntersectAction: ej.base.Browser.isDevice ? 'None' : 'Trim',\n        },\n        //Initializing Primary X Axis\n        primaryYAxis: {\n            labelFormat: '{value}k',\n            rangePadding: 'None',\n            lineStyle: { width: 0 },\n            minimum: 0,\n            maximum: 300,\n            interval: 50,\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 },\n        },\n        annotations: [{\n            content: \"<div>Actual</div>\",\n            region: \"Series\",\n            x: \"15%\",\n            y: \"55%\",\n        }, {\n            content: \"<div>Forecast</div>\",\n            region: \"Series\",\n            x: \"65%\",\n            y: \"30%\",\n        }],\n        chartArea: {\n            border: {\n                width: 0\n            }\n        },\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Line',\n                dataSource: [\n                    { x: 'Jan', y: 100 },\n                    { x: 'Feb', y: 110 },\n                    { x: 'Mar', y: 125 },\n                    { x: 'Apr', y: 150 },\n                    { x: 'May', y: 140 },\n                    { x: 'Jun', y: 160 },\n                ],\n                xName: 'x', width: 2, marker: { visible: false, width: 7, height: 7 },\n                yName: 'y'\n            },\n            {\n                type: 'Line',\n                dataSource: [\n                    { x: 'Jun', y: 160 },\n                    { x: 'Jul', y: 170 },\n                    { x: 'Aug', y: 180 },\n                    { x: 'Sep', y: 190 },\n                    { x: 'Oct', y: 200 },\n                    { x: 'Nov', y: 230 },\n                    { x: 'Dec', y: 270 },\n                ],\n                xName: 'x', width: 2, marker: {\n                    visible: false,\n                    width: 10,\n                    height: 10,\n                    shape: 'Diamond',\n                  \n                },\n                dashArray: '10',\n                yName: 'y'\n            }\n        ],\n        //Initializing Chart Title\n        title: 'Fruits Production Statistics',\n        //Initializing Tootlip\n        tooltip: {\n            enable: true,\n            shared: true,\n            format: '${point.x} : <b>${point.y}</b>',\n            header: '<b>Fruits Production</b>'\n        },\n        //Initializing Crosshair\n        crosshair: {\n            enable: false,\n            line: {\n                color: 'rgba(204,214,235,0.25)',\n                width: ej.base.Browser.isDevice ? 50 : 20,\n            },\n            lineType: 'Vertical'\n        },\n        width: ej.base.Browser.isDevice ? '100%' : '75%',\n        load: function (args) {\n            var annotationColor = 'light';\n            args.chart.annotations[0].content = '<div style=\"color:black; font-weight:bold;\">Actual</div>';\n            args.chart.annotations[1].content = '<div style=\"color:black; font-weight:bold;\">Forecast</div>';\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\n                replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n            if (selectedTheme && selectedTheme.indexOf('fabric-dark') > -1) {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'material-dark') {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme === 'material') {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'bootstrap5-dark') {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme === 'bootstrap5') {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'bootstrap-dark') {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme === 'bootstrap') {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'highcontrast') {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme === 'fluent-dark') {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme === 'fluent') {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'tailwind-dark') {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme === 'tailwind') {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'tailwind3-dark') {\n                annotationColor = 'dark';\n            } \n            else if (selectedTheme === 'tailwind3') {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'material3-dark') {\n                annotationColor = 'dark';\n            }\n            else if (selectedTheme === 'material3') {\n                annotationColor = 'light';\n            }\n            else if (selectedTheme === 'fluent2') {\n                annotationColor = 'light';\n            } \n            else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n                annotationColor = 'dark';\n            }\n            else {\n                annotationColor = 'light';\n            }\n            if (annotationColor == 'light') {\n                args.chart.annotations[0].content = '<div style=\"color:black; font-weight:bold;\">Actual</div>';\n                args.chart.annotations[1].content = '<div style=\"color:black; font-weight:bold;\">Forecast</div>';\n            }\n            else {\n                args.chart.annotations[0].content = '<div style=\"color:whitesmoke; font-weight:bold;\">Actual</div>';\n                args.chart.annotations[1].content = '<div style=\"color:whitesmoke; font-weight:bold;\">Forecast</div>';\n            }\n        },\n\n    });\n    chart.appendTo('#container');\n"}