{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/update-datasource/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"UpdateData\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for Update Data Source.\n */\nvar updateData = [\n    { x: 'Jewellery', y: 20 },\n    { x: 'Shoes', y: 15 },\n    { x: 'Footwear', y: 13 },\n    { x: 'Pet Services', y: 23 },\n    { x: 'Business Clothing', y: 10 },\n    { x: 'Office Supplies', y: 8 },\n    { x: 'Food', y: 11 }\n];\nvar labelRender = function(args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n    var materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n        '#ea7a57', '#404041', '#00bdae'];\n    var fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n        '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\n    var bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n        '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\n    var highcontrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n        '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\n    var fluentColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\n    var fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n        \"#C19C00\"];\n    var fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n        \"#0B6A0B\", \"#C19C00\"];\n    var pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\n    var pointTailwindDarkColors =  [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\n    var pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\n    var pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = fabricColors[args.point.index % 10];\n    } else if (selectedTheme === 'material') {\n        args.fill = materialColors[args.point.index % 10];\n    } else if (selectedTheme === 'highcontrast') {\n        args.fill = highcontrastColors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent2') {\n        args.fill = fluent2Colors[args.point.index % 10];\n    } else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {\n        args.fill = fluent2HighContrastColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind') {\n        args.fill = pointTailwindColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[args.point.index % 10];\n    } else if (selectedTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[args.point.index % 10];\n    } else {\n        args.fill = bootstrapColors[args.point.index % 10];\n    }\n};\n\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X and Y Axis\n        primaryXAxis: {\n            valueType: 'Category', majorGridLines: { width: 0 }, labelStyle: { size: ej.base.Browser.isDevice ? '11px' : '12px' }\n        },\n        chartArea: { border: { width: 0 } },\n        primaryYAxis:\n        {\n            title: 'Sales in percentage', labelFormat: '{value}%', lineStyle: { width: 0 }, majorTickLines: { width: 0 }\n        },\n        //Initializing Chart Series\n        series: [\n            {\n                dataSource: updateData, xName: 'x', yName: 'y', type: 'Column',\n                cornerRadius: { topLeft: ej.base.Browser.isDevice ? 10 : 15, topRight: ej.base.Browser.isDevice ? 10 : 15 }, columnWidth: 0.5\n            }\n        ],\n        width: ej.base.Browser.isDevice ? '100%' : '75%',\n        title: 'Sales by product',\n        pointRender: labelRender,\n        load: function (args) {\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n            args.chart.primaryXAxis.labelIntersectAction = 'Rotate90';\n            setInterval(function () {\n                var newData = updateData.map(function(item) {\n                    var value = getRandomInt(10, 90);\n                    return { x: item.x, y: value };\n                });\n                if (chart.visibleSeries.length > 0) {\n                    chart.series[0].setData(newData);\n                }\n            }, 3000);\n        },\n        axisRangeCalculated: function (args) {\n            if (args.axis.name === 'primaryYAxis') {\n                args.maximum = args.maximum > 100 ? 100 : args.maximum;\n                if (args.maximum > 80) {\n                    args.interval = 10;\n                }\n            }\n        }\n    });\n    chart.appendTo('#UpdateData');\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n"}