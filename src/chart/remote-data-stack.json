{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/remote-data/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><style>\n    .waitingpopup {\n        position: absolute;\n        z-index: 100;\n        top: 0;\n        left: 0;\n        background-color: #fff;\n        border-radius: 50%;\n        box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n        width: 50px;\n        height: 50px;\n    }\n    \n    .image {\n        position: absolute;\n        background-repeat: no-repeat;\n        background-image: url('//ej2.syncfusion.com/javascript/demos/src/chart/images/Medium-36px-spin.gif');\n        background-position: center;\n        width: 50px;\n        height: 50px;\n        padding: 6px;\n    }\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n<div class=\"col-lg-12 control-section\">\n    <div id=\"remote-container\" align=\"center\">\n        <div id=\"waitingpopup\" class=\"waitingpopup\" style=\"display:none\">\n            <span id=\"gif\" class=\"image\"></span>\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}var dataManager = new ej.data.DataManager({\n    url: 'https://services.syncfusion.com/js/production/api/orders'\n});\nvar query = new ej.data.Query().take(5).where('Estimate', 'lessThan', 3, false);\nvar labelRender = function (args) {\n    if (args.axis.name === 'primaryYAxis') {\n        args.text = '' + args.value * 1000;\n    }\n};\nvar loaded = 1;\nvar loadedChart = function (args) {\n    var div = document.getElementById('waitingpopup');\n    div.style.display = 'none';\n    if (loaded) {\n        loaded = 0;\n        args.chart.refresh();\n    }\n};\nvar fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n'#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\nvar materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n    '#ea7a57', '#404041', '#00bdae'];\nvar bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n    '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nvar highcontrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n    '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\nvar fluentColors = [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n    \"#7D39C0\"];\nvar fluentDarkColors =  [\"#1AC9E6\", \"#DA4CB2\", \"#EDBB40\", \"#AF4BCF\", \"#FF7266\", \"#1BD565\", \"#EE993D\", \"#5887FF\", \"#EC548D\",\n\"#7D39C0\"];\nvar fluent2Colors = [\"#6200EE\", \"#09AF74\", \"#0076E5\", \"#CB3587\", \"#E7910F\", \"#0364DE\", \"#66CD15\", \"#F3A93C\", \"#107C10\",\n    \"#C19C00\"];\nvar fluent2HighContrastColors = [\"#9BB449\", \"#2A72D5\", \"#43B786\", \"#3F579A\", \"#584EC6\", \"#E85F9C\", \"#6E7A89\", \"#EA6266\",\n    \"#0B6A0B\", \"#C19C00\"];\nvar bootstrap5Colors = ['#FD7E14', '#6610F2', '#6F42C1', '#D63384', '#DC3545',\n    '#FFC107', '#198754', '#0DCAF0','#FD7E14', '#6610F2'];\nvar pointTailwindColors = [\"#5A61F6\", \"#65A30D\", \"#334155\", \"#14B8A6\", \"#8B5CF6\", \"#0369A1\", \"#F97316\", \"#9333EA\", \"#F59E0B\", \"#15803D\"];\nvar pointTailwindDarkColors =  [\"#8B5CF6\", \"#22D3EE\", \"#F87171\", \"#4ADE80\", \"#E879F9\", \"#FCD34D\", \"#F97316\", \"#2DD4BF\", \"#F472B6\", \"#10B981\"];\nvar pointTailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];\nvar pointTailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];\nvar pointRender = function (args) {\n    var dataTheme = location.hash.split('/')[1];\n    if (dataTheme && dataTheme.indexOf('fabric') > -1) {\n        args.fill = fabricColors[args.point.index % 10];\n    }\n    else if (dataTheme === 'material') {\n        args.fill = materialColors[args.point.index % 10];\n    }\n    else if (dataTheme === 'highcontrast') {\n        args.fill = highcontrastColors[args.point.index % 10];\n    }\n    else if (dataTheme === 'fluent') {\n        args.fill = fluentColors[args.point.index % 10];\n    } \n    else if (dataTheme === 'fluent-dark') {\n        args.fill = fluentDarkColors[args.point.index % 10];\n    }\n    else if (dataTheme === 'fluent2') {\n        args.fill = fluent2Colors[args.point.index % 10];\n    } \n    else if (dataTheme === 'fluent2-highcontrast' || dataTheme === 'fluent2-dark') {\n        args.fill = fluent2HighContrastColors[args.point.index % 10];\n    }\n    else if (dataTheme === 'bootstrap5' || dataTheme === 'bootstrap5-dark') {\n        args.fill = bootstrap5Colors[args.point.index % 10];\n    } else if (dataTheme === 'tailwind') {\n        args.fill = pointTailwindColors[args.point.index % 10];\n    } else if (dataTheme === 'tailwind-dark') {\n        args.fill = pointTailwindDarkColors[args.point.index % 10];\n    } else if (dataTheme === 'tailwind3') {\n        args.fill = pointTailwind3Colors[args.point.index % 10];\n    } else if (dataTheme === 'tailwind3-dark') {\n        args.fill = pointTailwind3DarkColors[args.point.index % 10];\n    } \n    else {\n        args.fill = bootstrapColors[args.point.index % 10];\n    }\n};\n/**\n * Samples for remote data binding\n */\n\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            valueType: 'Category',\n            rangePadding: 'Additional',\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: {width: 0}\n        },\n        //Initializing Primary Y Axis\n        primaryYAxis: {\n            majorGridLines: { width: 1 },\n            majorTickLines: { width: 0 },\n            lineStyle: { width: 0 },\n            labelFormat: \"{value}00\",\n            title: 'Freight rate in U.S dollars',\n        },\n        chartArea: {\n            border: {\n                width: 0\n            }\n        },\n        //Initializing Chart Sample\n        series: [\n            {\n                type: 'Column',\n                dataSource: dataManager,\n                xName: 'CustomerID', yName: 'Freight', query: query,\n                animation: { enable: false },\n                marker: {\n                    dataLabel: {\n                        visible: true,\n                        position: 'Top',\n                        format: '{value}K',\n                        font: {\n                            fontWeight: '600',\n                            color: '#ffffff'\n                        }\n                    }\n                }\n            }\n        ],\n        pointRender: pointRender,\n        axisLabelRender: labelRender,\n        loaded: loadedChart,\n        width: ej.base.Browser.isDevice ? '100%' : '75%',\n        title: \"Container freight rate\", legendSettings: { visible: false },\n        tooltip: {\n            enable: true,\n            header: '<b>Freight rate</b>' \n        },\n        tooltipRender: function (args)  {\n            args.text =  args.data.pointX + ': ' + '<b>$' + args.data.pointY * 1000;\n        },\n        load: function (args) {\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';\n            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +\n                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        },\n    });\n    chart.appendTo('#remote-container');\n"}