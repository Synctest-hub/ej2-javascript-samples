{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/spreadsheet/cell-formatting/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"control-wrapper\">\n        <div id=\"spreadsheet\"></div>\n    </div>\n</div>\n","index.js":"{{ripple}}/**\n * Default cell formatting sample.\n */\n\n\n    var columns = [{ width: 80 }, { width: 140 }, { width: 100 }, { width: 232 }, { width: 120 }, { width: 100 },\n    { width: 100 }, { width: 120 }, { width: 80 }];\n    var rows = [{\n        height: 36,\n        // Applying cell formatting through cell binding\n        cells: [{ style: { textAlign: 'right' } }, { style: { textIndent: '2pt' } }, { style: { textAlign: 'right' } },\n        { style: { textIndent: '2pt' } }, { index: 5, style: { textAlign: 'right' } },\n        { index: 7, style: { textAlign: 'center' } }, { index: 8, style: { textAlign: 'right' } }]\n    }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] },\n    { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] },\n    { height: 42, cells: [] }, { height: 42, cells: [] }];\n\n    var sheet = [{\n        name: 'Order Details',\n        ranges: [{ dataSource: orderDetails }],\n        columns: columns,\n        rows: rows,\n        showGridLines: false\n    }];\n    //Initialize Spreadsheet component.\n    var spreadsheet = new ej.spreadsheet.Spreadsheet({\n        sheets: sheet,\n        showFormulaBar: false,\n        showRibbon: false,\n        created: createdHandler,\n        beforeCellRender: beforeCellRender\n    });\n\n    //Render initialized Spreadsheet component.\n    spreadsheet.appendTo('#spreadsheet');\n    function createdHandler() {\n        // Applying cell formatting dynamically using cellFormat method\n        spreadsheet.cellFormat({ fontWeight: 'bold', backgroundColor: '#4b5366', color: '#ffffff', fontSize: '12pt' }, 'A1:I1');\n        spreadsheet.cellFormat({ fontWeight: 'bold', textIndent: '2pt' }, 'B2:B16');\n        spreadsheet.cellFormat({ fontStyle: 'italic', textIndent: '2pt' }, 'D2:D16');\n        spreadsheet.cellFormat({ textIndent: '2pt' }, 'E1:E16');\n        spreadsheet.cellFormat({ textIndent: '2pt' }, 'G1:G16');\n        spreadsheet.cellFormat({ textAlign: 'center', fontWeight: 'bold' }, 'H2:H16');\n        spreadsheet.cellFormat({ fontFamily: 'Helvetica New', verticalAlign: 'middle' }, 'A1:I16');\n        spreadsheet.numberFormat('m/d/yyyy', 'C2:C16');\n        spreadsheet.numberFormat('$#,##0.00', 'I2:I16');\n        //Applying border to a range.\n        spreadsheet.setBorder({ border: '1px solid #e0e0e0' }, 'A1:I16', 'Outer');\n        spreadsheet.setBorder({ border: '1px solid #e0e0e0' }, 'A2:I15', 'Horizontal');\n    }\n    function beforeCellRender(args) {\n        if (!spreadsheet.isOpen && spreadsheet.activeSheetIndex === 0) {\n            if (args.cell && args.cell.value) {\n                // Applying cell formatting before rendering the particular cell\n                switch (args.cell.value) {\n                    case 'Delivered':\n                        spreadsheet.cellFormat({ color: '#10c469', textDecoration: 'line-through' }, args.address);\n                        break;\n                    case 'Shipped':\n                        spreadsheet.cellFormat({ color: '#62c9e8' }, args.address);\n                        break;\n                    case 'Pending':\n                        spreadsheet.cellFormat({ color: '#FFC107', textDecoration: 'underline' }, args.address);\n                        break;\n                    case 'Cancelled':\n                        spreadsheet.cellFormat({ color: '#ff5b5b' }, args.address);\n                        break;\n                }\n            }\n        }\n    }\n\n"}