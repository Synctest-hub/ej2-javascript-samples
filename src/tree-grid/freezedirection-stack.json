{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/tree-grid/freezedirection/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/28.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/28.1.33/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"grid-freezeprop\">\n        <div class=\"grid-freezecol\">\n            <div class=\"grid-freezecol\">\n                <span>\n                    Column\n                </span>\n            </div>\n            <div class=\"grid-freezecol\">\n                <input type=\"text\" id=\"column\">\n            </div>\n        </div>\n        <div class=\"grid-freezecol\">\n            <div class=\"grid-freezecol\">\n                <span>\n                    Freeze Direction\n                </span>\n            </div>\n            <div class=\"grid-freezecol\">\n                <input type=\"text\" id=\"FreezeDirection\">\n            </div>\n        </div>\n    </div>\n\n    <div id=\"TreeGrid\">\n        <div id=\"alertDialog\"></div>\n    </div>\n</div>\n\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}\n    var alertDialogObj = new ej.popups.Dialog({\n        header: 'Frozen',\n        content: 'Atleast one Column should be in movable',\n        showCloseIcon: false,\n        target: '.control-section',\n        buttons: [{\n            click: alertDlgBtnClick, buttonModel: { content: 'OK', isPrimary: true }\n        }],\n        width: '300px',\n        visible: false,\n        animationSettings: { effect: 'None' }\n    });\n    alertDialogObj.appendTo('#alertDialog');\n    function alertDlgBtnClick() {\n        alertDialogObj.hide();\n    }\n    var treeGridObj = new ej.treegrid.TreeGrid({\n        dataSource: window.sampleData,\n        childMapping: 'subtasks',\n        treeColumnIndex: 1,  \n        allowSorting: true,\n        allowSelection: false,\n        height: 410,\n        columns: [\n            { field: 'taskID', headerText: 'Task ID', textAlign: 'Right', width: 100,freeze: 'Left'  },\n            { field: 'taskName', headerText: 'Task Name', width: 250 },\n            { field: 'startDate', headerText: 'Start Date', width: 130, textAlign: 'Right',\n                type: 'date', format: { type: 'dateTime', format: 'dd/MM/yyyy' } },\n            { field: 'endDate', headerText: 'End Date', width: 150, textAlign: 'Right',\n                type: 'date', format: { type: 'dateTime', format: 'dd/MM/yyyy' } },\n            { field: 'duration', headerText: 'Duration', textAlign: 'Right', width: 130 },\n            { field: 'progress', headerText: 'Progress', textAlign: 'Right', width: 130 },\n            { field: 'priority', headerText: 'Priority', textAlign: 'Left', width: 160 },\n            { field: 'designation', headerText: 'Designation', textAlign: 'Left', width: 190 },\n            { field: 'employeeID', headerText: 'EmployeeID', textAlign: 'Left', width: 120 },\n            { field: 'approved', headerText: 'Approved', width: 140, displayAsCheckBox: true, textAlign: 'Left',freeze: 'Right' }\n        ]\n    });\n    treeGridObj.appendTo('#TreeGrid');\n\n    var columnNames = [\n        { id: 'taskID', name: 'Task ID' },\n        { id: 'taskName', name: 'Task Name' },\n        { id: 'startDate', name: 'Start Date' },\n        { id: 'endDate', name: 'End Date' },\n        { id: 'duration', name: 'Duration' },\n        { id: 'progress', name: 'Progress' },\n        { id: 'priority', name: 'Priority' },\n        { id: 'designation', name: 'Designation' },\n        { id: 'employeeID', name: 'Employee ID' },\n        { id: 'approved', name: 'Approved' }\n    ];\n    var directions = [\n        { id: 'Left', name: 'Left' },\n        { id: 'Right', name: 'Right' },\n        { id: 'Center', name: 'Center' }\n    ];\n\n    var refresh = true;\n    var columnDropDown = new ej.dropdowns.DropDownList({\n        dataSource: columnNames,\n        fields: { text: 'name', value: 'id' },\n        value: 'taskID',\n        change: function(e) {\n            var columnName = e.value;\n            var column = treeGridObj.getColumnByField(columnName);\n            var value = column.freeze === undefined ? 'Center' : column.freeze;\n            refresh = directionDropDown.value === value;\n            directionDropDown.value = value;\n        }\n    });\n    columnDropDown.appendTo('#column');\n\n    var directionDropDown = new ej.dropdowns.DropDownList({\n        dataSource: directions,\n        fields: { text: 'name', value: 'id' },\n        value: 'Left',\n        change: function(e) {\n            if (refresh) {\n                var columnName = document.getElementById(\"column\").ej2_instances[0].value;\n                var mvblColumns = treeGridObj.grid.getMovableColumns();\n                if (mvblColumns.length === 1 && columnName === mvblColumns[0].field && e.value !== mvblColumns[0].freeze) {\n                    alertDialogObj.show(); refresh = false; directionDropDown.value = \"Center\"; directionDropDown.refresh();\n                } else {\n                    treeGridObj.grid.getColumnByField(columnName).freeze = e.value === 'Center' ? undefined : e.value;\n                    treeGridObj.grid.refreshColumns();\n                }\n            }\n            refresh = true;\n        }\n    });\n    directionDropDown.appendTo('#FreezeDirection');\n\n\n\n"}