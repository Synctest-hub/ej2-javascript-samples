{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/diagram/remote-data/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"diagram\" class=\"diagramclass\">\n    </div>\n</div>\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Remote Data binding sample\n */\n\n    //Initializes diagram control\n    var diagram = new ej.diagrams.Diagram({\n        width: '100%', height: 490,\n        //Configrues hierarchical tree layout\n        layout: {\n            type: 'HierarchicalTree', margin: { left: 0, right: 0, top: 100, bottom: 0 },\n            verticalSpacing: 40,\n        },\n        //Sets the default values of nodes\n        getNodeDefaults: function (node) {\n            node.width = 80;\n            node.height = 40;\n            node.shape = { type: 'Basic', shape: 'Rectangle' };\n            node.style = { fill: '#048785', strokeColor: 'Transparent' };\n            return node;\n        },\n        //Sets the default values of connector\n        getConnectorDefaults: function (connector) {\n            connector.type = 'Orthogonal';\n            connector.style.strokeColor = '#048785';\n            connector.targetDecorator.shape = 'None';\n            return connector;\n        },\n        //Configures data source\n        dataSourceSettings: {\n            id: 'Id', parentId: 'ParentId',\n            dataSource: new ej.data.DataManager(\n                { url: 'https://services.syncfusion.com/js/production/api/RemoteData', crossDomain: true }\n            ),\n            //binds the external data with node\n            doBinding: function (nodeModel, data, diagram) {\n                nodeModel.annotations = [{\n                    content: data.Label,\n                    style: { color: 'white' }\n                }];\n            }\n        },\n        //Disables all interactions except zoom/pan\n        tool: ej.diagrams.DiagramTools.ZoomPan,\n        snapSettings: { constraints: 0 }\n    });\n    diagram.appendTo('#diagram');\n"}