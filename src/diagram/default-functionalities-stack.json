{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/diagram/default-functionalities/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><link id=\"change_themes\" href=\"../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Bootstrap5_Diagram_Builder/style.css\" rel=\"stylesheet\" type=\"text/css\">\n<div class=\"control-section\">\n        <link href=\"https://ej2.syncfusion.com/demos/src/diagram/styles/diagram-common.css\" rel=\"stylesheet\">\n        <style>\n            /* These styles are used for toolbar icons*/\n           @font-face {\n                font-family: 'e-ddb-icons';\n                src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');\n                font-weight: normal;\n                font-style: normal;\n            }\n\n            @font-face {\n            font-family: 'Bootstrap5 Diagram Builder';\n            src:\n            url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');\n            font-weight: normal;\n            font-style: normal;\n            }\n\n            [class^=\"sf-icon-\"], [class*=\" sf-icon-\"] {\n            font-family: 'Bootstrap5 Diagram Builder' !important;\n            speak: none;\n            font-size: 55px;\n            font-style: normal;\n            font-weight: normal;\n            font-variant: normal;\n            text-transform: none;\n            line-height: 1;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n            }\n\n            .sf-icon-align-left-1:before { content: \"\\e8bc\"; }\n            .sf-icon-align-middle-1:before { content: \"\\e8bd\"; }\n            .sf-icon-align-right-1:before { content: \"\\e8be\"; }\n            .sf-icon-align-top-1:before { content: \"\\e8bf\"; }\n            .sf-icon-align-center-1:before { content: \"\\e8c0\"; }\n            .sf-icon-align-bottom-1:before { content: \"\\e8c1\"; }\n            .sf-icon-distribute-vertical:before { content: \"\\e8c2\"; }\n            .sf-icon-distribute-horizontal:before { content: \"\\e8c3\"; }\n            .sf-icon-elipse:before { content: \"\\e8c4\"; }\n            .sf-icon-line-1:before { content: \"\\e8c5\"; }\n            .sf-icon-orthogonal:before { content: \"\\e8c6\"; }\n            .sf-icon-bezier:before { content: \"\\e8c7\"; }\n            .sf-icon-same-width:before { content: \"\\e8c8\"; }\n            .sf-icon-same-height:before { content: \"\\e8c9\"; }\n            .sf-icon-same-size:before { content: \"\\e8ca\"; }\n        \n            .e-ddb-icons {\n                font-family: 'e-ddb-icons';\n                speak: none;\n                font-size: 16px;\n                font-style: normal;\n                font-weight: normal;\n                font-variant: normal;\n                text-transform: none;\n                line-height: 1;\n                -webkit-font-smoothing: antialiased;\n                -moz-osx-font-smoothing: grayscale;\n            }\n            /* Icon css in dropdown */\n            .e-basic::before {\n                content: \"\\e726\";\n            }\n        \n            .e-flow::before {\n                content: \"\\e724\";\n            }\n        \n            .e-connector::before {\n                content: \"\\e725\";\n            }\n            .e-export::before {\n                    content: \"\\e711\";\n            }\n            .material .e-export::before {\n                    content: \"\\e706\";\n            }\n            .bootstrap .e-export::before {\n                    content: \"\\e71e\";\n            }\n            \n            .e-file-select-wrap {\n                    display: none;\n                }\n                /* Toolbar width */\n                .db-toolbar-editor{\n                    width: 100%;\n                }\n                /* symbolpalette width */\n                #symbolpalette{\n                    width: 90%;\n                }\n                 /* Overall div width */\n                .main{\n                    width: 100%;\n                }\n                .diagram-upload-file{\n                    display: none;\n                }\n        </style>\n        \n    <div class=\"main\">\n        <div class=\"diagram-upload-file\"><input type=\"file\" id=\"fileupload\" name=\"UploadFiles\">\n        </div>\n        <div class=\"db-toolbar-editor\">\n            <div class=\"db-toolbar-container\">\n                <div id=\"toolbarEditor\">\n                </div>\n            </div>\n        </div>\n        <div class=\"sb-mobile-palette-bar\">\n            <div id=\"palette-icon\" role=\"button\" class=\"e-ddb-icons1 e-toggle-palette\"></div>\n        </div>\n        <div id=\"palette-space\" class=\"sb-mobile-palette\">\n            <div id=\"symbolpalette\"></div>\n        </div>\n        <div id=\"diagram-space\" class=\"sb-mobile-diagram\">\n            <div id=\"diagram\"></div>\n        </div>\n    </div>\n</div>\n    \n    </div></body></html>","index.js":"{{ripple}}/* jshint esversion: 6 */\n/**\n * Default FlowShape sample\n */\nej.diagrams.Diagram.Inject(ej.diagrams.UndoRedo, ej.diagrams.PrintAndExport);\n\n\n\n\n    //Adds EventListener based on device's viewport width.\n    function addEvents() {\n        var isMobile = window.matchMedia('(max-width:550px)').matches;\n        if (isMobile) {\n            var paletteIcon = document.getElementById('palette-icon');\n            if (paletteIcon) {\n                paletteIcon.addEventListener('click', openPalette, false);\n            }\n        }\n    }\n\n    //Toggles the visibility of the palette space on mobile devices when the palette icon is clicked.\n    function openPalette() {\n        var paletteSpace = document.getElementById('palette-space');\n        isMobile = window.matchMedia('(max-width:550px)').matches;\n        if (isMobile) {\n            if (!paletteSpace.classList.contains('sb-mobile-palette-open')) {\n                paletteSpace.classList.add('sb-mobile-palette-open');\n            }\n            else {\n                paletteSpace.classList.remove('sb-mobile-palette-open');\n            }\n        }\n    }\n\n    var bounds = document.getElementById('diagram-space').getBoundingClientRect();\n    var centerX = bounds.width / 2;\n\n    // Function to create a node with given properties\n    function createNode(id, height, offsetX, offsetY, shape, content, margin) {\n        return {\n            id: id,\n            height: height,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            shape: { type: 'Flow', shape: shape },\n            annotations: [{ content: content, margin: margin }]\n        };\n    }\n    // Initializing the nodes for the diagram\n    var nodes = [\n        createNode('NewIdea', 60, centerX - 50, 80, 'Terminator', 'Place Order'),\n        createNode('Meeting', 60, centerX - 50, 160, 'Process', 'Start Transaction'),\n        createNode('BoardDecision', 60, centerX - 50, 240, 'Process', 'Verification'),\n        createNode('Project', 60, centerX - 50, 330, 'Decision', 'Credit card valid?'),\n        createNode('End', 60, centerX - 50, 430, 'Decision', 'Funds available?'),\n        createNode('Payment_method', 60, (centerX - 50) + 230, 330, 'Process', 'Enter payment method'),\n        createNode('transaction_entered', 60, (centerX - 50), 630, 'Terminator', 'Log transaction'),\n        createNode('Reconcile_entries', 60, (centerX - 50) + 180, 630, 'Process', 'Reconcile the entries'),\n        createNode('transaction_completed', 60, (centerX - 50), 530, 'Process', 'Complete Transaction'),\n        createNode('data', 45, (centerX - 50) - 190, 530, 'Data', 'Send e-mail', { left: 25, right: 25 }),\n        createNode('Database', 70, (centerX - 50) + 175, 530, 'DirectData', 'Customer Database', { left: 25, right: 25 })\n    ];\n    // Function to create a connector with given properties\n    function createConnector(id, sourceID, targetID, type = 'Straight', annotations = [], style = {}, segments = []) {\n        return {\n            id: id,\n            sourceID: sourceID,\n            targetID: targetID,\n            type: type,\n            annotations: annotations,\n            style: style,\n            segments: segments\n        };\n    }\n\n    // Initializes the connectors for the diagram\n    var connectors = [\n        createConnector('connector1', 'NewIdea', 'Meeting'),\n        createConnector('connector2', 'Meeting', 'BoardDecision'),\n        createConnector('connector3', 'BoardDecision', 'Project'),\n        createConnector('connector4', 'Project', 'End', 'Straight', [{ content: 'Yes', style: { fill: 'white' } }]),\n        createConnector('connector5', 'End', 'transaction_completed', 'Straight', [{ content: 'Yes', style: { fill: 'white' } }]),\n        createConnector('connector6', 'transaction_completed', 'transaction_entered'),\n        createConnector('connector7', 'transaction_completed', 'data'),\n        createConnector('connector8', 'transaction_completed', 'Database'),\n        createConnector('connector9', 'Payment_method', 'Meeting', 'Orthogonal', [], {},\n            [{ direction: 'Top', type: 'Orthogonal', length: 120 }]),\n        createConnector('connector10', 'End', 'Payment_method', 'Orthogonal',\n            [{ content: 'No', style: { fill: 'white' } }], {}, [{ direction: 'Right', type: 'Orthogonal', length: 100 }]),\n        createConnector('connector11', 'Project', 'Payment_method', 'Orthogonal', [{ content: 'No', style: { fill: 'white' } }]),\n        createConnector('connector12', 'transaction_entered', 'Reconcile_entries', 'Straight', [], { strokeDashArray: '2,2' })\n    ];\n\n    var interval = [1, 9, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75];\n    var gridlines = { lineColor: '#e0e0e0', lineIntervals: interval };\n    //Initializes diagram control\n    var diagram = new ej.diagrams.Diagram({\n        width: '100%', height: '700px', nodes: nodes, connectors: connectors,\n        drawingObject: {},\n        selectionChange: function (args) { selectionChange(args); },\n        historyChange: function (args) { historyChange(args); },\n        tool: ej.diagrams.DiagramTools.Default,\n        snapSettings: { horizontalGridlines: gridlines, verticalGridlines: gridlines },\n        //Sets the default values of a node\n        getNodeDefaults: function (node) {\n            if (node.width === undefined) {\n                node.width = 145;\n            }\n            node.style = { fill: '#357BD2', strokeColor: 'white' };\n            for (var i = 0; i < node.annotations.length; i++) {\n                node.annotations[i].style = {\n                    color: 'white',\n                    fill: 'transparent',\n                };\n            }\n            //Set ports\n            node.ports = [\n                { id: 'pointPort1', shape: 'Circle', offset: { x: 0, y: 0.5 } },\n                { id: 'pointPort2', shape: 'Circle', offset: { x: 0.5, y: 1 } },\n                { id: 'pointPort3', shape: 'Circle', offset: { x: 1, y: 0.5 } },\n                { id: 'pointPort4', shape: 'Circle', offset: { x: 0.5, y: 0 } }\n            ];\n            return node;\n        },\n        //Sets the default values of a Connector.\n        getConnectorDefaults: function (obj) {\n            if (obj.id.indexOf('connector') !== -1) {\n                obj.targetDecorator = { shape: 'Arrow', width: 10, height: 10 };\n            }\n        },\n        scrollChange: function (args) {\n            if (args.panState !== 'Start') {\n                var zoomCurrentValue = document.getElementById(\"btnZoomIncrement\").ej2_instances[0];\n                zoomCurrentValue.content = Math.round(diagram.scrollSettings.currentZoom * 100) + ' %';\n            }\n        },\n        //Sets the Node style for DragEnter element.\n        dragEnter: function (args) {\n            var obj = args.element;\n            if (obj instanceof ej.diagrams.Node) {\n                var objWidth = obj.width;\n                var objHeight = obj.height;\n                var ratio = 100 / obj.width;\n                obj.width = 100;\n                obj.height *= ratio;\n                obj.offsetX += (obj.width - objWidth) / 2;\n                obj.offsetY += (obj.height - objHeight) / 2;\n                obj.style = { fill: '#357BD2', strokeColor: 'white' };\n            }\n        }\n    });\n    diagram.appendTo('#diagram');\n\n    //To enable and disable the toolbar items based on selection.\n    function selectionChange(args) {\n        if (args.state === 'Changed') {\n            var selectedItems = diagram.selectedItems.nodes;\n            selectedItems = selectedItems.concat(diagram.selectedItems.connectors);\n            if (selectedItems.length === 0) {\n                const itemIds = ['Cut', 'Copy', 'Lock', 'Delete', 'Order', 'Rotate', 'Flip'];\n                itemIds.forEach(itemId => {\n                    const item = toolbarObj.items.find(item => item.id === itemId);\n                    if (item) {\n                        item.disabled = true;\n                    }\n                });\n                disableMultiselectedItems();\n            }\n            if (selectedItems.length === 1) {\n                enableItems();\n                disableMultiselectedItems();\n\n                var groupIndex = toolbarObj.items.findIndex(item => item.id === 'Group');\n                if (selectedItems[0].children !== undefined && selectedItems[0].children.length > 0) {\n                    if (groupIndex !== -1) {\n                        toolbarObj.items[groupIndex].disabled = false;\n                    }\n                }\n                else {\n                    if (groupIndex !== -1) {\n                        toolbarObj.items[groupIndex].disabled = true;\n                    }\n                }\n\n            }\n\n            if (selectedItems.length > 1) {\n                enableItems();\n                const itemIds = ['Align_objects', 'Group'];\n                itemIds.forEach(itemId => {\n                    const item = toolbarObj.items.find(item => item.id === itemId);\n                    if (item) {\n                        item.disabled = false;\n                    }\n                });\n                var index = toolbarObj.items.findIndex(item => item.id === 'Distribute_objects');\n                //To enable distribute objcets when selected items length is greater than 2\n                if (selectedItems.length > 2) {\n                    if (index !== -1) {\n                        toolbarObj.items[index].disabled = false;\n                    }\n                }\n                else {\n                    if (index !== -1) {\n                        toolbarObj.items[index].disabled = true;\n                    }\n                }\n            }\n\n        }\n    }\n\n\n    // To enable and disable undo/redo button\n    function historyChange(args) {\n        const undoItem = toolbarObj.items.find(item => item.id === 'Undo');\n        if (undoItem) {\n            undoItem.disabled = diagram.historyManager.undoStack.length > 0 ? false : true;\n        }\n        const redoItem = toolbarObj.items.find(item => item.id === 'Redo');\n        if (redoItem) {\n            redoItem.disabled = diagram.historyManager.redoStack.length > 0 ? false : true;\n        }\n    }\n\n    //To enable toolbar items.\n    function enableItems() {\n        const itemIds = ['Cut', 'Copy', 'Lock', 'Delete', 'Order', 'Rotate', 'Flip'];\n        itemIds.forEach(itemId => {\n            const item = toolbarObj.items.find(item => item.id === itemId);\n            if (item) {\n                item.disabled = false;\n            }\n        });\n    }\n\n    //To disable toolbar items while multiselection.\n    function disableMultiselectedItems() {\n        const itemIds = ['Align_objects', 'Distribute_objects', 'Group'];\n        itemIds.forEach(itemId => {\n            const item = toolbarObj.items.find(item => item.id === itemId);\n            if (item) {\n                item.disabled = true;\n            }\n        });\n    }\n\n    //Initialize the flowshapes for the symbol palatte\n    var shapes = [\n        { id: 'terminator', shape: { type: 'Flow', shape: 'Terminator' } },\n        { id: 'process', shape: { type: 'Flow', shape: 'Process' } },\n        { id: 'decision', shape: { type: 'Flow', shape: 'Decision' } },\n        { id: 'document', shape: { type: 'Flow', shape: 'Document' } },\n        { id: 'preDefinedProcess', shape: { type: 'Flow', shape: 'PreDefinedProcess' } },\n        { id: 'paperTap', shape: { type: 'Flow', shape: 'PaperTap' } },\n        { id: 'directData', shape: { type: 'Flow', shape: 'DirectData' } },\n        { id: 'sequentialData', shape: { type: 'Flow', shape: 'SequentialData' } },\n        { id: 'sort', shape: { type: 'Flow', shape: 'Sort' } },\n        { id: 'multiDocument', shape: { type: 'Flow', shape: 'MultiDocument' } },\n        { id: 'collate', shape: { type: 'Flow', shape: 'Collate' } },\n        { id: 'summingJunction', shape: { type: 'Flow', shape: 'SummingJunction' } },\n        { id: 'or', shape: { type: 'Flow', shape: 'Or' } },\n        { id: 'internalStorage', shape: { type: 'Flow', shape: 'InternalStorage' } },\n        { id: 'extract', shape: { type: 'Flow', shape: 'Extract' } },\n        { id: 'manualOperation', shape: { type: 'Flow', shape: 'ManualOperation' } },\n        { id: 'merge', shape: { type: 'Flow', shape: 'Merge' } },\n        { id: 'offPageReference', shape: { type: 'Flow', shape: 'OffPageReference' } },\n        { id: 'sequentialAccessStorage', shape: { type: 'Flow', shape: 'SequentialAccessStorage' } },\n        { id: 'annotation', shape: { type: 'Flow', shape: 'Annotation' } },\n        { id: 'annotation2', shape: { type: 'Flow', shape: 'Annotation2' } },\n        { id: 'data', shape: { type: 'Flow', shape: 'Data' } },\n        { id: 'card', shape: { type: 'Flow', shape: 'Card' } },\n        { id: 'delay', shape: { type: 'Flow', shape: 'Delay' } },\n    ];\n\n    //Initializes connector symbols for the symbol palette\n    var connectorSymbols = [\n        {\n            id: 'Link1', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n            style: { strokeWidth: 1, strokeColor: '#757575' }, targetDecorator: { shape: 'Arrow', style: { strokeColor: '#757575', fill: '#757575' } }\n        },\n        {\n            id: 'link2', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n            targetDecorator: { shape: 'None' }, style: { strokeWidth: 1, strokeColor: '#757575' }\n        },\n        {\n            id: 'Link3', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n            style: { strokeWidth: 1, strokeColor: '#757575' }, targetDecorator: { shape: 'Arrow', style: { strokeColor: '#757575', fill: '#757575' } }\n        },\n        {\n            id: 'link4', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n            targetDecorator: { shape: 'None' }, style: { strokeWidth: 1, strokeColor: '#757575' },\n        },\n        {\n            id: 'link5', type: 'Bezier', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n            targetDecorator: { shape: 'None' }, style: { strokeWidth: 1, strokeColor: '#757575' },\n        },\n    ];\n    //Initializes the symbol palette\n    var palette = new ej.diagrams.SymbolPalette({\n        expandMode: 'Multiple',\n        palettes: [\n            { id: 'flow', expanded: true, symbols: shapes, iconCss: 'e-ddb-icons e-flow', title: 'Flow Shapes' },\n            { id: 'connectors', expanded: true, symbols: connectorSymbols, iconCss: 'e-ddb-icons e-connector', title: 'Connectors' }\n        ],\n        width: '100%', height: '700px', symbolHeight: 60, symbolWidth: 60,\n        getNodeDefaults: function (symbol) {\n            if (symbol.id === 'terminator' || symbol.id === 'process') {\n                symbol.width = 80;\n                symbol.height = 40;\n            }\n            else if (symbol.id === 'decision' || symbol.id === 'document' || symbol.id === 'preDefinedProcess' ||\n                symbol.id === 'paperTap' || symbol.id === 'directData' || symbol.id === 'multiDocument' || symbol.id === 'data') {\n                symbol.width = 50;\n                symbol.height = 40;\n            }\n            else {\n                symbol.width = 50;\n                symbol.height = 50;\n            }\n            symbol.style.strokeColor = '#757575';\n        },\n        enableSearch: true,\n        symbolMargin: { left: 15, right: 15, top: 15, bottom: 15 },\n        getSymbolInfo: function (symbol) {\n            return { fit: true };\n        }\n    });\n    palette.appendTo('#symbolpalette');\n    addEvents();\n\n    //Initializes toolbar Items.\n    function toolbarItems() {\n        var items = [\n            { prefixIcon: 'e-icons e-circle-add', tooltipText: 'New Diagram', id: 'New_Diagram' },\n            { prefixIcon: 'e-icons e-folder-open', tooltipText: 'Open Diagram', id: 'Open_diagram' },\n            { prefixIcon: 'e-icons e-save', tooltipText: 'Save Diagram', id: 'Save' },\n            { prefixIcon: 'e-print e-icons', tooltipText: 'Print Diagram', id: 'Print' },\n            { type: 'Input', tooltipText: 'Export Diagram', template: '<button id=\"exportBtn\" style=\"width:100%;\"></button>', id: 'Export' },\n\n            { type: 'Separator' },\n\n            { disabled: true, prefixIcon: 'e-cut e-icons', tooltipText: 'Cut', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Cut' },\n            { disabled: true, prefixIcon: 'e-copy e-icons', tooltipText: 'Copy', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Copy' },\n            { prefixIcon: 'e-icons e-paste', tooltipText: 'Paste', disabled: true, id: 'Paste' },\n\n            { type: 'Separator' },\n\n            { disabled: true, prefixIcon: 'e-icons e-undo tb-icons', tooltipText: 'Undo', cssClass: 'tb-item-start tb-item-undo', id: 'Undo' },\n            { disabled: true, prefixIcon: 'e-icons e-redo tb-icons', tooltipText: 'Redo', cssClass: 'tb-item-end tb-item-redo', id: 'Redo' },\n\n            { type: 'Separator' },\n\n            { prefixIcon: 'e-pan e-icons', tooltipText: 'Pan Tool', cssClass: 'tb-item-start pan-item', id: 'Pan_tool' },\n            { prefixIcon: 'e-mouse-pointer e-icons', tooltipText: 'Select Tool', cssClass: 'tb-item-middle tb-item-selected', id: 'Select_tool' },\n            { tooltipText: 'Draw Connectors', template: '<button id=\"conTypeBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle', id: 'Draw_con' },\n            { tooltipText: 'Draw Shapes', template: '<button id=\"shapesBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle', id: 'Draw_shapes' },\n            { prefixIcon: 'e-caption e-icons', tooltipText: 'Text Tool', cssClass: 'tb-item-end', id: 'Text_tool' },\n\n            { type: 'Separator' },\n\n            { disabled: true, prefixIcon: 'e-icons e-lock', tooltipText: 'Lock', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Lock' },\n            { disabled: true, prefixIcon: 'e-trash e-icons', tooltipText: 'Delete', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Delete' },\n\n            { type: 'Separator', align: 'Center' },\n\n            { disabled: true, type: 'Input', tooltipText: 'Align Objects', template: '<button id=\"alignBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle  tb-item-align-category', id: 'Align_objects' },\n            { disabled: true, type: 'Input', tooltipText: 'Distribute Objects', template: '<button id=\"distributeBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-space-category', id: 'Distribute_objects' },\n\n            { type: 'Separator' },\n\n            { disabled: true, type: 'Input', tooltipText: 'Order Commands', template: '<button id=\"orderBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Order' },\n\n            { type: 'Separator' },\n\n            { disabled: true, type: 'Input', tooltipText: 'Group/Ungroup', template: '<button id=\"groupBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-align-category', id: 'Group' },\n\n            { type: 'Separator' },\n\n            { disabled: true, type: 'Input', tooltipText: 'Rotate', template: '<button id=\"rotateBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Rotate' },\n\n            { type: 'Separator' },\n\n            { disabled: true, type: 'Input', tooltipText: 'Flip', template: '<button id=\"flipBtn\" style=\"width:100%;\"></button>', cssClass: 'tb-item-middle tb-item-lock-category', id: 'Flip' },\n\n            { type: 'Separator' },\n\n            { cssClass: 'tb-item-end tb-zoom-dropdown-btn', template: '<button id=\"btnZoomIncrement\"></button>', id: 'Zoom' },\n        ];\n        return items;\n    }\n    var conTypeBtn = new ej.splitbuttons.DropDownButton({\n        items: conTypeItems, iconCss: 'e-ddb-icons e-connector e-icons',\n        select: function (args) { onConnectorSelect(args); }\n    });\n    conTypeBtn.appendTo('#conTypeBtn');\n\n    var shapesBtn = new ej.splitbuttons.DropDownButton({\n        items: shapesItems, iconCss: 'e-shapes e-icons',\n        select: function (args) { onShapesSelect(args); }\n    });\n    shapesBtn.appendTo('#shapesBtn');\n\n    var btnZoomIncrement = new ej.splitbuttons.DropDownButton({\n        items: zoomMenuItems, content: Math.round(diagram.scrollSettings.currentZoom * 100) + ' %', select: zoomChange,\n    });\n    btnZoomIncrement.appendTo('#btnZoomIncrement');\n\n    var exportBtn = new ej.splitbuttons.DropDownButton({\n        items: exportItems, iconCss: 'e-ddb-icons e-export', select: onselectExport,\n    });\n    exportBtn.appendTo('#exportBtn');\n\n    var groupBtn = new ej.splitbuttons.DropDownButton({\n        items: groupItems, iconCss: 'e-icons e-group-1', select: onSelectGroup\n    });\n    groupBtn.appendTo('#groupBtn');\n\n    var alignBtn = new ej.splitbuttons.DropDownButton({\n        items: alignItems, iconCss: 'sf-icon-align-center-1', select: onSelectAlignObjects\n    });\n    alignBtn.appendTo('#alignBtn');\n\n    var distributeBtn = new ej.splitbuttons.DropDownButton({\n        items: distributeItems, iconCss: 'sf-icon-distribute-vertical', select: onSelectDistributeObjects\n    });\n    distributeBtn.appendTo('#distributeBtn');\n\n    var orderBtn = new ej.splitbuttons.DropDownButton({\n        items: orderItems, iconCss: 'sf-icon-order', select: onSelectOrder\n    });\n    orderBtn.appendTo('#orderBtn');\n\n    var rotateBtn = new ej.splitbuttons.DropDownButton({\n        items: rotateItems, iconCss: 'e-icons e-repeat', select: onSelectRotate\n    });\n    rotateBtn.appendTo('#rotateBtn');\n\n    var flipBtn = new ej.splitbuttons.DropDownButton({\n        items: flipItems, iconCss: 'sf-icon-flip-horizontal', select: onSelectFlip\n    });\n    flipBtn.appendTo('#flipBtn');\n\n    var rotateItems = [\n        { iconCss: 'e-icons e-transform-right', text: 'Rotate Clockwise' },\n        { iconCss: 'e-icons e-transform-left', text: 'Rotate Counter-Clockwise' }\n    ];\n    var flipItems = [\n        { iconCss: 'e-icons e-flip-horizontal', text: 'Flip Horizontal' },\n        { iconCss: 'e-icons e-flip-vertical', text: 'Flip Vertical' }\n    ];\n    var alignItems = [\n        { iconCss: 'sf-icon-align-left-1', text: 'Align Left' },\n        { iconCss: 'sf-icon-align-center-1', text: 'Align Center' },\n        { iconCss: 'sf-icon-align-right-1', text: 'Align Right' },\n        { iconCss: 'sf-icon-align-top-1', text: 'Align Top' },\n        { iconCss: 'sf-icon-align-middle-1', text: 'Align Middle' },\n        { iconCss: 'sf-icon-align-bottom-1', text: 'Align Bottom' },\n    ];\n    var distributeItems = [\n        { iconCss: 'sf-icon-distribute-vertical', text: 'Distribute Objects Vertically', },\n        { iconCss: 'sf-icon-distribute-horizontal', text: 'Distribute Objects Horizontally', },\n    ];\n    var orderItems = [\n        { iconCss: 'e-icons e-bring-forward', text: 'Bring Forward' },\n        { iconCss: 'e-icons e-bring-to-front', text: 'Bring To Front' },\n        { iconCss: 'e-icons e-send-backward', text: 'Send Backward' },\n        { iconCss: 'e-icons e-send-to-back', text: 'Send To Back' }\n    ];\n    var zoomMenuItems = [\n        { text: 'Zoom In' }, { text: 'Zoom Out' }, { text: 'Zoom to Fit' }, { text: 'Zoom to 50%' },\n        { text: 'Zoom to 100%' }, { text: 'Zoom to 200%' }];\n\n    var conTypeItems = [\n        { text: 'Straight', iconCss: 'e-icons e-line' },\n        { text: 'Orthogonal', iconCss: 'sf-icon-orthogonal' },\n        { text: 'Bezier', iconCss: 'sf-icon-bezier' }];\n\n    var shapesItems = [\n        { text: 'Rectangle', iconCss: 'e-rectangle e-icons' },\n        { text: 'Ellipse', iconCss: ' e-circle e-icons' },\n        { text: 'Polygon', iconCss: 'e-line e-icons' }];\n\n    var exportItems = [\n        { text: 'JPG' }, { text: 'PNG' }, { text: 'SVG' }];\n\n    var groupItems = [\n        { text: 'Group', iconCss: 'e-icons e-group-1' }, { text: 'Ungroup', iconCss: 'e-icons e-ungroup-1' }];\n\n    //Initialize Toolbar component\n    var toolbarObj = new ej.navigations.Toolbar({\n        clicked: function (args) { toolbarClick(args); },\n        created: function (args) {\n            if (diagram !== undefined) {\n                var conTypeBtn = new ej.splitbuttons.DropDownButton({\n                    items: conTypeItems, iconCss: 'e-ddb-icons e-connector e-icons',\n                    select: function (args) { onConnectorSelect(args); }\n                });\n                conTypeBtn.appendTo('#conTypeBtn');\n                var btnZoomIncrement = new ej.splitbuttons.DropDownButton({\n                    items: zoomMenuItems, content: Math.round(diagram.scrollSettings.currentZoom * 100) + ' %', select: zoomChange,\n                });\n                btnZoomIncrement.appendTo('#btnZoomIncrement');\n                var shapesBtn = new ej.splitbuttons.DropDownButton({\n                    items: shapesItems, iconCss: 'e-shapes e-icons',\n                    select: function (args) { onShapesSelect(args); }\n                });\n                shapesBtn.appendTo('#shapesBtn');\n                var exportBtn = new ej.splitbuttons.DropDownButton({\n                    items: exportItems, iconCss: 'e-ddb-icons e-export', select: function (args) { onselectExport(args); },\n                });\n                exportBtn.appendTo('#exportBtn');\n\n                var groupBtn = new ej.splitbuttons.DropDownButton({\n                    items: groupItems, iconCss: 'e-icons e-group-1', select: function (args) { onSelectGroup(args); }\n                });\n                groupBtn.appendTo('#groupBtn');\n                var alignBtn = new ej.splitbuttons.DropDownButton({\n                    items: alignItems, iconCss: 'sf-icon-align-center-1', select: function (args) { onSelectAlignObjects(args); }\n                });\n                alignBtn.appendTo('#alignBtn');\n\n                var distributeBtn = new ej.splitbuttons.DropDownButton({\n                    items: distributeItems, iconCss: 'sf-icon-distribute-vertical', select: function (args) { onSelectDistributeObjects(args); }\n                });\n                distributeBtn.appendTo('#distributeBtn');\n                var orderBtn = new ej.splitbuttons.DropDownButton({\n                    items: orderItems, iconCss: 'e-icons e-order', select: function (args) { onSelectOrder(args); }\n                });\n                orderBtn.appendTo('#orderBtn');\n                var rotateBtn = new ej.splitbuttons.DropDownButton({\n                    items: rotateItems, iconCss: 'e-icons e-repeat', select: function (args) { onSelectRotate(args); }\n                });\n                rotateBtn.appendTo('#rotateBtn');\n                var flipBtn = new ej.splitbuttons.DropDownButton({\n                    items: flipItems, iconCss: 'e-icons e-flip-horizontal', select: function (args) { onSelectFlip(args); }\n                });\n                flipBtn.appendTo('#flipBtn');\n                toolbarObj.refreshOverflow();\n            }\n\n        },\n        items: toolbarItems(),\n        overflowMode: 'Scrollable',\n        width: '100%'\n    });\n\n    toolbarObj.appendTo('#toolbarEditor');\n\n    // To perform zoom operation.\n    function zoomChange(args) {\n        var zoomCurrentValue = document.getElementById(\"btnZoomIncrement\").ej2_instances[0];\n        var currentZoom = diagram.scrollSettings.currentZoom;\n        var zoom = {};\n        switch (args.item.text) {\n            case 'Zoom In':\n                diagram.zoomTo({ type: 'ZoomIn', zoomFactor: 0.2 });\n                zoomCurrentValue.content = (diagram.scrollSettings.currentZoom * 100).toFixed() + '%';\n                break;\n            case 'Zoom Out':\n                diagram.zoomTo({ type: 'ZoomOut', zoomFactor: 0.2 });\n                zoomCurrentValue.content = (diagram.scrollSettings.currentZoom * 100).toFixed() + '%';\n                break;\n            case 'Zoom to Fit':\n                zoom.zoomFactor = 1 / currentZoom - 1;\n                diagram.zoomTo(zoom);\n                zoomCurrentValue.content = diagram.scrollSettings.currentZoom;\n                break;\n            case 'Zoom to 50%':\n                if (currentZoom === 0.5) {\n                    currentZoom = 0;\n                    zoom.zoomFactor = (0.5 / currentZoom) - 1;\n                    diagram.zoomTo(zoom);\n                } else {\n                    zoom.zoomFactor = (0.5 / currentZoom) - 1;\n                    diagram.zoomTo(zoom);\n                }\n                break;\n            case 'Zoom to 100%':\n                if (currentZoom === 1) {\n                    currentZoom = 0;\n                    zoom.zoomFactor = (1 / currentZoom) - 1;\n                    diagram.zoomTo(zoom);\n                }\n                else {\n                    zoom.zoomFactor = (1 / currentZoom) - 1;\n                    diagram.zoomTo(zoom);\n                }\n                break;\n            case 'Zoom to 200%':\n                if (currentZoom === 2) {\n                    currentZoom = 0;\n                    zoom.zoomFactor = (2 / currentZoom) - 1;\n                    diagram.zoomTo(zoom);\n                }\n                else {\n                    zoom.zoomFactor = (2 / currentZoom) - 1;\n                    diagram.zoomTo(zoom);\n                }\n                break;\n        }\n\n        zoomCurrentValue.content = Math.round(diagram.scrollSettings.currentZoom * 100) + ' %';\n\n    }\n\n    //To handle selection of connectors.\n    function onConnectorSelect(args) {\n        diagram.clearSelection();\n        diagram.drawingObject = { type: args.item.text };\n        diagram.tool = ej.diagrams.DiagramTools.ContinuousDraw;\n        diagram.selectedItems.userHandles = [];\n        diagram.dataBind();\n    }\n\n    //To handle selection of shapes.\n    function onShapesSelect(args) {\n        diagram.clearSelection();\n        diagram.drawingObject = { shape: { shape: args.item.text } };\n        diagram.tool = ej.diagrams.DiagramTools.ContinuousDraw;\n        diagram.selectedItems.userHandles = [];\n        diagram.dataBind();\n    }\n    //Export the diagraming object based on the format.\n    function onselectExport(args) {\n        var exportOptions = {};\n        exportOptions.format = args.item.text;\n        exportOptions.mode = 'Download';\n        exportOptions.region = 'PageSettings';\n        exportOptions.fileName = 'Export';\n        exportOptions.margin = { left: 0, top: 0, bottom: 0, right: 0 };\n        diagram.exportDiagram(exportOptions);\n    }\n\n    //To perform group and ungroup diagram objects.\n    function onSelectGroup(args) {\n        if (args.item.text === 'Group') {\n            diagram.group();\n        }\n        else if (args.item.text === 'Ungroup') {\n            diagram.unGroup();\n        }\n    }\n\n    //To align selelcted diagram objects.\n    function onSelectAlignObjects(args) {\n        var item = args.item.text;\n        var alignType = item.replace('Align', '');\n        var alignType1 = alignType.charAt(0).toUpperCase() + alignType.slice(1);\n        diagram.align(alignType1.trim());\n    }\n\n    //To distribute selected objects horizontally and vertically.\n    function onSelectDistributeObjects(args) {\n\n        diagram.distribute(args.item.text === 'Distribute Objects Vertically' ? 'BottomToTop' : 'RightToLeft');\n    }\n\n    //To execute order commands.\n    function onSelectOrder(args) {\n        switch (args.item.text) {\n            case 'Bring Forward':\n                diagram.moveForward();\n                break;\n            case 'Bring To Front':\n                diagram.bringToFront();\n                break;\n            case 'Send Backward':\n                diagram.sendBackward();\n                break;\n            case 'Send To Back':\n                diagram.sendToBack();\n                break;\n        }\n    }\n\n    //To Rotate the selected diagram objects.\n    function onSelectRotate(args) {\n        diagram.rotate(diagram.selectedItems, args.item.text === 'Rotate Clockwise' ? 90 : -90);\n    }\n    function onSelectFlip(args) {\n        flipObjects(args.item.text);\n    }\n\n    // To flip diagram objects.\n    function flipObjects(flipType) {\n        var selectedObjects = diagram.selectedItems.nodes.concat(diagram.selectedItems.connectors);\n        for (i = 0; i < selectedObjects.length; i++) {\n            selectedObjects[i].flip = flipType === 'Flip Horizontal' ? 'Horizontal' : 'Vertical';\n        }\n        diagram.dataBind();\n    }\n\n    //To handle toolbar click events.\n    function toolbarClick(args) {\n        var pasteIndex = toolbarObj.items.findIndex(item => item.id === 'Paste');\n        var item = args.item.tooltipText;\n        switch (item) {\n            case 'Undo':\n                diagram.undo();\n                break;\n            case 'Redo':\n                diagram.redo();\n                break;\n            case 'Lock':\n                lockObject();\n                break;\n            case 'Cut':\n                diagram.cut();\n                if (pasteIndex !== -1) {\n                    toolbarObj.items[pasteIndex].disabled = false;\n                }\n                break;\n            case 'Copy':\n                diagram.copy();\n                if (pasteIndex !== -1) {\n                    toolbarObj.items[pasteIndex].disabled = false;\n                }\n                break;\n            case 'Paste':\n                diagram.paste();\n                break;\n            case 'Delete':\n                diagram.remove();\n                break;\n            case 'Select Tool':\n                diagram.clearSelection();\n                diagram.tool = ej.diagrams.DiagramTools.Default;\n                break;\n            case 'Text Tool':\n                diagram.clearSelection();\n                diagram.selectedItems.userHandles = [];\n                diagram.drawingObject = { shape: { type: 'Text' }, };\n                diagram.tool = ej.diagrams.DiagramTools.ContinuousDraw;\n                break;\n            case 'Pan Tool':\n                diagram.clearSelection();\n                diagram.tool = ej.diagrams.DiagramTools.ZoomPan;\n                break;\n            case 'New Diagram':\n                diagram.clear();\n                historyChange();\n                break;\n            case 'Print Diagram':\n                printDiagram(args);\n                break;\n            case 'Save Diagram':\n                download(diagram.saveDiagram());\n                break;\n            case 'Open Diagram':\n                document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\n                break;\n        }\n        diagram.dataBind();\n    }\n\n    var uploadObject = new ej.inputs.Uploader({\n        asyncSettings: {\n            saveUrl: 'https://services.syncfusion.com/js/production/api/FileUploader/Save',\n            removeUrl: 'https://services.syncfusion.com/js/production/api/FileUploader/Remove'\n        }, success: onUploadSuccess, showFileList: false\n\n    });\n    uploadObject.appendTo('#fileupload');\n\n    //set up uploaded file and call loadDiagram.\n    function onUploadSuccess(args) {\n        var file = args.file;\n        var rawFile = file.rawFile;\n        var reader = new FileReader();\n        reader.readAsText(rawFile);\n        reader.onloadend = loadDiagram;\n    }\n\n    //Load the diagraming object.\n    function loadDiagram(event) {\n        diagram.loadDiagram(event.target.result);\n    }\n\n    // Set up print options and initiate printing of the diagram.\n    function printDiagram(args) {\n        var options = {};\n        options.mode = 'Download';\n        options.region = 'Content';\n        options.multiplePage = diagram.pageSettings.multiplePage;\n        options.pageHeight = diagram.pageSettings.height;\n        options.pageWidth = diagram.pageSettings.width;\n        diagram.print(options);\n    }\n\n    //Function to download the diagram.\n    function download(data) {\n        if (window.navigator.msSaveBlob) {\n            var blob = new Blob([data], { type: 'data:text/json;charset=utf-8,' });\n            window.navigator.msSaveOrOpenBlob(blob, 'Diagram.json');\n        }\n        else {\n            var dataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(data);\n            var element = document.createElement('a');\n            element.href = dataString;\n            element.download = 'Diagram.json';\n            document.body.appendChild(element);\n            element.click();\n            element.remove();\n        }\n    }\n\n    // To lock the selected diagram element.\n    function lockObject(args) {\n        var isChecked;\n        for (var i = 0; i < diagram.selectedItems.nodes.length; i++) {\n            var node = diagram.selectedItems.nodes[i];\n            if (node.constraints & ej.diagrams.NodeConstraints.Drag) {\n                node.constraints = ej.diagrams.NodeConstraints.PointerEvents | ej.diagrams.NodeConstraints.Select | ej.diagrams.NodeConstraints.ReadOnly;\n                isChecked = true;\n            } else {\n                node.constraints = ej.diagrams.NodeConstraints.Default;\n                isChecked = false;\n            }\n        }\n\n        for (var j = 0; j < diagram.selectedItems.connectors.length; j++) {\n            var connector = diagram.selectedItems.connectors[j];\n            if (connector.constraints & ej.diagrams.ConnectorConstraints.Drag) {\n                connector.constraints = ej.diagrams.ConnectorConstraints.PointerEvents | ej.diagrams.ConnectorConstraints.Select | ej.diagrams.ConnectorConstraints.ReadOnly;\n                isChecked = true;\n            } else {\n                connector.constraints = ej.diagrams.ConnectorConstraints.Default;\n                isChecked = false;\n            }\n        }\n        updateToolbarState(isChecked);\n        diagram.dataBind();\n    }\n\n    // Function to update the toolbar state based on selected nodes constraints\n    function updateToolbarState(isLocked) {\n        const itemIds = ['Cut', 'Copy', 'Delete', 'Order', 'Rotate', 'Flip'];\n        itemIds.forEach(itemId => {\n            const item = toolbarObj.items.find(item => item.id === itemId);\n            if (item) {\n                item.disabled = isLocked;\n            }\n        });\n        var index = toolbarObj.items.findIndex(item => item.id === 'Lock');\n        if (index !== -1) {\n            toolbarObj.items[index].disabled = false;\n        }\n    }\n\n\n\n"}