{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/diagram/venn-diagram/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n\n\n</div></body></html>","index.js":"{{ripple}}/*jslint esversion: 6 */\n/**\n * Venn Diagram\n */\nej.diagrams.Diagram.Inject();\n\n// Basic shape configuration for nodes\nconst basicShape = { type: \"Basic\", shape: \"Ellipse\" };\n\n// Creates a node with specified properties.\nfunction createNode(id, offsetX, offsetY, width, height, annotations, style) {\n    return {\n        id,\n        offsetX,\n        offsetY,\n        width,\n        height,\n        shape: basicShape,\n        annotations,\n        style\n    };\n}\n\n// Styles for different node categories\nconst styles = {\n    dataScience: { fill: \"#f2f2f2\", strokeColor: \"#acacac\", strokeWidth: 1 },\n    trignometry: { fill: \"#feb42f\", opacity: 0.2, strokeColor: \"#feb42f\" },\n    expertise: { fill: \"#6acbd4\", opacity: 0.2, strokeColor: \"#6acbd4\" },\n    programming: { fill: \"#ed1d79\", opacity: 0.2, strokeColor: \"#ed1d79\" }\n};\n\n// Nodes initialization with specific properties\nlet nodes= [\n    createNode(\"datascience\", 450, 232, 400, 400, [{ content: \"Data Science\", offset: { x: 0.5, y: 0.1 } }], styles.dataScience),\n    createNode(\"trignometry\", 515, 205, 200, 200, [\n        { content: \"Trignometry\", offset: { x: 0.5, y: 0.4 }, horizontalAlignment: \"Left\" },\n        { content: \"Thesis\", offset: { x: 0.45, y: 0.8 } }\n    ], styles.trignometry),\n    createNode(\"expertise\", 445, 290, 200, 200, [{ content: \"Expertise\", offset: { x: 0.5, y: 0.7 }, verticalAlignment: \"Top\" }], styles.expertise),\n    createNode(\"programming\", 388, 205, 200, 200, [\n        { content: \"Programming\", offset: { x: 0.5, y: 0.4 }, horizontalAlignment: \"Right\" },\n        { content: \"Assembly\", offset: { x: 0.7, y: 0.35 }, horizontalAlignment: \"Left\" },\n        { content: \"Horizon\", offset: { x: 0.7, y: 0.6 }, horizontalAlignment: \"Left\" },\n        { content: \"Middleware\", offset: { x: 0.5, y: 0.8 } }\n    ], styles.programming)\n];\n    //Initializes diagram control\n   var diagram = new ej.diagrams.Diagram({\n        width: '100%', height: 580, nodes: nodes,\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None }, tool: ej.diagrams.DiagramTools.ZoomPan\n    });\n    diagram.appendTo('#diagram');\n     /**\n     * Adjusts the diagram view to fit the page .\n     */\n    diagram.fitToPage();\n"}