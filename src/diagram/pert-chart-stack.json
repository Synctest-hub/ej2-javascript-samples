{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/diagram/pert-chart/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div style=\"width:100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n\n\n<style>\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for PERT Chart\n */\n// Injecting required modules\nej.diagrams.Diagram.Inject(ej.diagrams.DataBinding, ej.diagrams.HierarchicalTree, ej.diagrams.ComplexHierarchicalTree);\n\n\n\n    //customization of the node template.\n    function getNodeTemplate(node) {\n        var table = new ej.diagrams.StackPanel();\n        table.style.fill = '#0069d9';\n        table.id = ej.diagrams.randomId();\n        table.orientation = 'Vertical';\n        var nameKey = 'id';\n        var stack = new ej.diagrams.StackPanel();\n        stack.children = [];\n        stack.id = ej.diagrams.randomId();\n        stack.height = 25;\n        stack.orientation = 'Horizontal';\n        stack.horizontalAlignment = 'Stretch';\n        addRows(stack, node);\n        table.children = [(getTextElement(node.data[nameKey], 'Stretch', 170, 'Stretch')), stack];\n        table.children[0].style.color = 'white';\n        table.children[0].style.fontSize = 14;\n        return table;\n    }\n\n    //Function to create a text element with specified content, alignment, width, and vertical alignment\n    function getTextElement(text, horizontalAlignment, width, verticalAlignment) {\n        var textElement = new ej.diagrams.TextElement();\n        textElement.content = text;\n        textElement.id = ej.diagrams.randomId();\n        textElement.width = width;\n        textElement.height = 25;\n        textElement.horizontalAlignment = horizontalAlignment;\n        textElement.verticalAlignment = verticalAlignment;\n        textElement.style.strokeWidth = 1;\n        textElement.style.strokeColor = '#b5b5b5';\n        textElement.style.fill = 'transparent';\n        textElement.style.color = '#3c3c3c';\n        textElement.relativeMode = 'Object';\n        return textElement;\n    }\n\n    //Function to add rows of data representing start date, duration, and end date to a column within a node.\n    function addRows(column, node) {\n        column.children.push(getTextElement(node.data.startDate, 'Left', 70));\n        column.children.push(getTextElement(node.data.duration, 'Center', 30));\n        column.children.push(getTextElement(node.data.endDate, 'Right', 70));\n    }\n    //Initializes diagram control\n    var diagram = new ej.diagrams.Diagram({\n        width: '100%', height: '499px', snapSettings: { constraints: ej.diagrams.SnapConstraints.None },\n        dataSourceSettings: {\n            id: 'id', parentId: 'Category',\n            dataSource: new ej.data.DataManager(window.pertChartData),\n            doBinding: function (nodeModel) {\n                nodeModel.shape = { type: 'Text' };\n            }\n        }, layout: {\n            type: 'ComplexHierarchicalTree', orientation: 'LeftToRight', verticalSpacing: 100, horizontalSpacing: 70\n        },\n        getConnectorDefaults: function (connector) {\n            connector.style.strokeColor = '#979797';\n            connector.targetDecorator.width = 10;\n            connector.targetDecorator.height = 10;\n            connector.targetDecorator.style = { fill: '#979797', strokeColor: '#979797' };\n            return connector;\n        },\n        //used to customize template of the node.\n        setNodeTemplate: function (node) { return getNodeTemplate(node); },\n        tool: ej.diagrams.DiagramTools.ZoomPan\n    });\n    diagram.appendTo('#diagram');\n    diagram.fitToPage();\n\n"}