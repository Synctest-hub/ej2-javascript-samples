{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/diagram/complex-hierarchical-tree/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n        <style>\n                /* Css for images in property panel  */\n                .image-pattern-style {\n                    background-color: white;\n                    background-size: contain;\n                    background-repeat: no-repeat;\n                    height: 75px;\n                    width: calc((100% - 18px) / 3);\n                    cursor: pointer;\n                    border: 1px solid #D5D5D5;\n                    background-position: center;\n                    float: left;\n                }\n            \n                .image-pattern-style:hover {\n                    border-color: gray;\n                    border-width: 2px;\n                }\n                /* Property panel CSS */\n                .row {\n                    margin-left: 0px;\n                    margin-right: 0px;\n                }\n            \n                .row-header {\n                    font-size: 15px;\n                    font-weight: 500;\n                }\n                /* Selection indicator */\n                .e-selected-style {\n                    border-color: #006CE6;\n                    border-width: 2px;\n                }\n            \n                .property-panel-header {\n                    padding-top: 2px;\n                    padding-bottom: 5px;\n                }\n            \n                .col-xs-6 {\n                    padding-left: 0px;\n                    padding-right: 0px;\n                }\n            </style>\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\" style=\"float:right;\">\n    <div class=\"property-panel-header\">\n        Layout Settings\n    </div>\n    <div class=\"row property-panel-content\" id=\"appearance\" style=\"padding-top: 10px\">\n        <div class=\"row row-header\">\n            Orientation\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div class=\"image-pattern-style  e-selected-style\" id=\"topToBottom\" style=\"background-image: url(//ej2.syncfusion.com/javascript/demos/src/diagram/Images/common-orientation/toptobottom.png); margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"bottomToTop\" style=\"background-image: url(//ej2.syncfusion.com/javascript/demos/src/diagram/Images/common-orientation/bottomtotop.png);margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"leftToRight\" style=\"background-image: url(//ej2.syncfusion.com/javascript/demos/src/diagram/Images/common-orientation/lefttoright.png);  margin: 0px 3px\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div class=\"image-pattern-style\" id=\"rightToLeft\" style=\"background-image: url(//ej2.syncfusion.com/javascript/demos/src/diagram/Images/common-orientation/righttoleft.png); margin: 0px 3px\">\n            </div>\n        </div>\n    </div>\n    <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n        <div class=\"row row-header\">\n            Behavior\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Margin X</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"marginLeft\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Margin Y</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"marginTop\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Horizontal Spacing</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"horiontal\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Vertical Spacing</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"vertical\">\n            </div>\n        </div>\n        <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n            <div class=\"row\" style=\"padding-top: 8px\">\n                <input type=\"checkbox\" id=\"checked\" unchecked=\"false\">\n            </div>\n        </div>\n    </div>\n</div>\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Multiple Parent sample\n */\n// tslint:disable-next-line:max-func-body-length\nej.diagrams.Diagram.Inject(\n    ej.diagrams.DataBinding,\n    ej.diagrams.ComplexHierarchicalTree,\n    ej.diagrams.LineDistribution\n);\n\n\n\n\n    var horizontalSpacingObj;\n    var verticalSpacingObj;\n    var marginTopObj;\n    var marginLeftObj;\n\n    //Apply the Alignment for the layout.\n    function update(value) {\n        switch (value) {\n            case 'left':\n                diagram.layout.margin.left = marginLeftObj.value;\n                break;\n            case 'top':\n                diagram.layout.verticalAlignment = 'Top';\n                diagram.layout.margin.top = marginTopObj.value;\n                break;\n            case 'hspacing':\n                diagram.layout.horizontalSpacing = horizontalSpacingObj.value;\n                break;\n            case 'vspacing':\n                diagram.layout.verticalSpacing = verticalSpacingObj.value;\n                break;\n        }\n        diagram.dataBind();\n    }\n    //Initializes diagram control\n    var diagram = new ej.diagrams.Diagram({\n        width: '100%', height: 580,\n        //Configrues hierarchical tree layout\n        layout: {\n            type: 'ComplexHierarchicalTree',\n            connectionPointOrigin: ej.diagrams.ConnectionPointOrigin.DifferentPoint,\n            horizontalSpacing: 40, verticalSpacing: 40, orientation: 'TopToBottom',\n            margin: { left: 10, right: 0, top: 50, bottom: 0 }\n        },\n        //Sets the default values of nodes\n        getNodeDefaults: function (obj) {\n            obj.width = 40;\n            obj.height = 40;\n            obj.shape = { type: 'Basic', shape: 'Rectangle', cornerRadius: 7 };\n        },\n        //Sets the default values of connectors\n        getConnectorDefaults: function (connector) {\n            connector.type = 'Orthogonal';\n            connector.cornerRadius = 7;\n            connector.targetDecorator.height = 7;\n            connector.targetDecorator.width = 7;\n            connector.style.strokeColor = '#6d6d6d';\n        },\n        //Configures data source\n        dataSourceSettings: {\n            id: 'Name', parentId: 'ReportingPerson',\n            dataSource: new ej.data.DataManager(window.multiParentData),\n            //binds the external data with node\n            doBinding: function (nodeModel, data) {\n                nodeModel.style = { fill: data.fillColor, strokeWidth: 1, strokeColor: data.border };\n            }\n        },\n        //Disables all interactions except zoom/pan\n        tool: ej.diagrams.DiagramTools.ZoomPan,\n        snapSettings: { constraints: 0 },\n        created: function () { diagram.fitToPage({ mode: 'Width' }); }\n    });\n    diagram.appendTo('#diagram');\n\n    var checkBoxObj = new ej.buttons.CheckBox({\n        checked: true, label: 'Prevent Connector Overlapping',\n        change: function (args) {\n            diagram.layout.connectionPointOrigin = args.checked ? ej.diagrams.ConnectionPointOrigin.DifferentPoint :\n                ej.diagrams.ConnectionPointOrigin.SamePoint;\n        }\n    });\n    checkBoxObj.appendTo('#checked');\n\n    //used NumericTextBox for left margin of the layout.\n    marginLeftObj = new ej.inputs.NumericTextBox({\n        value: diagram.layout.margin.left,\n        step: 1,\n        format: '##.##',\n        change: function (args) {\n            update('left');\n        }\n    });\n    marginLeftObj.appendTo('#marginLeft');\n    //used NumericTextBox for top margin of the layout.\n    marginTopObj = new ej.inputs.NumericTextBox({\n        value: diagram.layout.margin.top,\n        step: 1,\n        format: '##.##',\n        change: function (args) {\n            update('top');\n        }\n    });\n    marginTopObj.appendTo('#marginTop');\n    //used NumericTextBox for horizontalspacing of the layout.\n    horizontalSpacingObj = new ej.inputs.NumericTextBox({\n        value: diagram.layout.horizontalSpacing,\n        step: 1,\n        format: '##.##',\n        change: function (args) {\n            update('hspacing');\n        }\n    });\n    horizontalSpacingObj.appendTo('#horiontal');\n    //used NumericTextBox for verticalspacing of the layout.\n    verticalSpacingObj = new ej.inputs.NumericTextBox({\n        value: diagram.layout.verticalSpacing,\n        step: 1,\n        format: '##.##',\n        change: function (args) {\n            update('vspacing');\n        }\n    });\n    verticalSpacingObj.appendTo('#vertical');\n\n    //Click Event for Appearance of the layout.\n    document.getElementById('appearance').onclick = function (args) {\n        var target = args.target;\n\n        if (target.className === 'image-pattern-style') {\n            var id = target.id;\n            var orientation1 = id.substring(0, 1).toUpperCase() + id.substring(1, id.length);\n            diagram.layout.orientation = orientation1;\n            diagram.dataBind();\n            diagram.doLayout();\n\n        }\n    };\n"}