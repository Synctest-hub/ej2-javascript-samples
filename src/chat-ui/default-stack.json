{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chat-ui/default/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section chat-ui\">\n    <div class=\"default-chatui\">\n        <div id=\"chatUser1\"></div>\n        <div id=\"chatUser2\"></div>\n    </div>\n</div>\n\n<style>\n    .default-chatui {\n        height: 500px;\n        width: 65%;\n        margin: 0 auto;\n        display: flex;\n        flex-direction: row;\n        gap: 50px;\n    }\n\n    .default-chatui .chat_user1_avatar {\n        background-image: url('//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/andrew.png');\n        background-color: unset;\n    }\n\n    .default-chatui .chat_user2_avatar {\n        background-image: url('//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/reena.png');\n        background-color: unset;\n    }    \n\n    @media only screen and (max-width: 850px) {\n        .default-chatui {\n            flex-direction: column;\n            height: 500px;\n            width: 80%;\n        }\n        .chat-ui.control-section {\n            height: 1050px;\n        }\n    }\n</style>\n\n\n</div></body></html>","index.js":"{{ripple}}this.default = function(){\n    var chatUser1 = new ej.interactivechat.ChatUI({\n        headerText: 'Albert',\n        headerIconCss: \"chat_user1_avatar\",\n        messages: window.chatMessagedata,\n        user: { id: 'user2', user: 'Reena', avatarUrl: '//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/reena.png' },\n        userTyping: (args) => { handleUserTyping(args, chatUser2); },\n        headerToolbar: {\n            items: [\n                { type: 'Input', template: '<button id=\"dduser1Menu\" style=\"border: none; background: none !important;\"></button>', align: 'Right' }\n            ]\n        },\n        messageSend: (args) => {\n            chatUser1.suggestions = [];\n            chatUser2.messages = chatUser2.messages.concat([args.message]);\n        }\n    });\n    chatUser1.appendTo('#chatUser1');\n\n    var chatUser2 = new ej.interactivechat.ChatUI({\n        headerText: 'Reena',\n        headerIconCss: \"chat_user2_avatar\",\n        messages: window.chatMessagedata,\n        suggestions: window.defaultChatSuggestions,\n        user: { id: 'user1', user: 'Albert', avatarUrl: '//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/andrew.png' },\n        headerToolbar: {\n            items: [\n                { type: 'Input', template: '<button id=\"dduser2Menu\" style=\"border: none; background: none !important;\"></button>', align: 'Right' }]\n        },\n        messageSend: (args) => {\n            chatUser2.suggestions = [];\n            chatUser1.messages = chatUser1.messages.concat([args.message]);\n        },\n        userTyping: (args) => { handleUserTyping(args, chatUser1); }\n    });\n    chatUser2.appendTo('#chatUser2');\n\n    function handleUserTyping(args, otherChatUser) {\n        if (!args.isTyping) {\n            otherChatUser.typingUsers = otherChatUser.typingUsers.filter(userItem => userItem.user !== args.user.user);\n        } else {\n            if (!otherChatUser.typingUsers.some(userItem => userItem.user === args.user.user)) {\n                otherChatUser.typingUsers = [...otherChatUser.typingUsers, args.user];\n            }\n        }\n    }\n    const dropdownConfig = (chatUser) => ({\n        items: [\n            { text: 'Mute', iconCss: 'e-icons e-eye-slash' },\n            { separator: true },\n            { text: 'Delete', iconCss: 'e-icons e-trash' }\n        ],\n        iconCss: 'e-icons e-more-horizontal-1',\n        cssClass: 'e-caret-hide',\n        select: (args) => {\n            if (['Mute', 'Unmute'].includes(args.item.text)) {\n                args.item.text = args.item.text === 'Mute' ? 'Unmute' : 'Mute';\n            }\n            if (args.item.text === 'Delete') {\n                chatUser.messages = [];\n            }\n        }\n    });\n\n    new ej.splitbuttons.DropDownButton(dropdownConfig(chatUser1), '#dduser1Menu');\n    new ej.splitbuttons.DropDownButton(dropdownConfig(chatUser2), '#dduser2Menu');\n\n"}