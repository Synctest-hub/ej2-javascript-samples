{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chat-ui/template/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"template-chatui\"> \n        <div id=\"chatTemplate\"></div>\n    </div>\n</div>\n\n<script id=\"emptyChatTemplate\" type=\"text/x-jsrender\">\n    <div class=\"emptychat-content\">\n        <h3><span class=\"e-icons e-comment-show\"></span></h3>\n        <div class=\"emptyChatText\" style=\"font-size: 16px;\">Just a second, we're preparing your chat...</div>\n    </div>\n</script>\n\n<style>\n    .template-chatui {\n        height: 500px;\n        width: 40%;\n        margin: 0 auto;\n    }\n\n    .template-chatui .chat-bot {\n        background-image: url('//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/bot.png');\n        background-color: unset;\n    }\n\n    .template-chatui .emptyChatText {\n        font-size: 16px;\n        font-style: italic;\n    }\n\n    .template-chatui .emptychat-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        text-align: center;\n        align-items: center;\n        padding: 10px;\n        width: 90%;\n        margin: 0 auto;\n        height: 380px;\n    }\n\n    .template-chatui .e-right .message-items {\n        border-radius: 16px 16px 2px 16px;\n    }\n\n    .template-chatui .e-left .message-items {\n        border-radius: 16px 16px 16px 2px;\n    }\n\n    .template-chatui .message-user {\n        height: 30px;\n        width: 30px;\n        margin-right: 3px;\n    }\n\n    .template-chatui .e-left .message-template,\n    .template-chatui .e-right .message-template {\n        display: flex;\n        align-items: flex-end;\n    }\n\n    .template-chatui .message-items.e-card {\n        line-height: 20px;\n        box-shadow: none;\n        background: none;\n    }\n\n    .template-chatui .message-items.e-card:hover {\n        background-color: unset;\n    }\n\n    .template-chatui .e-left .message-template {\n        flex-direction: row;\n        margin-top: 10px;\n    }\n\n    .template-chatui .e-right .message-template {\n        flex-direction: column;\n        padding: 5px;\n    }\n\n    .template-chatui .message-text {\n        margin: 5px;\n        padding: 4px;\n        font-size: 14px;\n    }\n\n    .template-chatui .message-suggestions {\n        margin: 10px 30px;\n        display: flex;\n        gap: 5px;\n    }\n\n    .template-chatui .suggestion-button {\n        border-radius: 8px;\n        cursor: pointer;\n        padding: 5px 12px;\n        font-size: 13px;\n    }\n\n    @media only screen and (max-width: 850px) {\n        .template-chatui {\n            width: 70%;\n        }\n        .template-chatui .message-suggestions {\n            flex-direction: column;\n            width: 80%;\n        }\n        .template-chatui .message-suggestions .suggestion-button {\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n    }\n</style>\n\n\n</div></body></html>","index.js":"{{ripple}}\r\n    var templateChatUI = new ej.interactivechat.ChatUI({\r\n        headerText: \"Order Assistant\",\r\n        headerIconCss: \"chat-bot\",\r\n        showTimeBreak: true,\r\n        showFooter: false,\r\n        autoScrollToBottom: true,\r\n        user: { id: 'admin', user: 'Admin', avatarUrl: '//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/bot.png' },\r\n        emptyChatTemplate: '#emptyChatTemplate',\r\n        messageTemplate: (context) => messageTemplate(context),\r\n        timeBreakTemplate: (context) => timeBreakTemplate(context),\r\n        messageSend: () => {\r\n            setTimeout(() => {\r\n                var defaultResponse = \"Unfortunately, I don't have information on that. Use any real-time data streaming service to provide chat updates.\";\r\n                var message = {\r\n                    author: { id: 'bot', user: 'Bot', avatarUrl: '//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/bot.png' },\r\n                    text: defaultResponse\r\n                };\r\n                templateChatUI.addMessage(message);\r\n            }, 500);\r\n        },\r\n    });\r\n    templateChatUI.appendTo('#chatTemplate');\r\n\r\n    function messageTemplate(context) {\r\n        const isAdmin = context.message.author.id === 'admin';\r\n        const userImage = !isAdmin ? \r\n            `<img class=\"message-user\" src=\"${context.message.author.avatarUrl}\" alt=\"${context.message.author.user}\">` : '';\r\n        const suggestions = context.message.suggestions && context.message.suggestions.length > 0 && !isAdmin ? \r\n            `<div class=\"message-suggestions\">${context.message.suggestions.map(suggestion => `<button class=\"suggestion-button e-btn e-primary e-outline\">${suggestion}</button>`).join('')}</div>` : '';\r\n        return `<div class=\"message-wrapper\">\r\n            <div class=\"message-template\">\r\n                ${userImage}\r\n                <div class=\"message-items e-card\">\r\n                    <div class=\"message-text\">${context.message.text}</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"suggestion-container\">\r\n                ${suggestions}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    function timeBreakTemplate(context) {\r\n        var dateText = context.messageDate;\r\n        if (context.messageDate.toDateString() === new Date().toDateString()) {\r\n            dateText = 'Today';\r\n        }\r\n        return `<div class=\"timebreak-template\">${dateText}</div>`;\r\n    }\r\n\r\n    function bindClickAction() {\r\n        templateChatUI.element.querySelectorAll('.suggestion-button').forEach(suggestion => {\r\n            suggestion.addEventListener('click', () => handleSuggestionClick(suggestion));\r\n        });\r\n    }\r\n\r\n    function handleSuggestionClick(suggestion) {\r\n        const message = window.templateMessagedata.find((message) => message.text === suggestion.innerText);\r\n        if (message) {\r\n            templateChatUI.addMessage(message.text);\r\n            setTimeout(() => {\r\n                var messageModel = {\r\n                    author: { id: 'bot', user: 'Bot', avatarUrl: '//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/bot.png' },\r\n                    text: message.reply,\r\n                    suggestions: message.suggestions\r\n                };\r\n                templateChatUI.addMessage(messageModel);\r\n                bindClickAction();\r\n                if (message.suggestions.length === 0) { templateChatUI.showFooter = true; }\r\n            }, 500);\r\n            suggestion.parentElement.innerHTML = '';\r\n        }\r\n    }\r\n\r\n    // Initial bot message with suggestions\r\n    setTimeout(() => {\r\n        var message = {\r\n            author: { id: 'bot', user: 'Bot', avatarUrl: '//ej2.syncfusion.com/javascript/demos/src/chat-ui/images/bot.png' },\r\n            text: window.templateMessagedata[0].text,\r\n            suggestions: window.templateMessagedata[0].suggestions\r\n        };\r\n        templateChatUI.addMessage(message);\r\n        bindClickAction();\r\n    }, 1500);\r\n"}