{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/schedule/reminder/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n  <div class=\"content-wrapper\">\n    <div id=\"Schedule\"></div>\n    <div id=\"schedule-reminder\">\n    </div>\n  </div>\n</div>\n\n\n\n\n<script id=\"reminder-template\" type=\"text/x-template\">\n  <div class=\"e-toast-template\">\n    <div class=\"e-toast-message\">\n      <div class=\"e-toast-title\">${Subject}</div>\n      <div class=\"e-toast-content\">${StartTime.toLocaleTimeString()} - ${EndTime.toLocaleTimeString()}</div>\n    </div>\n  </div>\n</script></div></body></html>","index.js":"{{ripple}}\r\n  var reminderInterval;\r\n  var data = new ej.base.extend([], window.getReminderEvents(), null, true);\r\n\r\n  var scheduleObj = new ej.schedule.Schedule({\r\n    height: '550px',\r\n    timezone: 'UTC',\r\n    eventSettings: { dataSource: data },\r\n    created: function () {\r\n      reminderInterval = setInterval(refreshEventReminder, 5000);\r\n    },\r\n    destroyed: function () {\r\n      if (reminderInterval) {\r\n        clearInterval(reminderInterval);\r\n      }\r\n    }\r\n  });\r\n  scheduleObj.appendTo('#Schedule');\r\n\r\n  var toastObjReminder = new ej.notifications.Toast({\r\n    cssClass: 'e-schedule-reminder e-toast-info',\r\n    position: { X: 'Right', Y: 'Top' },\r\n    newestOnTop: true,\r\n    showCloseButton: true,\r\n    timeOut: 0,\r\n    target: '.e-schedule',\r\n    animation: {\r\n      hide: { effect: 'SlideRightOut' },\r\n      show: { effect: 'SlideRightIn' }\r\n    }\r\n  });\r\n  toastObjReminder.appendTo('#schedule-reminder');\r\n\r\n  function refreshEventReminder() {\r\n    var eventCollection = scheduleObj.getCurrentViewEvents();\r\n    eventCollection.forEach(function (event, i) {\r\n      var dateFormat = function (date) { return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()); };\r\n      var startTime = dateFormat(event[scheduleObj.eventFields.startTime]);\r\n      var currentTime = dateFormat(new Date(new Date().toUTCString().slice(0, -3)));\r\n      var difference = startTime.getTime() - currentTime.getTime();\r\n      if (startTime.getTime() >= currentTime.getTime() && difference > -1 && difference <= 5000) {\r\n        toastObjReminder.show({\r\n          template: (ej.base.compile(document.getElementById('reminder-template').innerHTML.trim())(event)[0]).outerHTML\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n"}