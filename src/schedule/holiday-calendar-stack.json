{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/schedule/holiday-calendar/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div id=\"Schedule\"></div>\n    <div id=\"schedule-reminder\"></div>\n</div>\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 100%;\">\n                    <div>\n                        <input id=\"holiday-list\" type=\"checkbox\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 100%;\">\n                    <div>\n                        <input id=\"event-schedule\" type=\"checkbox\">\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<style>\n    .schedule-holiday-calendar.e-schedule .e-appointment.e-read-only .e-appointment-details .e-subject.e-text-center {\n        text-align: left;\n    }\n</style>\n\n\n</div></body></html>","index.js":"{{ripple}}\n    var data = new ej.base.extend([], window.scheduleEvent, null, true);\n    var holidayList = new ej.base.extend([], window.holidayList, null, true);\n    var scheduleObj = new ej.schedule.Schedule({\n        height: '100%',\n        width: '100%',\n        rowAutoHeight: true,\n        cssClass: 'schedule-holiday-calendar',\n        selectedDate: new Date(2024, 7, 5),\n        cellClick: clickOnHoliday,\n        cellDoubleClick: clickOnHoliday,\n        resizeStop: onEventDragOrResize,\n        dragStop: onEventDragOrResize,\n        actionBegin: onActionBegin,\n        eventRendered: onEventRender,\n        views: ['Month'],\n        currentView: 'Month',\n        eventSettings: {\n            dataSource: data.concat(holidayList),\n        }\n    });\n    scheduleObj.appendTo('#Schedule');\n\n    var holidayEventCollection = true;\n    var holidayListCollection = true;\n\n    var eventCheckBoxObj = new ej.buttons.CheckBox({\n        label: 'Scheduling event  on holiday',\n        checked: holidayEventCollection,\n        change: updateHolidayEventCollection,\n    });\n    eventCheckBoxObj.appendTo('#event-schedule');\n\n    var holidayCheckBoxObj = new ej.buttons.CheckBox({\n        label: 'Holiday events',\n        checked: holidayListCollection,\n        change: updateHolidayListCollection,\n    });\n    holidayCheckBoxObj.appendTo('#holiday-list');\n\n    var toast = new ej.notifications.Toast({\n        title: 'Information!',\n        cssClass: 'e-toast-info',\n        target: '.e-schedule',\n        icon: 'e-info toast-icons',\n        position: { X: 'Right', Y: 'Top' },\n    });\n    toast.appendTo('#schedule-reminder');\n\n    function updateHolidayEventCollection(args) {\n        holidayEventCollection = args.checked;\n        scheduleObj.refreshEvents();\n    }\n\n    function updateHolidayListCollection(args) {\n        holidayListCollection = args.checked;\n        scheduleObj.refreshEvents();\n    }\n\n    function isEventWithinHolidayRange(eventStartDate, eventEndDate) {\n        var isInRange = false;\n        for (var i = 0; i < holidayList.length; i++) {\n            var holiday = holidayList[i];\n            var holidayStartDate = holiday.StartTime;\n            var holidayEndDate = holiday.EndTime;\n            if ((eventStartDate >= holidayStartDate &&\n                eventStartDate <= holidayEndDate) ||\n                (eventEndDate >= holidayStartDate && eventEndDate <= holidayEndDate) ||\n                (eventStartDate <= holidayStartDate && eventEndDate >= holidayEndDate)\n            ) {\n                isInRange = true;\n                break;\n            }\n        }\n        return isInRange;\n    }\n\n    function showToastForAction(actionName, holidayDateRange) {\n        if (!holidayDateRange) return;\n        var messages = {\n            resizeStop: 'You cannot resize an event within the holiday date range',\n            dragStop: 'You cannot drop an event within the holiday date range',\n            eventCreate: 'You cannot add an event within the holiday date range',\n            eventChange: 'You cannot edit an event within the holiday date range',\n        };\n        if (messages[actionName]) {\n            toast.content = messages[actionName];\n            toast.show();\n        }\n    }\n\n    function onActionBegin(args) {\n        var isHolidayDateRange = false;\n        if (args.requestType === 'eventCreate') {\n            var eventData = args.data[0];\n            isHolidayDateRange =\n                !holidayEventCollection &&\n                !eventData.RecurrenceRule &&\n                isEventWithinHolidayRange(eventData.StartTime, eventData.EndTime);\n        } else if (args.requestType === 'eventChange') {\n            isHolidayDateRange =\n                !holidayEventCollection &&\n                isEventWithinHolidayRange(data.StartTime, data.EndTime);\n        }\n        args.cancel = isHolidayDateRange;\n        showToastForAction(args.requestType, isHolidayDateRange);\n    }\n\n    function onEventRender(args) {\n        var event = args.data;\n        if (!holidayEventCollection) {\n            if (!event.isHoliday && event.IsAllDay) {\n                event.EndTime.setMinutes(event.EndTime.getMinutes() - 1);\n            }\n            args.cancel =\n                !event.isHoliday &&\n                isEventWithinHolidayRange(event.StartTime, event.EndTime);\n        }\n        if (event.isHoliday && !holidayListCollection) {\n            args.cancel = true;\n        }\n        window.applyCategoryColor(args, scheduleObj.currentView);\n    }\n\n    function clickOnHoliday(args) {\n        args.cancel =\n            !holidayEventCollection &&\n            isEventWithinHolidayRange(\n                args.startTime,\n                args.endTime.setMinutes(args.endTime.getMinutes() - 1)\n            );\n    }\n\n    function onEventDragOrResize(args) {\n        var isHolidayDateRange =\n            !holidayEventCollection &&\n            isEventWithinHolidayRange(args.data.StartTime,\n                args.data.EndTime.setMinutes(args.data.EndTime.getMinutes() - 1));\n        args.cancel = isHolidayDateRange;\n        showToastForAction(args.name, isHolidayDateRange);\n    }\n\n"}