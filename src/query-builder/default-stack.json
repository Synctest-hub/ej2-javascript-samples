{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/query-builder/default/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"top-right-button\">\n        <button id=\"json-btn\" class=\"e-control e-btn\">Import JSON</button>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-12 control-section\">\n            <div id=\"dialog\">\n                <textarea class=\"json-content-area\" id=\"dlgContent\"></textarea>\n                <span id=\"dlgSpan\" style=\"visibility: hidden;\">Invalid Query</span>\n            </div>\n            <div id=\"querybuilder\" class=\"row\"></div>\n            <div class=\"e-query-json-preview\" title=\"JSON Preview Container\">\n                <div style=\"border: none; width: 100%;\">\n                    <label style=\"padding: 10px;\">JSON</label>\n                    <div class=\"copy-tooltip\" style=\"display: none;\" id=\"copy-tooltip\">\n                        <div id=\"tooltipclick\">\n                            <div class=\"e-icons copycode\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div readonly=\"\" id=\"json-texarea\" class=\"e-json-content\" title=\"JSON Content\">\n                    <pre class=\"e-pre-content\"></pre>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Default querybuilder sample\n */\n\n\n    var content;\n    var columnData = [\n        { field: 'EmployeeID', label: 'Employee ID', type: 'number' },\n        { field: 'FirstName', label: 'First Name', type: 'string' },\n        { field: 'TitleOfCourtesy', label: 'Title Of Courtesy', type: 'boolean', values: ['Mr.', 'Mrs.'] },\n        { field: 'Title', label: 'Title', type: 'string' },\n        { field: 'HireDate', label: 'Hire Date', type: 'date', format: 'dd/MM/yyyy' },\n        { field: 'Country', label: 'Country', type: 'string' },\n        { field: 'City', label: 'City', type: 'string' }\n    ];\n    var importRules = {\n        'condition': 'and',\n        'rules': [{\n            'label': 'EmployeeID',\n            'field': 'EmployeeID',\n            'type': 'number',\n            'operator': 'equal',\n            'value': 1\n        },\n        {\n            'label': 'Title',\n            'field': 'Title',\n            'type': 'string',\n            'operator': 'equal',\n            'value': 'Sales Manager'\n        }]\n    };\n    var qryBldrObj = new ej.querybuilder.QueryBuilder({\n        dataSource: window.employeeData,\n        columns: columnData,\n        rule: importRules,\n        ruleChange: updateRule,\n        created: createdControl\n    });\n    qryBldrObj.appendTo('#querybuilder');\n    var dialogObj = new ej.popups.Dialog({\n        header: 'JSON',\n        showCloseIcon: true,\n        visible: false,\n        isModal: true,\n        content: document.getElementById(\"dlgContent\"),\n        buttons: [\n            {\n                'click': function () {\n                    dialogObj.hide();\n                },\n                buttonModel: {\n                    cssClass: 'e-flat',\n                    content: 'Cancel'\n                }\n            },\n            {\n                'click': function () {\n                    importQuery();\n                },\n                buttonModel: {\n                    isPrimary: true,\n                    content: 'Import'\n                }\n            }\n        ],\n        beforeOpen: onBeforeopen,\n        width: '700px',\n        height: '420px',\n        animationSettings: { effect: 'Zoom' }\n    });\n    dialogObj.appendTo('#dialog');\n    var tooltip = new ej.popups.Tooltip({\n        content: 'Copied to clipboard',\n        opensOn: 'Click'\n    });\n    tooltip.appendTo('#tooltipclick');\n\n    function createdControl() {\n        if (ej.base.Browser.isDevice) {\n            qryBldrObj.summaryView = true;\n        }\n        updateRule();\n    }\n    function onBeforeopen() {\n        var dlgContentElement = document.getElementById('dlgContent');\n        var errorElem = document.getElementById('dlgSpan');\n        if (dlgContentElement) {\n            var validRule = qryBldrObj.getValidRules(qryBldrObj.rule);\n            content = JSON.stringify(validRule, null, 4);\n            dlgContentElement.value = content;\n            errorElem.style.visibility = 'hidden';\n            if (errorElem.classList.contains(\"error\")) {\n                errorElem.classList.remove(\"error\");\n            }\n        }\n    }\n    function importQuery() {\n        try {\n            var textAreacontent = document.getElementById('dlgContent');\n            qryBldrObj.setRules(JSON.parse(textAreacontent.value));\n            updateRule();\n            dialogObj.hide();\n        }\n        catch (error) {\n            var errorElem = document.getElementById('dlgSpan');\n            if (!errorElem.classList.contains(\"error\")) {\n                errorElem.style.visibility = 'visible';\n                errorElem.classList.add(\"error\");\n            }\n        }\n    }\n    function updateRule() {\n        var validRule = qryBldrObj.getValidRules(qryBldrObj.rule);\n        content = JSON.stringify(validRule, null, 4);\n        document.querySelector('.e-json-content .e-pre-content').textContent = content;\n        hljs.highlightBlock(document.querySelector('.e-json-content'));\n    }\n    document.getElementById('json-btn').onclick = function () {\n        dialogObj.show();\n    };\n    var queryPreviewElem = document.getElementsByClassName('e-query-json-preview')[0];\n    queryPreviewElem.addEventListener('mouseenter', function () {\n        var elem = document.getElementsByClassName(\"copy-tooltip\");\n        elem[0].style.display = 'block';\n    });\n    queryPreviewElem.addEventListener('mouseleave', function () {\n        var elem = document.getElementsByClassName(\"copy-tooltip\");\n        elem[0].style.display = 'none';\n    });\n    var copyElem = document.getElementById('copy-tooltip');\n    copyElem.addEventListener('click', function (args) {\n        navigator.clipboard.writeText(content);\n        setTimeout(function () {\n            (ej.base.getComponent(args.target.closest('.e-tooltip'), 'tooltip')).close();\n        },1000);\n    });\n\n"}