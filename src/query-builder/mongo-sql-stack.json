{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/query-builder/mongo-sql/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"top-right-element\">\n        <button id=\"element\">Import</button>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-12 control-section\">\n            <div id=\"mongo-dialog\">\n                <textarea class=\"mongo-text-area\" id=\"mongo-dlgContent\"></textarea>\n                <span id=\"dlgSpan\" style=\"visibility: hidden;\">Invalid Query</span>\n            </div>\n            <div id=\"querybuilder\" class=\"row\"></div>\n            <div class=\"e-query-preview\" id=\"e-query-preview\">\n                <div class=\"e-tab-section\">\n                    <div>\n                        <div class=\"e-sample-resize-container\">\n                            <div id=\"tab_orientation\">\n                                <div class=\"e-tab-header\">\n                                    <div>SQL</div>\n                                    <div>MongoDB</div>\n                                </div>\n                                <div class=\"e-content\" id=\"e-query-preview\">\n                                    <div class=\"preview\">\n                                        <div class=\"content\">\n                                            <div>\n                                                <div id=\"container\">\n                                                    <label>Format Info:</label>\n                                                    <input type=\"radio\" class=\"e-radio-option\" id=\"element1\">\n                                                    <input type=\"radio\" class=\"e-radio-option\" id=\"element2\">\n                                                    <input type=\"radio\" class=\"e-radio-option\" id=\"element3\">\n                                                    <div class=\"copy-tooltip\" style=\"display: none;\" id=\"copy-sql\">\n                                                        <div id=\"sqlTooltip\">\n                                                            <div class=\"e-icons copycode\"></div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div style=\"margin-top: 10px;\">\n                                                    <div readonly=\"\" class=\"e-text-area-content e-sql-content\">\n                                                        <pre class=\"e-pre-content\"></pre>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div id=\"container\" style=\"height: 54px; padding: 10px;\">\n                                            <div class=\"copy-tooltip\" style=\"display: none;\" id=\"copy-mongo\">\n                                                <div id=\"mongoTooltip\">\n                                                    <div class=\"e-icons copycode\"></div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div style=\"margin-top: 10px;\">\n                                            <div readonly=\"\" class=\"e-text-area-content e-mongo-content\">\n                                                <pre class=\"e-pre-content\"></pre>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n\n","index.js":"{{ripple}}\n\n    var currentvalue = {\n        value: '',\n        rule: ''\n    };\n    var dialogHeader;\n    var items = [\n        {\n            text: 'Import Mongo Query'\n        },\n        {\n            text: 'Import Inline Sql'\n        },\n        {\n            text: 'Import Parameter Sql'\n        },\n        {\n            text: 'Import Named Parameter Sql'\n        }\n    ];\n    var columns = [\n        { field: \"EmployeeID\", label: \"Employee ID\", type: \"number\" },\n        { field: \"FirstName\", label: \"First Name\", type: \"string\" },\n        { field: \"LastName\", label: \"Last Name\", type: \"string\" },\n        { field: \"Age\", label: \"Age\", type: \"number\" },\n        { field: \"IsDeveloper\", label: \"Is Developer\", type: \"boolean\"},\n        { field: \"PrimaryFramework\", label: \"Primary Framework\", type: \"string\" },\n        { field: \"HireDate\", label: \"Hire Date\", type: \"date\", format: \"MM/dd/yyyy\" },\n        { field: \"Country\", label: \"Country\", type: \"string\" }\n    ];\n    var importRules = {\n        condition: \"and\",\n        rules: [\n            { label: \"First Name\", field: \"FirstName\", type: \"string\", operator: \"startswith\", value: \"Andre\" },\n            { label: \"Last Name\", field: \"LastName\", type: \"string\", operator: \"in\", value: ['Davolio', 'Buchanan'] },\n            { label: \"Age\", field: \"Age\", type: \"number\", operator: \"greaterthan\", value: 30 },\n            {\n                condition: \"or\", rules: [\n                    { label: \"Is Developer\", field: \"IsDeveloper\", type: \"boolean\", operator: \"equal\", value: true },\n                    { label: \"Primary Framework\", field: \"PrimaryFramework\", type: \"string\", operator: \"equal\", value: \"React\" }\n                ]\n            },\n            { label: \"Hire Date\", field: \"HireDate\", type: \"date\", operator: \"between\", value: [\"11/28/2023\", \"11/30/2023\"] }\n        ]\n    };\n    var qryBldrObj = new ej.querybuilder.QueryBuilder({\n        dataSource: window.employeeData,\n        columns: columns,\n        rule: importRules,\n        ruleChange: updateRule\n    });\n    qryBldrObj.appendTo('#querybuilder');\n    var selectedIndex = 0;\n    var selectedContent;\n    var queryType = 'inline';\n    var radiobutton = new ej.buttons.RadioButton({ label: 'Inline', cssClass: 'e-custom-radio-btn', name: 'state', checked: true, value: \"Inline\", change: change });\n    radiobutton.appendTo('#element1');\n    radiobutton = new ej.buttons.RadioButton({ label: 'Parameterized', name: 'state', value: \"Parameterized\", change: change, cssClass: 'e-custom-radio-btn' });\n    radiobutton.appendTo('#element2');\n    radiobutton = new ej.buttons.RadioButton({ label: 'Named Parameter', name: 'state', value: \"NamedParameter\", change: change, cssClass: 'e-custom-radio-btn' });\n    radiobutton.appendTo('#element3');\n    var content;\n    function change(args) {\n        queryType = args.value.toLowerCase();\n        updateContent();\n    }\n    function updateContent() {\n        var qbrule = qryBldrObj.getValidRules(qryBldrObj.rule);\n        switch (queryType) {\n            case 'inline':\n                content = qryBldrObj.getSqlFromRules(qbrule);\n                break;\n            case 'parameterized':\n                convertParameterSql(qbrule);\n                break;\n            default:\n                convertNamedParameterSql(qbrule);\n                break;\n        }\n        document.querySelector('.e-sql-content .e-pre-content').textContent = content;\n        hljs.highlightBlock(document.querySelector('.e-sql-content'));\n    }\n    function tabChange(args) {\n        selectedIndex = args.selectedIndex;\n        selectedContent = args.selectedContent;\n        updateRule();\n    }\n    function convertParameterSql(qbrule) {\n        content = JSON.stringify(qryBldrObj.getParameterizedSql(qbrule), null, 4);\n    }\n    function convertNamedParameterSql(qbrule) {\n        content = JSON.stringify(qryBldrObj.getParameterizedNamedSql(qbrule), null, 4);\n    }\n    var dialogObj = new ej.popups.Dialog({\n        content: document.getElementById(\"mongo-dlgContent\"),\n        showCloseIcon: true,\n        visible: false,\n        isModal: true,\n        buttons: [\n            {\n                'click': function () {\n                    dialogObj.hide();\n                },\n                buttonModel: {\n                    content: 'Cancel',\n                    cssClass: 'e-flat'\n                }\n            },\n            {\n                'click': function () {\n                    importQuery();\n                },\n                buttonModel: {\n                    content: 'Import',\n                    isPrimary: true,\n                }\n            }\n        ],\n        width: '700px',\n        height: '420px',\n        animationSettings: { effect: 'Zoom' },\n        beforeOpen: onBeforeopen\n    });\n    dialogObj.appendTo('#mongo-dialog');\n    var tabObj = new ej.navigations.Tab({\n        height: 320,\n        created: updateContent,\n        selected: tabChange\n    });\n    tabObj.appendTo('#tab_orientation');\n    var sqlTooltip = new ej.popups.Tooltip({\n        opensOn: 'Click',\n        content: 'Copied to clipboard'\n    });\n    sqlTooltip.appendTo('#sqlTooltip');\n    var mongoTooltip = new ej.popups.Tooltip({\n        opensOn: 'Click',\n        content: 'Copied to clipboard'\n    });\n    mongoTooltip.appendTo('#mongoTooltip');\n    var ddbOption = {\n        items: items,\n        cssClass: 'e-caret-hide',\n        select: function (args) {\n            var validRule = qryBldrObj.getValidRules(qryBldrObj.rule);\n            switch (args.item.text) {\n                case 'Import Mongo Query':\n                    var mongoQuery = JSON.parse(qryBldrObj.getMongoQuery(validRule));\n                    mongoQuery = JSON.stringify(mongoQuery, null, 4);\n                    currentvalue.value = mongoQuery;\n                    currentvalue.rule = 'mongo';\n                    dialogHeader = 'Mongo';\n                    dialogObj.show();\n                    break;\n                case 'Import Inline Sql':\n                    currentvalue.value = qryBldrObj.getSqlFromRules(validRule);\n                    currentvalue.rule = 'sql';\n                    dialogHeader = \"SQL\";\n                    dialogObj.show();\n                    break;\n                case 'Import Parameter Sql':\n                    currentvalue.value = JSON.stringify(qryBldrObj.getParameterizedSql(validRule), null, 4);\n                    currentvalue.rule = 'parameter';\n                    dialogHeader = \"Parameter SQL\";\n                    dialogObj.show();\n                    break;\n                default:\n                    currentvalue.value = JSON.stringify(qryBldrObj.getParameterizedNamedSql(validRule), null, 4);\n                    currentvalue.rule = 'namedparameter';\n                    dialogHeader = \"Named Parameter SQL\";\n                    dialogObj.show();\n                    break;\n            }\n        }\n    };\n    var drpDownBtn = new ej.splitbuttons.DropDownButton(ddbOption);\n    drpDownBtn.appendTo('#element');\n    function onBeforeopen() {\n        var errorElem = document.getElementById('dlgSpan');\n        var dlgContentElement = document.getElementById('mongo-dlgContent');\n        if (dlgContentElement) {\n            dlgContentElement.value = currentvalue.value;\n            dialogObj.header = dialogHeader;\n            errorElem.style.visibility = 'hidden';\n            if (errorElem.classList.contains(\"error\")) {\n                errorElem.classList.remove(\"error\");\n            }\n        }\n    }\n    function importQuery() {\n        try {\n            var textAreacontent = document.getElementById('mongo-dlgContent');\n            if (currentvalue.rule != 'sql') {\n                var textAreaValue = JSON.parse(textAreacontent.value);\n            }\n            switch (currentvalue.rule) {\n                case 'mongo':\n                    qryBldrObj.setMongoQuery(textAreacontent.value);\n                    break;\n                case 'namedparameter':\n                    qryBldrObj.setParameterizedNamedSql(JSON.parse(textAreacontent.value));\n                    break;\n                case 'parameter':\n                    qryBldrObj.setParameterizedSql(JSON.parse(textAreacontent.value));\n                    break;\n                case 'sql':\n                    qryBldrObj.setRulesFromSql(textAreacontent.value, true);\n                    break;\n                default:\n                    break;\n            }\n            updateRule();\n            dialogObj.hide();\n        }\n        catch (error) {\n            var errorElem = document.getElementById('dlgSpan');\n            if (!errorElem.classList.contains(\"error\")) {\n                errorElem.style.visibility = 'visible';\n                errorElem.classList.add(\"error\");\n            }\n        }\n    }\n    function convertMongoQuery() {\n        var validRule = qryBldrObj.getValidRules(qryBldrObj.rule);\n        var mongoQuery = JSON.parse(qryBldrObj.getMongoQuery(validRule));\n        content = JSON.stringify(mongoQuery, null, 4);\n        document.querySelector('.e-mongo-content .e-pre-content').textContent = content;\n        hljs.highlightBlock(document.querySelector('.e-sql-content'));\n    }\n    function updateRule() {\n        switch (selectedIndex) {\n            case 0:\n                updateContent();\n                break;\n            case 1:\n                convertMongoQuery();\n                break;\n        }\n    }\n    var queryPreview = document.getElementById('e-query-preview');\n    queryPreview.addEventListener('mouseenter', function () {\n        var elem = document.getElementsByClassName(\"copy-tooltip\");\n        for (var i = 0; i < elem.length; i++) {\n            if (selectedIndex == i) {\n                elem[i].style.display = 'block';\n            }\n        }\n    });\n    queryPreview.addEventListener('mouseleave', function () {\n        var elem = document.getElementsByClassName(\"copy-tooltip\");\n        for (var i = 0; i < elem.length; i++) {\n            if (selectedIndex == i) {\n                elem[i].style.display = 'none';\n            }\n        }\n    });\n    var copyMongoTooltip = document.getElementById('copy-mongo');\n    copyMongoTooltip.addEventListener('click', function (args) {\n        navigator.clipboard.writeText(content);\n        setTimeout(function () {\n            ej.base.getComponent(args.target.closest('.e-tooltip'), 'tooltip').close();\n        }, 1000);\n    });\n    var copySQLTooltip = document.getElementById('copy-sql');\n    copySQLTooltip.addEventListener('click', function (args) {\n        navigator.clipboard.writeText(content);\n        setTimeout(function () {\n            ej.base.getComponent(args.target.closest('.e-tooltip'), 'tooltip').close();\n        }, 1000);\n    });\n\n"}