{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/grid/filter-bar-template/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><style type=\"text/css\" class=\"cssStyles\">\n    .e-cus-label {\n        font-size: 14px;\n        font-weight: 300;\n        margin-bottom: 5px;\n        text-align: start;\n    }\n\n    .e-flex-layout {\n        display: flex;\n    }\n\n    .e-min-max-separator {\n        margin-right: 5px;\n    }\n\n    .e-grid .e-gridheader tr th:first-child.e-filterbarcell.e-fltrtemp {\n        padding-left: 6px;\n    }\n</style>\n<div>\n    <div class=\"control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"Grid\"></div>\n        </div>\n    </div>\n</div>\n\n\n</div></body></html>","index.js":"{{ripple}}\n    var numElement;\n    var stringElement;\n    var minElement;\n    var maxElement;\n    var ddElement;\n    var minTextBox;\n    var maxTextBox;\n    var templateOptionsNumericTextBox = {\n        create: function () {\n            var container = document.createElement('div');\n            var label = document.createElement('div');\n            label.classList.add('e-cus-label');\n            label.innerText = 'Id';\n            numElement = document.createElement('input');\n            numElement.classList.add('e-fltrtemp-focus');\n            container.append(label);\n            container.append(numElement);\n            return container;\n        },\n        write: function () {\n            var numericTextBox = new ej.inputs.NumericTextBox({\n                format: 'n'\n            });\n            numericTextBox.appendTo(numElement);\n        },\n    };\n    var templateOptionsStringTextBox = {\n        create: function () {\n            var container = document.createElement('div');\n            var label = document.createElement('div');\n            label.classList.add('e-cus-label');\n            label.innerText = 'Name';\n            stringElement = document.createElement('input');\n            stringElement.classList.add('e-fltrtemp-focus');\n            container.append(label);\n            container.append(stringElement);\n            return container;\n        },\n        write: function () {\n            var stringTextBox = new ej.inputs.TextBox();\n            stringTextBox.appendTo(stringElement);\n        },\n    };\n    var templateOptionsMinMax = {\n        create: function () {\n            var container = document.createElement('div');\n            container.classList.add('e-flex-layout');\n            var minContainer = document.createElement('div');\n            minContainer.classList.add('e-min-max-separator');\n            var minLabel = document.createElement('div');\n            minLabel.classList.add('e-cus-label');\n            minLabel.innerText = 'Min';\n            minElement = document.createElement('input');\n            minElement.classList.add('e-fltrtemp-focus');\n            minContainer.append(minLabel);\n            minContainer.append(minElement);\n            var maxContainer = document.createElement('div');\n            var maxLabel = document.createElement('div');\n            maxLabel.classList.add('e-cus-label');\n            maxLabel.innerText = 'Max';\n            maxElement = document.createElement('input');\n            maxElement.classList.add('e-fltrtemp-focus');\n            maxContainer.append(maxLabel);\n            maxContainer.append(maxElement);\n            container.append(minContainer);\n            container.append(maxContainer);\n            return container;\n        },\n        write: function () {\n            minTextBox = new ej.inputs.NumericTextBox({\n                format: 'n'\n            });\n            minTextBox.appendTo(minElement);\n            maxTextBox = new ej.inputs.NumericTextBox({\n                format: 'n'\n            });\n            maxTextBox.appendTo(maxElement);\n        },\n    };\n    var templateOptionsDropDown = {\n        create: function () {\n            var container = document.createElement('div');\n            var label = document.createElement('div');\n            label.classList.add('e-cus-label');\n            label.innerText = 'Status';\n            ddElement = document.createElement('input');\n            container.append(label);\n            container.append(ddElement);\n            return container;\n        },\n        write: function () {\n            var dropDown = new ej.dropdowns.DropDownList({\n                cssClass: 'e-fltrtemp-focus',\n                dataSource: ['Both', 'true', 'false'],\n                value: 'Both',\n                change: function (args) {\n                    if (args.value !== 'Both') {\n                        grid.filterByColumn('Discontinued', 'equal', args.value === 'true' ? true : false);\n                    }\n                    else {\n                        grid.removeFilteredColsByField('Discontinued');\n                    }\n                }\n            });\n            dropDown.appendTo(ddElement);\n        },\n    };\n    var dataBound = function () {\n        var filterBarOperatorDiv = grid.getHeaderTable().querySelector('.e-filterdiv.e-fltrinputdiv');\n        if (!filterBarOperatorDiv.querySelector('.e-cus-label')) {\n            var label = document.createElement('div');\n            label.classList.add('e-cus-label');\n            label.innerText = 'Stock';\n            filterBarOperatorDiv.insertBefore(label, filterBarOperatorDiv.firstChild);\n        }\n    };\n    var keyPressed = function (args) {\n        if (args.keyCode === 13) {\n            var target = args.target;\n            var th = ej.base.closest(target, 'th');\n            if (th && th.classList.contains('e-filterbarcell') && th.hasAttribute('e-mappinguid') && grid.getColumnByUid(th.getAttribute('e-mappinguid')).field === 'UnitPrice') {\n                args.cancel = true;\n                if (minTextBox.element.value || maxTextBox.element.value) {\n                    var filterColumns = grid.filterSettings.columns.filter(function (data) { return data.field !== 'UnitPrice'; });\n                    if (minTextBox.element.value) {\n                        filterColumns.push({\n                            field: 'UnitPrice',\n                            operator: 'greaterthanorequal',\n                            predicate: 'and',\n                            value: parseFloat(minTextBox.element.value),\n                        });\n                    }\n                    if (maxTextBox.element.value) {\n                        filterColumns.push({\n                            field: 'UnitPrice',\n                            operator: 'lessthanorequal',\n                            predicate: 'and',\n                            value: parseFloat(maxTextBox.element.value),\n                        });\n                    }\n                    setTimeout(function () {\n                        grid.setProperties({ filterSettings: { columns: filterColumns } });\n                    }, 0);\n                }\n                else {\n                    var unitPriceColumns = grid.filterSettings.columns.filter(function (data) { return data.field === 'UnitPrice'; });\n                    if (unitPriceColumns.length) {\n                        grid.removeFilteredColsByField('UnitPrice');\n                    }\n                }\n            }\n        }\n    };\n    var grid = new ej.grids.Grid({\n        dataSource: window.productData,\n        allowPaging: true,\n        allowFiltering: true,\n        allowSorting: true,\n        filterSettings: { showFilterBarOperator: true, showFilterBarStatus: false },\n        gridLines: 'Both',\n        columns: [\n            {\n                field: 'ProductID',\n                headerText: 'Product ID',\n                width: 120,\n                textAlign: 'Right',\n                isPrimaryKey: true,\n                filterBarTemplate: templateOptionsNumericTextBox,\n            },\n            {\n                field: 'ProductName',\n                headerText: 'Product Name',\n                width: 220,\n                filterBarTemplate: templateOptionsStringTextBox,\n            },\n            {\n                field: 'UnitPrice',\n                headerText: 'Price',\n                width: 200,\n                format: 'C2',\n                textAlign: 'Right',\n                filterBarTemplate: templateOptionsMinMax\n            },\n            { field: 'UnitsInStock', headerText: 'Stock', width: 120, format: 'N', textAlign: 'Right' },\n            {\n                field: 'Discontinued',\n                displayAsCheckBox: true,\n                type: 'boolean',\n                headerText: 'Discontinued',\n                width: 150,\n                filterBarTemplate: templateOptionsDropDown,\n            },\n        ],\n        dataBound: dataBound,\n        pageSettings: { pageCount: 5 },\n        keyPressed: keyPressed\n    });\n    grid.appendTo('#Grid');\n\n"}