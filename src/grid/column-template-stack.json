{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/grid/column-template/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><style>\n    .image img {\n        height: 55px;\n        width: 55px;\n        border-radius: 50px;\n        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(68, 66, 66, 0.2);\n    }\n    .statustemp.e-nonavailablecolor {\n        background-color: indianred;\n        width: 100px;\n        height: 30px;\n    }\n    .statustemp.e-availablecolor {\n        background-color: #58d378;\n        width: 100px;\n        height: 30px;\n    }\n    .statustxt.e-availablecolor {\n        color: white\n    }\n    .statustxt.e-nonavailablecolor {\n        color: white;\n    }\n    .statustemp {\n        position: relative;\n        height: 19px;\n        text-align: center\n    }\n    td.e-rowcell .statustxt.e-availablecolor {\n        color: white;\n        position: relative;\n        top: 4px;\n    }\n    td.e-rowcell .statustxt.e-nonavailablecolor {\n        color: white;\n        position: relative;\n        top: 4px;\n    }\n    .e-icon-location::before {\n        content: \"\\e30c\";\n    }\n    .e-location {\n        margin-right: 5px;\n    }\n    .highcontrast .e-grid td.e-rowcell.e-selectionbackground.e-active .e-icons,\n    .fluent2-highcontrast .e-grid .e-row:hover .e-icons,\n    .fluent2-highcontrast .e-grid td.e-rowcell.e-selectionbackground.e-active .e-icons {\n        color: black;\n    }\n</style>\n\n<script id=\"template\" type=\"text/x-template\">\n    ${employeeTemplate(data)}\n</script>\n<script id=\"locationTemplate\" type=\"text/x-template\">\n    <span class=\"e-location e-icons location\"></span>\n    ${Location}\n</script>\n<script id=\"mailIDTemplate\" type=\"text/x-template\">\n    <a href=\"mailto:${MailID}\">${MailID}</a>\n</script>\n<script type=\"text/x-template\" id=\"assetTemplate\">\n    <div id=\"assetElement\" ></div>\n</script>\n<script type=\"text/x-template\" id=\"statusTemplate\">\n    ${statusTemplate(data)}\n</script>\n<div>\n    <div class=\"control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"Grid\"></div>\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}\n    var dropInstance;\n    var operators = {\n        stringOperator: [\n            { value: 'contains', text: 'Contains' },\n            { value: 'doesnotcontain', text: 'Does Not Contains' }\n        ],\n    };\n    var filter = {\n        type: 'Menu',\n        ui: {\n            create: function (args) {\n                var flValInput = ej.base.createElement('input', {\n                    className: 'flm-input',\n                });\n                args.target.appendChild(flValInput);\n                var dropdownData = ['Phone', 'Mouse', 'Laptop', 'Keyboard', 'Headset', 'Tablet', 'Projector', 'Printer', 'Calculator'];\n                dropInstance = new ej.dropdowns.MultiSelect({\n                    dataSource: dropdownData,\n                    placeholder: 'Select a value',\n                    popupHeight: '200px',\n                    allowFiltering: true,\n                    mode: 'Box',\n                });\n                dropInstance.appendTo(flValInput);\n            },\n            write: function (args) {\n                if (args.filteredValue && args.filteredValue.length > 0) {\n                    dropInstance.value = args.filteredValue.split(', ');\n                }\n            },\n            read: function (args) {\n                grid.removeFilteredColsByField(args.column.field);\n                if (dropInstance.value.length) {\n                    args.fltrObj.filterByColumn(\n                        args.column.field,\n                        args.operator,\n                        (dropInstance.value).sort().join(', ')\n                    );\n                }\n            },\n        },\n    };\n    var grid = new ej.grids.Grid({\n        dataSource: window.employeeDetail,\n        allowSorting: true,\n        height: 400,\n        allowFiltering: true,\n        filterSettings: { type: 'CheckBox', operators: operators },\n        queryCellInfo: queryCellInfo,\n        columns: [\n            {\n                headerText: 'Image', textAlign: 'Center',\n                template: '#template', width: 180\n            },\n            { field: 'EmployeeID', headerText: 'ID', width: 160 },\n            { field: 'Name', headerText: 'Name', width: 120 },\n            { field: 'MailID', headerText: 'Email ID', width: 150, template: '#mailIDTemplate' },\n            { field: 'Designation', headerText: 'Designation', width: 160 },\n            { field: 'DateOfJoining', headerText: 'Date Joined', width: 170, format: 'yMd', textAlign: 'Right', type:'date' },\n            { field: 'Team', headerText: 'Team(s)', width: 160 },\n            { field: 'ReportTo', headerText: 'Reporter', width: 120 },\n            { field: 'EmployeeAvailability', headerText: 'Availability', width: 150, template: '#statusTemplate' },\n            { field: 'YearOfExperience', headerText: 'Experience', width: 180 },\n            { field: 'AssetKit', headerText: 'Asset Kit', width: 180, filter: filter, template: '#assetTemplate' },\n            { field: 'AssetKitDistribution', headerText: 'Assigned Date', width: 170, format: 'yMd', textAlign: 'Right', type:'date' },\n            { field: 'Location', headerText: 'Location', width: 150, template: '#locationTemplate' },\n            { field: 'PhoneNumber', headerText: 'Contact No', width: 150, textAlign: 'Right' },\n        ],\n    });\n    grid.appendTo('#Grid');\n\n    function queryCellInfo(args) {\n        if (args.column.field === 'AssetKit') {\n            var assetValue = args.data[args.column.field].split(',');\n            var asset = new ej.buttons.ChipList({\n                chips: assetValue\n            });\n            asset.appendTo(args.cell.querySelector('#assetElement'));\n        }\n    }\n\n    window.statusTemplate = function (e) {\n        var div = document.createElement('div');\n        var span = document.createElement('span');\n        if (e.EmployeeAvailability === 'Available') {\n            span.className = 'statustxt e-availablecolor';\n            span.textContent = 'Available';\n            div.className = 'statustemp e-availablecolor';\n        }\n        else {\n            span.className = 'statustxt e-nonavailablecolor';\n            span.textContent = 'Not Available';\n            div.className = 'statustemp e-nonavailablecolor';\n        }\n        div.appendChild(span);\n        return div.outerHTML;\n    };\n\n    window.employeeTemplate = function (e) {\n        var divElement = document.createElement('div');\n        divElement.className = 'image';\n        var imgElement = document.createElement('img');\n        imgElement.src = '//ej2.syncfusion.com/javascript/demos/src/grid/images/' + e.EmployeeID.replace('Emp100','') + '.png';\n        imgElement.alt = e.EmployeeID;\n        divElement.appendChild(imgElement);\n        return divElement.outerHTML;\n    };\n"}