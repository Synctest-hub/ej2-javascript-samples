{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/multi-select/virtual-scroll/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section col-lg-9\">\n    <div class=\"control-wrapper\">\n        <label class=\"h4\">Local Data</label>\n        <input type=\"text\" id=\"local\" tabindex=\"0\">\n    </div>\n    <div class=\"control-wrapper\">\n        <label class=\"h4\">Remote Data</label>\n        <input type=\"text\" id=\"remote\" tabindex=\"0\">\n    </div>\n    <div class=\"control-wrapper\">\n        <label class=\"h4\">Default Values</label>\n        <input type=\"text\" id=\"databind\" tabindex=\"0\">\n    </div>\n    <div class=\"control-wrapper\">\n        <label class=\"h4\">Grouping</label>\n        <input type=\"text\" id=\"group\" tabindex=\"0\">\n    </div>\n    <div class=\"control-wrapper\">\n        <label class=\"h4\">Template</label>\n        <input type=\"text\" id=\"template\" tabindex=\"0\">\n    </div>\n</div>\n<div class=\"col-lg-3 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <table id=\"property\" title=\"Properties\">\n            <tbody>\n                <tr>\n                    <td style=\"width: 50%;\">\n                        <div>\n                            <input id=\"filter\" type=\"checkbox\" checked=\"true\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"width: 50%;\">\n                        <div>\n                            <input id=\"custom\" type=\"checkbox\" checked=\"true\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"width: 50%;\">\n                        <div>\n                            <input id=\"hide\" type=\"checkbox\" checked=\"true\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"width: 50%;\">\n                        <div>\n                            <input id=\"close\" type=\"checkbox\" checked=\"true\">\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n\n\n\n\n","index.js":"{{ripple}}\n\n    // define the array of data\n    var records = [];\n    for (var i = 1; i <= 150; i++) {\n        var multiItem = {};\n        multiItem.id = 'id' + i;\n        multiItem.text = \"Item \".concat(i);\n        var randomAutoGroup = Math.floor(Math.random() * 4) + 1;\n        switch (randomAutoGroup) {\n            case 1:\n                multiItem.group = 'Group D';\n                break;\n            case 2:\n                multiItem.group = 'Group C';\n                break;\n            case 3:\n                multiItem.group = 'Group B';\n                break;\n            case 4:\n                multiItem.group = 'Group A';\n                break;\n            default:\n                break;\n        }\n        records.push(multiItem);\n    }\n\n    // initialize MultiSelect component\n    var localObj = new ej.dropdowns.MultiSelect({\n        //set the local data to dataSource property\n        dataSource: records,\n        mode: 'Box',        \n        //enable the virtualization property\n        enableVirtualization: true,\n        popupHeight: '200px',\n        allowFiltering: true,\n        allowCustomValue: true,\n        showDropDownIcon:true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        fields: { text: 'text', value: 'id' },\n        placeholder: 'e.g. Item 1'\n    });\n    localObj.appendTo('#local');\n\n    var remoteObj = new ej.dropdowns.MultiSelect({\n        //set the remote data to dataSource property\n        dataSource: new ej.data.DataManager({\n            url: 'https://services.syncfusion.com/js/production/api/VirtualDropdownData',\n            adaptor: new ej.data.UrlAdaptor(),\n            crossDomain: true\n        }),\n        fields: { text: 'OrderID', value: 'OrderID' },\n        //enable the virtualization property\n        enableVirtualization: true,\n        allowFiltering: true,\n        mode: 'Delimiter', \n        // set true to enable the custom value support.\n        allowCustomValue: true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        showDropDownIcon:true,\n        popupHeight: '200px',\n        // set the placeholder to DropDownList component\n        placeholder: 'OrderID'\n    });\n    remoteObj.appendTo('#remote');\n\n    var databindObj = new ej.dropdowns.MultiSelect({\n        //set the remote data to dataSource property\n        dataSource: records,\n        fields: { text: 'text', value: 'id' },\n        //enable the virtualization property\n        enableVirtualization: true,\n        popupHeight: '200px',\n        mode: 'Default', \n        value: ['id10', 'id50', 'id100', \"custom\"],\n        allowFiltering: true,\n        allowCustomValue: true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        showDropDownIcon:true,\n        placeholder: 'e.g. Item 1'\n    });\n    databindObj.appendTo('#databind');\n\n    var groupObj = new ej.dropdowns.MultiSelect({\n        //set the local data to dataSource property\n        dataSource: records,\n        //enable the virtualization property\n        enableVirtualization: true,\n        popupHeight: '200px',\n        mode: 'CheckBox', \n        allowFiltering: true,\n        allowCustomValue: true,\n        showDropDownIcon:true,\n        enableSelectionOrder: false,\n        fields: { groupBy: 'group', text: 'text', value: 'id' },\n        placeholder: 'e.g. Item 1'\n    });\n    groupObj.appendTo('#group');\n\n    var templateObj = new ej.dropdowns.MultiSelect({\n        //set the local data to dataSource property\n        dataSource: records,\n        //enable the virtualization property\n        enableVirtualization: true,\n        popupHeight: '200px',\n        mode: 'Default', \n        allowFiltering: true,\n        allowCustomValue: true,\n        hideSelectedItem: true,\n        closePopupOnSelect: true,\n        showDropDownIcon:true,\n        headerTemplate:\n        '<div class=\"header\"><span style=\"margin-left:17px\">Items Info</span></div>',\n        // set the template content for list items\n        itemTemplate: '<div class=\"ename\" style=\"height: 40px\"> ${text} </div>',\n        // set the template content for displays the selected items in input element.\n        valueTemplate: '<div class=\"name\"> ${text} </div>',\n        fields: { text: 'text', value: 'id' },\n        placeholder: 'e.g. Item 1'\n    });\n    templateObj.appendTo('#template');\n\n    // Initialize the CheckBox component\n    var checkBoxObj = new ej.buttons.CheckBox({\n        // set true for enable the checked state at initial rendering\n        checked: true,\n        // set text value for check box element.\n        label: 'AllowFiltering',\n        // bind change event\n        change: function(args) {\n            // enable or disable the allowFiltering in multiselect on CheckBox checked state\n            localObj.allowFiltering = args.checked;\n            remoteObj.allowFiltering = args.checked;\n            databindObj.allowFiltering = args.checked;\n            groupObj.allowFiltering = args.checked;\n            templateObj.allowFiltering = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#filter');\n    // Initialize the CheckBox component\n    checkBoxObj = new ej.buttons.CheckBox({\n        checked: true,\n        label: 'AllowCustomValue',\n        change: function(args) {\n            localObj.allowCustomValue = args.checked;\n            remoteObj.allowCustomValue = args.checked;\n            databindObj.allowCustomValue = args.checked;\n            groupObj.allowCustomValue = args.checked;\n            templateObj.allowCustomValue = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#custom');\n\n    // Initialize the CheckBox component\n     checkBoxObj = new ej.buttons.CheckBox({\n        checked: true,\n        label: 'HideSelectedItem',\n        change: function(args) {\n            localObj.hideSelectedItem = args.checked;\n            remoteObj.hideSelectedItem = args.checked;\n            databindObj.hideSelectedItem = args.checked;\n            templateObj.hideSelectedItem = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#hide');\n\n     // Initialize the CheckBox component\n     checkBoxObj = new ej.buttons.CheckBox({\n        checked: true,\n        label: 'ClosePopupOnSelect',\n        change: function(args) {\n            localObj.closePopupOnSelect = args.checked;\n            remoteObj.closePopupOnSelect = args.checked;\n            databindObj.closePopupOnSelect = args.checked;\n            templateObj.closePopupOnSelect = args.checked;\n        }\n    });\n    checkBoxObj.appendTo('#close');\n"}