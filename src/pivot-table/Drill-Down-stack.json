{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-table/Drill-Down/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section pivot-property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%;height:100%;\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div class=\"hdrlabel\">Drill Down:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" tabindex=\"0\" id=\"expandall\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"field_cls\" style=\"height: 50px; display: none\">\n                <td>\n                    <div class=\"hdrlabel\">Fields:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" placeholder=\"Select fields\" tabindex=\"1\" id=\"expand-fields\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"field_cls_1\" style=\"height: 50px; display: none\">\n                <td>\n                    <div class=\"hdrlabel\">Fields:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" placeholder=\"Select field\" tabindex=\"1\" id=\"expand-fields-1\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"members_cls\" style=\"height: 50px; display: none\">\n                <td>\n                    <div class=\"hdrlabel\">Headers:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" placeholder=\"Select headers\" tabindex=\"1\" id=\"expand-members\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"apply_cls\" style=\"height: 50px; display: none\">\n                <td></td>\n                <td>\n                    <div style=\"float: right;\">\n                        <button id=\"expand-apply\">Apply</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","index.js":"{{ripple}}/**\n * Pivot Table Member expandAll for specific field sample\n */\n\n    var isInitial = true;\n    var fieldCollections = {};\n    var storeMembers = { 'Country': [], 'Year': [] };\n    var values = [];\n    var isRowSelect = false;\n    var isColumnSelect = false;\n    ej.base.enableRipple(false);\n    var options = [\n        { value: 'allHeaders', text: 'All headers' },\n        { value: 'rowHeaders', text: 'Row headers' },\n        { value: 'columnHeader', text: 'Column headers' },\n        { value: 'specificFields', text: 'Specific fields' },\n        { value: 'specificHeaders', text: 'Specific headers' }\n    ];\n    var pivotObj = new ej.pivotview.PivotView({\n        dataSourceSettings: {\n            dataSource: window.Pivot_Data,\n            expandAll: false,\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\n            rows: [{ name: 'Country', expandAll: true }, { name: 'Products' }],\n            columns: [{ name: 'Year', dataType: 'string' }, { name: 'Order_Source', caption: 'Order Source' }],\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\n            { name: 'Amount', caption: 'Sold Amount' }],\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }]\n        },\n        dataBound: function (args) {\n            if (isInitial) {\n                /** To fill the members for each fields into the object fieldCollections. */\n                var fieldCnt = fields.length - 1;\n                while (fieldCnt > -1) {\n                    var members = Object.keys(pivotObj.engineModule.fieldList[fields[fieldCnt].Field].members);\n                    var memberCnt = members.length;\n                    var membersCollection = [];\n                    for (var i = 0; i < memberCnt; i++) {\n                        membersCollection.push({ Member: members[i], Checked: members[i] + '_' + false });\n                    }\n                    fieldCollections[fields[fieldCnt].Field] = membersCollection;\n                    fieldCnt--;\n                }\n                values = fieldCollections[fields[0].Field];\n                membersOrder.dataSource = values;\n                membersOrder.dataBind();\n                fieldsddl.dataBind();\n                isInitial = false;\n            }\n        },\n        width: '100%',\n        height: 300,\n        gridSettings: { columnWidth: 140 },\n\n    });\n    pivotObj.appendTo('#PivotView');\n    var fields = [\n        { Field: 'Country', expandAll: false },\n        { Field: 'Year', expandAll: false }\n    ];\n    var fieldsddl = new ej.dropdowns.MultiSelect({\n        dataSource: fields,\n        mode: 'CheckBox',\n        showDropDownIcon: true,\n        enabled: true,\n        showClearButton: false,\n        enableSelectionOrder: false,\n        fields: { text: 'Field' },\n        index: 0,\n        select: function (args) {\n            membersOrder.value = [];\n            if (storeMembers.Country.length > 0 || storeMembers.Year.length > 0) {\n                storeMembers = { 'Country': [], 'Year': [] };\n                isInitial = true;\n            }\n            if (args.itemData.Field === 'Country') {\n                pivotObj.setProperties({ dataSourceSettings: { drilledMembers: [{ name: 'Country', items: [] }, { name: 'Year', items: [] }] } }, true);\n                updateRowColumn(false, true, isColumnSelect);\n                isRowSelect = true;\n            }\n            else if (args.itemData.Field === 'Year') {\n                pivotObj.setProperties({ dataSourceSettings: { drilledMembers: [{ name: 'Country', items: [] }, { name: 'Year', items: [] }] } }, true);\n                updateRowColumn(false, isRowSelect, true);\n                isColumnSelect = true;\n            }\n        },\n        removed: function (args) {\n            if (args.itemData.Field === 'Country') {\n                updateRowColumn(false, false, isColumnSelect);\n                isRowSelect = false;\n            }\n            else if (args.itemData.Field === 'Year') {\n                updateRowColumn(false, isRowSelect, false);\n                isColumnSelect = false;\n            }\n        },\n        open: function (args) {\n            args.popup.element.querySelector(\".e-filter-parent\").style.display = 'none';\n        }\n    });\n    fieldsddl.appendTo('#expand-fields');\n    var optionsdll = new ej.dropdowns.DropDownList({\n        dataSource: options,\n        fields: { value: 'value', text: 'text' },\n        value: 'rowHeaders',\n        width: '100%',\n        change: function (args) {\n            document.querySelector('.field_cls').style.display = 'none';\n            document.querySelector('.field_cls_1').style.display = 'none';\n            document.querySelector('.members_cls').style.display = 'none';\n            document.querySelector('.apply_cls').style.display = 'none';\n            if (args.value == 'allHeaders') {\n                clear();\n                pivotObj.setProperties({ dataSourceSettings: { expandAll: true, drilledMembers: [{ name: 'Country', items: [] }, { name: 'Year', items: [] }] } }, true);\n                pivotObj.refreshData();\n            } else if (args.value == 'rowHeaders') {\n                clear();\n                pivotObj.setProperties({ dataSourceSettings: { drilledMembers: [{ name: 'Country', items: [] }, { name: 'Year', items: [] }] } }, true);\n                updateRowColumn(false, true, false);\n            } else if (args.value == 'columnHeader') {\n                clear();\n                pivotObj.setProperties({ dataSourceSettings: { drilledMembers: [{ name: 'Country', items: [] }, { name: 'Year', items: [] }] } }, true);\n                updateRowColumn(false, false, true);\n            } else if (args.value == 'specificFields') {\n                document.querySelector('.field_cls').style.display = '';\n            } else if (args.value == 'specificHeaders') {\n                document.querySelector('.field_cls_1').style.display = '';\n                document.querySelector('.members_cls').style.display = '';\n                document.querySelector('.apply_cls').style.display = '';\n            }\n        }\n    });\n    optionsdll.appendTo('#expandall');\n    var field1 = new ej.dropdowns.DropDownList({\n        dataSource: fields,\n        fields: { text: 'Field' },\n        value: 'Country',\n        width: '100%',\n        change: function (args) {\n            membersOrder.dataSource = fieldCollections[args.itemData.Field.toString()];\n            membersOrder.value = getSelectedMembers(args.itemData.Field.toString());\n            membersOrder.dataBind();\n            field1.dataBind();\n        }\n    });\n    field1.appendTo('#expand-fields-1');\n    var membersOrder = new ej.dropdowns.MultiSelect({\n        dataSource: values,\n        mode: 'CheckBox',\n        showDropDownIcon: true,\n        showClearButton: false,\n        enableSelectionOrder: false,\n        fields: { text: 'Member' },\n        select: function (args) {\n            setMemberCheckedState(field1.itemData.Field, args.item.textContent, args.item.textContent + '_' + true);\n            applyBtn.disabled = false;\n            storeMembers[field1.itemData.Field].push(args.itemData.Member);\n\n        },\n        removed: function (args) {\n            setMemberCheckedState(field1.itemData.Field, args.item.textContent, args.item.textContent + '_' + false);\n            index = storeMembers[field1.itemData.Field].indexOf(args.itemData.Member);\n            if (storeMembers[field1.itemData.Field].includes(args.itemData.Member)) {\n                storeMembers[field1.itemData.Field].splice(index, 1);\n            }\n        },\n        open: function (args) {\n            args.popup.element.querySelector(\".e-filter-parent\").style.display = 'none';\n        }\n    });\n    membersOrder.appendTo('#expand-members');\n    var applyBtn = new ej.buttons.Button({\n        isPrimary: true,\n    });\n    applyBtn.appendTo('#expand-apply');\n    document.getElementById('expand-apply').onclick = function () {\n        fieldsddl.value = [];\n        isRowSelect = false;\n        isColumnSelect = false;\n        pivotObj.setProperties({ dataSourceSettings: { drilledMembers: [{ name: 'Country', items: storeMembers.Country }, { name: 'Year', items: storeMembers.Year }] } }, true);\n        updateRowColumn(false, false, false);\n    };\n\n    /** To set the checked status of the members maintained in the object fieldCollections. */\n    function setMemberCheckedState(field, member, checkedState) {\n        var members = fieldCollections[field];\n        var membersLength = members.length - 1;\n        while (membersLength > -1) {\n            if (members[membersLength].Member === member) {\n                members[membersLength].Checked = checkedState;\n                break;\n            }\n            membersLength--;\n        }\n    }\n\n    /** To get the checked members/status here as string array. */\n    function getSelectedMembers(field) {\n        var membersColls = [];\n        var members = fieldCollections[field];\n        var membersLength = members.length - 1;\n        while (membersLength > -1) {\n            if (members[membersLength].Checked === members[membersLength].Member + '_' + true) {\n                membersColls.push(members[membersLength].Member.toString());\n            }\n            membersLength--;\n        }\n        return membersColls;\n    }\n\n    function updateRowColumn(isExpand, isRowExpand, isColumnExpand) {\n        pivotObj.setProperties({\n            dataSourceSettings: {\n                expandAll: isExpand, rows: [\n                    { name: 'Country', expandAll: fieldsddl.dataSource[0].expandAll = isRowExpand },\n                    { name: 'Products' }\n                ], columns: [\n                    { name: 'Year', expandAll: fieldsddl.dataSource[1].expandAll = isColumnExpand },\n                    { name: 'Order_Source' }\n                ]\n            }\n        }, true);\n        pivotObj.refreshData();\n    }\n\n    function clear() {\n        fieldsddl.value = [];\n        isRowSelect = false;\n        isColumnSelect = false;\n        membersOrder.value = [];\n        if (storeMembers.Country.length > 0 || storeMembers.Year.length > 0) {\n            storeMembers = { 'Country': [], 'Year': [] };\n            isInitial = true;\n        }\n    }\n\n"}