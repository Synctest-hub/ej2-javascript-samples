{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-table/custom-sorting/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section pivot-property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%;height:100%;\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td colspan=\"2\">\n                    <div class=\"row\">\n                        <input id=\"sorting\" type=\"checkbox\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div class=\"hdrlabel\">Field:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" tabindex=\"0\" id=\"sorting-fields\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px;\">\n                <td>\n                    <div class=\"hdrlabel\">Headers:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" placeholder=\"Select headers\" tabindex=\"0\" aria-label=\"multiselect\" id=\"sorting-members\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div class=\"hdrlabel\">Order:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" tabindex=\"0\" id=\"sorting-order\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td></td>\n                <td>\n                    <div style=\"float: right;\">\n                        <button id=\"sorting-apply\">Apply</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","index.js":"{{ripple}}/**\n * Pivot Table Member Custom Sorting sample\n */\n\n    var isInitial = true;\n    var fieldCollections = {};\n    var getMembers = { 'Country': [], 'Products': [], 'Year': [], 'Order_Source': [] };\n    var memOrder = [];\n    var index;\n    var data = [];\n    var isMemberAdded = true;\n    var isMemberAdded_1 = true;\n    ej.base.enableRipple(false);\n    var pivotObj = new ej.pivotview.PivotView({\n        dataSourceSettings: {\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\n            dataSource: window.Pivot_Data,\n            expandAll: false,\n            enableSorting: true,\n            rows: [{ name: 'Country' }, { name: 'Products' }],\n            drilledMembers: [{name: 'Country', items: ['Germany']}],\n            columns: [{ name: 'Year', dataType: 'string' }, { name: 'Order_Source', caption: 'Order Source' }],\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }],\n            sortSettings: [{ name: 'Country', order: 'Ascending', membersOrder: ['France', 'United States'] }, { name: 'Year', order: 'Descending', membersOrder: ['FY 2018', 'FY 2017'] },\n            { name: 'Products', order: 'Descending', membersOrder: ['Gloves', 'Bottles and Cages'] }],\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\n            { name: 'Amount', caption: 'Sold Amount' }]\n        },\n        width: '100%',\n        height: 500,\n        gridSettings: { columnWidth: 140 },\n        groupingBarSettings: { showRemoveIcon: false, showFilterIcon: false, showSortIcon: true, showValueTypeIcon: false, allowDragAndDrop: false },\n        showGroupingBar: true,\n        dataBound: function (args) {\n            if (isInitial) {\n                /** To fill the members for each fields into the object fieldCollections. */\n                var fieldCount = fields.length - 1;\n                while (fieldCount > -1) {\n                    var members = Object.keys(pivotObj.engineModule.fieldList[fields[fieldCount].Field].members);\n                    var memberCnt = members.length;\n                    var memberColl = [];\n                    for (var i = 0; i < memberCnt; i++) {\n                        memberColl.push({ Member: members[i], Checked: members[i] + '_' + false });\n                    }\n                    fieldCollections[fields[fieldCount].Field] = memberColl;\n                    fieldCount--;\n                }\n                fieldCollections.Order_Source.reverse();\n                data = fieldCollections[fields[0].Field];\n                membersOrder.dataSource = data;\n                fieldCollections.Country[0].Checked = \"France_true\";\n                fieldCollections.Country[3].Checked = \"United States_true\";\n                getMembers.Country.push('France', 'United States');\n                getMembers.Year.push('FY 2018', 'FY 2017');\n                getMembers.Products.push('Gloves', 'Bottles and Cages');\n                membersOrder.value = updateSelectedMembers(\"Country\").reverse();\n                membersOrder.dataBind();\n                isInitial = false;\n            }\n        },\n        actionComplete: function (args) {\n            var sortDetails = pivotObj.dataSourceSettings.sortSettings;\n            for (var i = 0; i < (pivotObj.dataSourceSettings.rows.length + pivotObj.dataSourceSettings.columns.length); i++) {\n                if (sortDetails.length > 0) {\n                    if (sortDetails[i] && sortDetails[i].name === 'Country') {\n                        updateOrder(sortDetails, i, 'Country', 0);\n                    }\n                    else if (sortDetails[i] && sortDetails[i].name === 'Products') {\n                        updateOrder(sortDetails, i, 'Products', 1);\n                    }\n                    else if (sortDetails[i] && sortDetails[i].name === 'Year') {\n                        updateOrder(sortDetails, i, 'Year', 2);\n                    }\n                    else if (sortDetails[i] && sortDetails[i].name === 'Order_Source') {\n                        updateOrder(sortDetails, i, 'Order_Source', 3);\n                    }\n                }\n            }\n        }\n    });\n    pivotObj.appendTo('#PivotView');\n    var order = ['Ascending', 'Descending'];\n    var fields = [\n        { Field: 'Country', Order: 'Country_asc', caption: 'Country' },\n        { Field: 'Products', Order: 'Products_desc', caption: 'Products' },\n        { Field: 'Year', Order: 'Year_desc', caption: 'Year' },\n        { Field: 'Order_Source', Order: 'Order_Source_asc', caption: 'Order Source' }\n    ];\n    var checkBoxObj = new ej.buttons.CheckBox({\n        label: 'Enable Sorting', labelPosition: 'After', checked: true,\n        change: function (args) {\n            var ischecked = args.checked;\n            fieldsObj.enabled = ischecked;\n            orderInfo.enabled = ischecked;\n            membersOrder.enabled = ischecked;\n            applyBtn.disabled = !ischecked;\n            pivotObj.dataSourceSettings.enableSorting = ischecked;\n        }\n    });\n    checkBoxObj.appendTo('#sorting');\n    var membersOrder = new ej.dropdowns.MultiSelect({\n        dataSource: data,\n        mode: 'CheckBox',\n        showDropDownIcon: true,\n        showClearButton: false,\n        enableSelectionOrder: false,\n        fields: { text: 'Member' },\n        select: function (args) {\n            applyBtn.disabled = false;\n            maintainCheckedState(fieldsObj.itemData.Field, args.item.textContent, args.item.textContent + '_' + true);\n            getMembers[fieldsObj.itemData.Field].push(args.itemData.Member);\n        },\n        removed: function (args) {\n            maintainCheckedState(fieldsObj.itemData.Field, args.item.textContent, args.item.textContent + '_' + false);\n            index = getMembers[fieldsObj.itemData.Field].indexOf(args.itemData.Member);\n            if (getMembers[fieldsObj.itemData.Field].includes(args.itemData.Member)) {\n                getMembers[fieldsObj.itemData.Field].splice(index, 1);\n            }\n        },\n        open: function (args) {\n            args.popup.element.querySelector(\".e-filter-parent\").style.display = 'none';\n        }\n    });\n    membersOrder.appendTo('#sorting-members');\n    var fieldsObj = new ej.dropdowns.DropDownList({\n        dataSource: fields,\n        fields: { text: 'caption', value: 'Order' },\n        index: 0,\n        enabled: true,\n        change: function (args) {\n            if (fieldsObj.dataSource[fieldsObj.index].Order === fieldsObj.dataSource[fieldsObj.index].Field + '_asc') {\n                orderInfo.index = 0;\n            }\n            else {\n                orderInfo.index = 1;\n            }\n            if (memOrder.length > 0) {\n                if (memOrder[fieldsObj.index] === 'Ascending') {\n                    orderInfo.index = 0;\n                }\n                else if (memOrder[fieldsObj.index] === 'Descending') {\n                    orderInfo.index = 1;\n                }\n            }\n            if (args.itemData.Field === 'Year' && isMemberAdded) {\n                fieldCollections.Year[3].Checked = \"FY 2018_true\";\n                fieldCollections.Year[2].Checked = \"FY 2017_true\";\n                membersOrder.value = updateSelectedMembers(\"Year\").reverse();\n                isMemberAdded = false;\n            }\n            else if(args.itemData.Field === 'Products' && isMemberAdded_1){\n                fieldCollections.Products[9].Checked = \"Gloves_true\";\n                fieldCollections.Products[0].Checked = \"Bottles and Cages_true\";\n                membersOrder.value = updateSelectedMembers(\"Products\").reverse();\n                isMemberAdded_1 = false;\n            }\n            membersOrder.dataSource = fieldCollections[args.itemData.Field.toString()];\n            membersOrder.value = updateSelectedMembers(args.itemData.Field.toString());\n            membersOrder.dataBind();\n            orderInfo.dataBind();\n        }\n    });\n    fieldsObj.appendTo('#sorting-fields');\n    var orderInfo = new ej.dropdowns.DropDownList({\n        dataSource: order,\n        index: 0,\n        enabled: true,\n        change: function (args) {\n            if (args.value === 'Ascending') {\n                fieldsObj.dataSource[fieldsObj.index].Order = fieldsObj.dataSource[fieldsObj.index].Field + '_asc';\n            }\n            else {\n                fieldsObj.dataSource[fieldsObj.index].Order = fieldsObj.dataSource[fieldsObj.index].Field + '_desc';\n            }\n            fieldsObj.refresh();\n        }\n    });\n    orderInfo.appendTo('#sorting-order');\n    var applyBtn = new ej.buttons.Button({\n        isPrimary: true,\n    });\n    applyBtn.appendTo('#sorting-apply');\n    document.getElementById('sorting-apply').onclick = function () {\n        if (checkBoxObj.checked) {\n            pivotObj.setProperties({\n                dataSourceSettings: {\n                    enableSorting: true, sortSettings: [\n                        { name: 'Country', order: fieldsObj.dataSource[0].Order === 'Country_asc' ? 'Ascending' : 'Descending', membersOrder: getMembers.Country },\n                        { name: 'Products', order: fieldsObj.dataSource[1].Order === 'Products_asc' ? 'Ascending' : 'Descending', membersOrder: getMembers.Products },\n                        { name: 'Year', order: fieldsObj.dataSource[2].Order === 'Year_asc' ? 'Ascending' : 'Descending', membersOrder: getMembers.Year },\n                        { name: 'Order_Source', order: fieldsObj.dataSource[3].Order === 'Order_Source_asc' ? 'Ascending' : 'Descending', membersOrder: getMembers.Order_Source }\n                    ]\n                }\n            }, true);\n        }\n        else {\n            pivotObj.setProperties({ dataSourceSettings: { enableSorting: false, sortSettings: [] } }, true);\n        }\n        pivotObj.refreshData();\n    };\n\n    /** To set the checked status of the members maintained in the object fieldCollections. */\n    function maintainCheckedState(field, member, checkedState) {\n        var members = fieldCollections[field];\n        var count = members.length - 1;\n        while (count > -1) {\n            if (members[count].Member === member) {\n                members[count].Checked = checkedState;\n                break;\n            }\n            count--;\n        }\n    }\n\n    /** To get the checked members/status here as string array. */\n    function updateSelectedMembers(field) {\n        var membersColls = [];\n        var members = fieldCollections[field];\n        var count = members.length - 1;\n        while (count > -1) {\n            if (members[count].Checked === members[count].Member + '_' + true) {\n                membersColls.push(members[count].Member.toString());\n            }\n            count--;\n        }\n        return membersColls;\n    }\n\n    function updateOrder(sortDetails, i, fieldName, j) {\n        if (sortDetails[i].order === 'Ascending') {\n            if (fieldsObj.itemData.Field === fieldName) {\n                orderInfo.index = 0;\n            }\n            memOrder[j] = 'Ascending';\n        }\n        else {\n            if (fieldsObj.itemData.Field === fieldName) {\n                orderInfo.index = 1;\n            }\n            memOrder[j] = 'Descending';\n        }\n    }\n\n"}