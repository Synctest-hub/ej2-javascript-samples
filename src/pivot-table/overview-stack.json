{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-table/overview/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><meta name=\"referrer\" content=\"never\">\n<div class=\"control-section\" id=\"pivot-table-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n    <div class=\"urllink\">\n        Source:\n        <a href=\"https://www.topuniversities.com/university-rankings?utm_source=topnav\" target=\"_blank\">QS World\n            University Rankings</a>\n    </div>\n</div>\n\n<style>\n    .sb-sample-content-area {\n        min-height: 255px !important;\n    }\n\n    .control-section {\n        min-height: 255px !important;\n    }\n\n    #PivotViewcontainerwrapper {\n        height: auto !important;\n    }\n\n    .e-hyperlinkcell {\n        text-decoration: auto;\n    }\n\n    .e-hyperlinkcell:hover {\n        text-decoration: underline;\n    }\n\n    .university-logo {\n        border-radius: 50%;\n        margin-right: 5px;\n    }\n\n    .urllink {\n        float: right;\n        margin-right: 10px;\n        margin-top: 10px;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\r\n * Pivot Table Overview Sample.\r\n */\r\n\r\n    ej.base.enableRipple(false);\r\n    var pivotObj = new ej.pivotview.PivotView({\r\n        dataSourceSettings: {\r\n            enableSorting: true,\r\n            columns: [{\r\n                    name: 'region',\r\n                    caption: 'Region'\r\n                },\r\n                {\r\n                    name: 'country',\r\n                    caption: 'Country'\r\n                }\r\n            ],\r\n            rows: [{\r\n                    name: 'rank_display',\r\n                    caption: 'Rank',\r\n                    expandAll: true,\r\n                    allowDragAndDrop: false\r\n                },\r\n                {\r\n                    name: 'university',\r\n                    caption: 'University',\r\n                    expandAll: true,\r\n                    allowDragAndDrop: false\r\n                }\r\n            ],\r\n            formatSettings: [{\r\n                    name: 'international_students',\r\n                    format: 'N0'\r\n                },\r\n                {\r\n                    name: 'faculty_count',\r\n                    format: 'N0'\r\n                }\r\n            ],\r\n            dataSource: window.universityData,\r\n            expandAll: false,\r\n            values: [{\r\n                    name: 'international_students',\r\n                    caption: 'Students'\r\n                },\r\n                {\r\n                    name: 'faculty_count',\r\n                    caption: 'Faculty'\r\n                }\r\n            ],\r\n            filters: [{\r\n                name: 'type',\r\n                caption: 'University Type'\r\n            }],\r\n            filterSettings: [{\r\n                name: 'region',\r\n                type: 'Exclude',\r\n                items: ['Africa', 'Latin America']\r\n            }],\r\n            fieldMapping: [{\r\n                    name: 'rank_display',\r\n                    dataType: 'number'\r\n                },\r\n                {\r\n                    name: 'country',\r\n                    caption: 'Country'\r\n                },\r\n                {\r\n                    name: 'city',\r\n                    caption: 'City'\r\n                },\r\n                {\r\n                    name: 'region',\r\n                    caption: 'Region'\r\n                },\r\n                {\r\n                    name: 'research_output',\r\n                    caption: 'Research Output'\r\n                },\r\n                {\r\n                    name: 'student_faculty_ratio',\r\n                    caption: 'Student faculty ratio'\r\n                }\r\n            ],\r\n            groupSettings: [{\r\n                name: 'rank_display',\r\n                type: 'Number',\r\n                rangeInterval: 100\r\n            }],\r\n            conditionalFormatSettings: [{\r\n                    measure: 'international_students',\r\n                    value1: 1,\r\n                    value2: 5000,\r\n                    conditions: 'Between',\r\n                    style: {\r\n                        backgroundColor: '#E10000',\r\n                        color: 'white',\r\n                        fontFamily: 'Tahoma',\r\n                        fontSize: '12px'\r\n                    },\r\n                    applyGrandTotals: false\r\n                },\r\n                {\r\n                    measure: 'international_students',\r\n                    value1: 50000,\r\n                    conditions: 'GreaterThan',\r\n                    style: {\r\n                        backgroundColor: '#0C860C',\r\n                        color: 'white',\r\n                        fontFamily: 'Tahoma',\r\n                        fontSize: '12px'\r\n                    },\r\n                    applyGrandTotals: false\r\n                },\r\n                {\r\n                    measure: 'faculty_count',\r\n                    value1: 1,\r\n                    value2: 1000,\r\n                    conditions: 'Between',\r\n                    style: {\r\n                        backgroundColor: '#E10000',\r\n                        color: 'white',\r\n                        fontFamily: 'Tahoma',\r\n                        fontSize: '12px'\r\n                    },\r\n                    applyGrandTotals: false\r\n                },\r\n                {\r\n                    measure: 'faculty_count',\r\n                    value1: 10000,\r\n                    conditions: 'GreaterThan',\r\n                    style: {\r\n                        backgroundColor: '#0C860C',\r\n                        color: 'white',\r\n                        fontFamily: 'Tahoma',\r\n                        fontSize: '12px'\r\n                    },\r\n                    applyGrandTotals: false\r\n                }\r\n            ],\r\n            showHeaderWhenEmpty: false,\r\n            emptyCellsTextContent: '-',\r\n            excludeFields: ['link', 'logo']\r\n        },\r\n        allowExcelExport: true,\r\n        allowConditionalFormatting: true,\r\n        allowNumberFormatting: true,\r\n        allowPdfExport: true,\r\n        showToolbar: true,\r\n        allowCalculatedField: true,\r\n        enableVirtualization: true,\r\n        allowDeferLayoutUpdate: true,\r\n        allowDrillThrough: true,\r\n        showGroupingBar: true,\r\n        allowGrouping: true,\r\n        enableValueSorting: true,\r\n        displayOption: {\r\n            view: 'Both'\r\n        },\r\n        showFieldList: true,\r\n        exportAllPages: false,\r\n        maxNodeLimitInMemberEditor: 50,\r\n        chartSettings: {\r\n            title: 'Top Universities Analysis',\r\n            load: function (args) {\r\n                var theme = location.hash.split(\"/\")[1];\r\n                theme = theme ? theme : \"Material\";\r\n                args.chart.theme = (theme.charAt(0).toUpperCase() +\r\n                    theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\r\n            }\r\n        },\r\n        chartSeriesCreated: function () {\r\n            pivotObj.chartSettings.chartSeries.legendShape = pivotObj.chartSettings.chartSeries.type === 'Polar' ? 'Rectangle' : 'SeriesType';\r\n        },\r\n        width: '100%',\r\n        height: 600,\r\n        toolbar: ['New', 'Save', 'SaveAs', 'Rename', 'Remove', 'Load',\r\n            'Grid', 'Chart', 'Export', 'SubTotal', 'GrandTotal', 'Formatting', 'FieldList'\r\n        ],\r\n        saveReport: function (args) {\r\n            var report = [];\r\n            var isSaved = false;\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                report = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            if (args.report && args.reportName && args.reportName !== '') {\r\n                var reports = JSON.parse(args.report);\r\n                reports.dataSourceSettings.dataSource = [];\r\n                reports.pivotValues = [];\r\n                args.report = JSON.stringify(reports);\r\n                report.map(function (currentReport) {\r\n                    if (args.reportName === currentReport.reportName) {\r\n                        currentReport.report = args.report;\r\n                        isSaved = true;\r\n                    }\r\n                });\r\n                if (!isSaved) {\r\n                    report.push(args);\r\n                }\r\n                localStorage.pivotviewReports = JSON.stringify(report);\r\n            }\r\n        },\r\n        loadReport: function (args) {\r\n            var repCollection = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                repCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            repCollection.map(function (item) {\r\n                if (args.reportName === item.reportName) {\r\n                    args.report = item.report;\r\n                }\r\n            });\r\n            if (args.report) {\r\n                var reports = JSON.parse(args.report);\r\n                reports.dataSourceSettings.dataSource = pivotObj.dataSourceSettings.dataSource;\r\n                pivotObj.dataSourceSettings = reports.dataSourceSettings;\r\n            }\r\n        },\r\n        fetchReport: function (args) {\r\n            var repCollection = [];\r\n            var reeportList = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                repCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            repCollection.map(function (item) {\r\n                reeportList.push(item.reportName);\r\n            });\r\n            args.reportName = reeportList;\r\n        },\r\n        renameReport: function (args) {\r\n            var repCollection = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                repCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            if (args.isReportExists) {\r\n                for (var i = 0; i < repCollection.length; i++) {\r\n                    if (repCollection[i].reportName === args.rename) {\r\n                        repCollection.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n            repCollection.map(function (item) {\r\n                if (args.reportName === item.reportName) {\r\n                    item.reportName = args.rename;\r\n                }\r\n            });\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                localStorage.pivotviewReports = JSON.stringify(repCollection);\r\n            }\r\n        },\r\n        removeReport: function (args) {\r\n            var repCollection = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                repCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            for (var i = 0; i < repCollection.length; i++) {\r\n                if (repCollection[i].reportName === args.reportName) {\r\n                    repCollection.splice(i, 1);\r\n                }\r\n            }\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                localStorage.pivotviewReports = JSON.stringify(repCollection);\r\n            }\r\n        },\r\n        toolbarRender: function (args) {\r\n            args.customToolbar.splice(6, 0, {\r\n                type: 'Separator'\r\n            });\r\n            args.customToolbar.splice(9, 0, {\r\n                type: 'Separator'\r\n            });\r\n        },\r\n        newReport: function () {\r\n            pivotObj.setProperties({\r\n                dataSourceSettings: {\r\n                    columns: [],\r\n                    rows: [],\r\n                    values: [],\r\n                    filters: []\r\n                }\r\n            }, false);\r\n        },\r\n        gridSettings: {\r\n            columnWidth: 120,\r\n            rowHeight: 36,\r\n            allowSelection: true,\r\n            selectionSettings: {\r\n                mode: 'Cell',\r\n                type: 'Single',\r\n                cellSelectionMode: 'Box'\r\n            },\r\n            excelQueryCellInfo: function (args) {\r\n                if (args.cell.axis === 'value' && args.cell.value === undefined) {\r\n                    args.style.numberFormat = undefined;\r\n                }\r\n            }\r\n        },\r\n        cellTemplate: '${getCellContent(data)}',\r\n        enableFieldSearching: true\r\n    });\r\n    pivotObj.appendTo('#PivotView');\r\n\r\n    window.getCellContent = function (args) {\r\n        if (args.cellInfo && args.cellInfo.axis === 'value' && pivotObj.pivotValues[args.cellInfo.rowIndex] && pivotObj.pivotValues[args.cellInfo.rowIndex][0].hasChild) {\r\n            if (args.targetCell.classList.contains(args.cellInfo.cssClass)) {\r\n                args.targetCell.classList.remove(args.cellInfo.cssClass);\r\n                args.cellInfo.style = undefined;\r\n            }\r\n        }\r\n        if (args.cellInfo && args.cellInfo.axis === 'row' && args.cellInfo.valueSort.axis === 'university') {\r\n            var imgElement = ej.base.createElement('img', {\r\n                className: 'university-logo',\r\n                attrs: {\r\n                    'src': window.universityData[args.cellInfo.index[0]].logo,\r\n                    'alt': args.cellInfo.formattedText + \" Image\",\r\n                    'width': '30',\r\n                    'height': '30'\r\n                },\r\n            });\r\n            var cellValue = ej.base.select('.e-cellvalue', args.targetCell);\r\n            cellValue.classList.add('e-hyperlinkcell');\r\n            cellValue.addEventListener('click', hyperlinkCellClick.bind(pivotObj));\r\n            args.targetCell.insertBefore(imgElement, cellValue);\r\n        }\r\n        return '';\r\n    };\r\n\r\n    function hyperlinkCellClick(args) {\r\n        var cell = args.target.parentElement;\r\n        var pivotValue = pivotObj.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('data-colindex'))];\r\n        var link = window.universityData[pivotValue.index[0]].link;\r\n        window.open(link, '_blank');\r\n    }\r\n"}