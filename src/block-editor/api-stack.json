{"data-source.js":"window.blockDataAPI = [\n    {\n        id: 'heading-block',\n        type: 'Heading1',\n        content: [{ \n            id: 'heading-content',\n            type: 'Text',\n            content: 'Block Editor API Demo'\n        }]\n    },\n    {\n        id: 'intro-block',\n        type: 'Paragraph',\n        content: [{ \n            id: 'intro-content',\n            type: 'Text',\n            content: 'The Block Editor enables users to create, format, and organize content using various block types.'\n        }]\n    },\n    {\n        id: 'api-heading',\n        type: 'Heading2',\n        content: [{ \n            id: 'api-heading-content',\n            type: 'Text',\n            content: 'API Features:'\n        }]\n    },\n    {\n        id: 'api-list-1',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-1-content',\n            type: 'Text',\n            content: 'readOnly - allows to change it as a non-editable state.'\n        }]\n    },\n    {\n        id: 'api-list-2',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-2-content',\n            type: 'Text',\n            content: 'enableDragAndDrop - allows to control drag-and-drop operations within the block editor.'\n        }]\n    },\n    {\n        id: 'api-list-3',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-3-content',\n            type: 'Text',\n            content: 'enableHtmlEncode - Get the encoded string value through value property and source code panel.'\n        }]\n    },\n    {\n        id: 'api-list-4',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-4-content',\n            type: 'Text',\n            content: 'selectAllBlocks - Selects all blocks in the editor.'\n        }]\n    },\n    {\n        id: 'api-list-5',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-5-content',\n            type: 'Text',\n            content: 'focusIn - Focuses the editor.'\n        }]\n    },\n    {\n        id: 'api-list-6',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-6-content',\n            type: 'Text',\n            content: 'focusOut - Removes focus from the editor.'\n        }]\n    },\n    {\n        id: 'api-list-7',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-7-content',\n            type: 'Text',\n            content: 'getBlockCount - Gets total block count.'\n        }]\n    },\n    {\n        id: 'api-list-8',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-8-content',\n            type: 'Text',\n            content: 'getDataAsJson - Retrieves data from the editor as JSON.'\n        }]\n    },\n        {\n        id: 'api-list-9',\n        type: 'BulletList',\n        content: [{ \n            id: 'api-list-8-content',\n            type: 'Text',\n            content: 'getDataAsHtml - Retrieves data from the editor as HTML.'\n        }]\n    },\n    {\n        id: 'try-it-block',\n        type: 'Paragraph',\n        content: [{ \n            id: 'try-it-content',\n            type: 'Text',\n            content: 'Try it out! Use the property panel on the right to interact with the API.',\n            styles: {\n                bold: true,\n                bgColor: '#999999'\n            }\n        }]\n    }\n];\n\nwindow.blockDataOverview = [\n    {\n        id: 'heading-block',\n        type: 'Heading1',\n        content: [{ \n            id: 'heading-content',\n            type: 'Text',\n            content: 'Welcome to the Block Editor Demo!'\n        }]\n    },\n    {\n        id: 'intro-block',\n        type: 'Paragraph',\n        content: [{ \n            id: 'intro-content',\n            type: 'Text',\n            content: 'Block Editor is a powerful rich text editor that allows you to create structured content using blocks. Each block can be formatted, moved, or transformed into different types.',\n        }]\n    },\n    {\n        id: 'styled-paragraph',\n        type: 'Paragraph',\n        content: [\n            { \n                id: 'styled-text-1',\n                type: 'Text',\n                content: 'Try selecting text to see '\n            },\n            {\n                id: 'styled-text-2',\n                type: 'Text',\n                content: 'formatting options',\n                styles: {\n                    bold: true,\n                    italic: true\n                }\n            },\n            {\n                id: 'styled-text-3',\n                type: 'Text',\n                content: ' or type '\n            },\n            {\n                id: 'styled-text-4',\n                type: 'Text',\n                content: '\"/\"',\n                styles: {\n                    bgColor: '#999999',\n                    bold: true\n                }\n            },\n            {\n                id: 'styled-text-5',\n                type: 'Text',\n                content: ' to access the command menu.'\n            }\n        ]\n    },\n    {\n        id: 'block-types-heading',\n        type: 'Heading2',\n        content: [{ \n            id: 'block-types-heading-content',\n            type: 'Text',\n            content: 'Block Types'\n        }]\n    },\n    {\n        id: 'quote-block',\n        type: 'Quote',\n        content: [{ \n            id: 'quote-content',\n            type: 'Text',\n            content: 'The Block Editor makes document creation a seamless experience with its intuitive block-based approach.',\n            styles: {\n                italic: true\n            }\n        }]\n    },\n    {\n        id: 'callout-block',\n        type: 'Callout',\n        content: [{ \n            id: 'callout-content',\n            type: 'Text',\n            content: 'Important: Block Editor supports various content types including Text, Link, Code, Mention, and Label.',\n            styles: {\n                bold: true\n            }\n        }]\n    },\n    {\n        id: 'list-types-heading',\n        type: 'Heading3',\n        content: [{ \n            id: 'list-types-heading-content',\n            type: 'Text',\n            content: 'List Types'\n        }]\n    },\n    {\n        id: 'bullet-list-header',\n        type: 'BulletList',\n        content: [{ \n            id: 'bullet-list-header-content',\n            type: 'Text',\n            content: 'Text blocks: Paragraph, Heading 1-4, Quote, Callout',\n            styles: {\n                bold: true\n            }\n        }]\n    },\n    {\n        id: 'numbered-list',\n        type: 'NumberedList',\n        content: [{ \n            id: 'numbered-list-content',\n            type: 'Text',\n            content: 'Lists: Bullet lists, Numbered lists, Check lists'\n        }]\n    },\n    {\n        id: 'check-list',\n        type: 'CheckList',\n        isChecked: true,\n        content: [{ \n            id: 'check-list-content',\n            type: 'Text',\n            content: 'Special blocks: Divider, Toggle, Code block'\n        }]\n    },\n    {\n        id: 'divider-block',\n        type: 'Divider',\n        content: []\n    },\n    {\n        id: 'toggle-block',\n        type: 'ToggleParagraph',\n        isExpanded: true,\n        content: [{ \n            id: 'toggle-content',\n            type: 'Text',\n            content: 'Click me to expand/collapse'\n        }],\n        children: [\n            {\n                id: 'toggle-child',\n                type: 'Paragraph',\n                content: [{ \n                    id: 'toggle-child-content',\n                    type: 'Text',\n                    content: 'This content is inside a toggle block. Toggle blocks are useful for organizing content that can be expanded or collapsed.',\n                }]\n            }\n        ]\n    },\n    {\n        id: 'code-block',\n        type: 'Code',\n        content: [{ \n            id: 'code-content',\n            type: 'Text',\n            content: 'const editor = new BlockEditor();\\neditor.appendTo(\"#element\");'\n        }]\n    },\n    {\n        id: 'formatting-heading',\n        type: 'Heading4',\n        content: [{ \n            id: 'formatting-heading-content',\n            type: 'Text',\n            content: 'Text Formatting Examples'\n        }]\n    },\n    {\n        id: 'formatting-examples',\n        type: 'Paragraph',\n        content: [\n            { \n                id: 'format-bold',\n                type: 'Text',\n                content: 'Bold ',\n                styles: {\n                    bold: true\n                }\n            },\n            { \n                id: 'format-italic',\n                type: 'Text',\n                content: 'Italic ',\n                styles: {\n                    italic: true\n                }\n            },\n            { \n                id: 'format-underline',\n                type: 'Text',\n                content: 'Underline ',\n                styles: {\n                    underline: true\n                }\n            },\n            { \n                id: 'format-strikethrough',\n                type: 'Text',\n                content: 'Strikethrough ',\n                styles: {\n                    strikethrough: true\n                }\n            },\n            { \n                id: 'format-superscript',\n                type: 'Text',\n                content: 'Superscript ',\n                styles: {\n                    superscript: true\n                }\n            },\n            { \n                id: 'format-subscript',\n                type: 'Text',\n                content: 'Subscript ',\n                styles: {\n                    subscript: true\n                }\n            },\n            { \n                id: 'format-uppercase',\n                type: 'Text',\n                content: 'uppercase ',\n                styles: {\n                    uppercase: true\n                }\n            },\n            { \n                id: 'format-lowercase',\n                type: 'Text',\n                content: 'LOWERCASE',\n                styles: {\n                    lowercase: true\n                }\n            }\n        ]\n    },\n    {\n        id: 'link-block',\n        type: 'Paragraph',\n        content: [\n            { \n                id: 'link-text',\n                type: 'Text',\n                content: 'Visit '\n            },\n            { \n                id: 'link-content',\n                type: 'Link',\n                content: 'Syncfusion',\n                linkSettings: {\n                    url: 'https://www.syncfusion.com/',\n                    openInNewWindow: true\n                }\n            },\n            { \n                id: 'link-text-end',\n                type: 'Text',\n                content: ' for more information.'\n            }\n        ]\n    },\n    {\n        id: 'label-block',\n        type: 'Paragraph',\n        content: [\n            { \n                id: 'label-text',\n                type: 'Text',\n                content: 'This block contains a '\n            },\n            { \n                id: 'progress',\n                type: 'Label'\n            },\n            { \n                id: 'label-text-end',\n                type: 'Text',\n                content: ' label.'\n            }\n        ]\n    },\n    {\n        id: 'try-it-block',\n        type: 'Paragraph',\n        content: [{ \n            id: 'try-it-content',\n            type: 'Text',\n            content: 'Try it out! Click anywhere and start typing, or type \"/\" to see available commands.',\n            styles: {\n                bold: true,\n                bgColor: '#999999'\n            }\n        }]\n    }\n]\n\nwindow.blockDataEvents = [\n    {\n        id: 'heading-block',\n        type: 'Heading1',\n        content: [{ \n            id: 'heading-content',\n            type: 'Text',\n            content: 'Block Editor Events Demo'\n        }]\n    },\n    {\n        id: 'intro-block',\n        type: 'Paragraph',\n        content: [{ \n            id: 'intro-content',\n            type: 'Text',\n            content: 'This sample demonstrates the events triggered by the Block Editor component. Try different actions to see the events in the trace panel.'\n        }]\n    },\n    {\n        id: 'features-heading',\n        type: 'Heading2',\n        content: [{ \n            id: 'features-heading-content',\n            type: 'Text',\n            content: 'Notable Features:'\n        }]\n    },\n    {\n        id: 'feature-list-1',\n        type: 'BulletList',\n        content: [{ \n            id: 'feature-list-1-content',\n            type: 'Text',\n            content: 'Block-based editing with various block types (paragraphs, headings, lists, etc.)'\n        }]\n    },\n    {\n        id: 'feature-list-2',\n        type: 'BulletList',\n        content: [{ \n            id: 'feature-list-2-content',\n            type: 'Text',\n            content: 'Slash commands for quick block transformation'\n        }]\n    },\n    {\n        id: 'feature-list-3',\n        type: 'BulletList',\n        content: [{ \n            id: 'feature-list-3-content',\n            type: 'Text',\n            content: 'Rich text formatting with inline toolbar'\n        }]\n    },\n    {\n        id: 'feature-list-4',\n        type: 'BulletList',\n        content: [{ \n            id: 'feature-list-4-content',\n            type: 'Text',\n            content: 'Hierarchical content organization with nested blocks'\n        }]\n    },\n    {\n        id: 'feature-list-5',\n        type: 'BulletList',\n        content: [{ \n            id: 'feature-list-5-content',\n            type: 'Text',\n            content: 'Block manipulation (move, delete, duplicate)'\n        }]\n    },\n    {\n        id: 'feature-list-6',\n        type: 'BulletList',\n        content: [{ \n            id: 'feature-list-6-content',\n            type: 'Text',\n            content: 'Keyboard shortcuts for efficient editing'\n        }]\n    },\n    {\n        id: 'feature-list-7',\n        type: 'BulletList',\n        content: [{ \n            id: 'feature-list-7-content',\n            type: 'Text',\n            content: 'Drag and drop functionality for blocks'\n        }]\n    },\n    {\n        id: 'try-it-block',\n        type: 'Paragraph',\n        content: [{ \n            id: 'try-it-content',\n            type: 'Text',\n            content: 'Try different actions like typing, selecting text, adding blocks, or moving blocks to see the events triggered.',\n            styles: {\n                bold: true,\n                bgColor: '#999999'\n            }\n        }]\n    }\n]\n","index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/block-editor/api/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/29.1.33/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/29.1.33/{{theme}}.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"control-wrapper\">\n        <div class=\"sample-container\">\n            <div class=\"default-section\">\n                <div id=\"api-blockeditor\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <table id=\"property\" title=\"Properties\">\n            <tbody>\n                <tr>\n                    <td>\n                        <div>ReadOnly </div>\n                    </td>\n                    <td>\n                        <div style=\"padding-top: 0;padding-left: 0;\">\n                            <input type=\"checkbox\" id=\"readonly\" checked=\"false\" aria-label=\"Readonly\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div>Enable Drag and Drop </div>\n                    </td>\n                    <td>\n                        <div style=\"padding-top: 0;padding-left: 0;\">\n                            <input type=\"checkbox\" id=\"enableDragDrop\" checked=\"true\" aria-label=\"Enable Drag and Drop\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"getJson\" class=\"btn btn-default\">Get JSON Data</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"getHtml\" class=\"btn btn-default\">Get HTML Data</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"getBlockCount\" class=\"btn btn-default\">Get Block Count</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"selectall\" class=\"btn btn-default\">Select All Blocks</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"focusIn\" class=\"btn btn-default\">Focus In</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"focusOut\" class=\"btn btn-default\">Focus Out</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <div>\n                            <button id=\"print\" class=\"btn btn-default\">Print</button>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<style>\n.blockeditor-api {\n    height: 600px;\n    width: 60vw;\n    margin: 0 auto;\n}\n\n@media only screen and (max-width: 750px) {\n    .blockeditor-api {\n        width: 100%;\n    }\n}\n\n</style>\n\n\n\n</div></body></html>","index.js":"{{ripple}}import './data-source';\n\n\n    var focusedBlock;\n    var apiBlockEditor = new ej.blockeditor.BlockEditor({\n        blocks: window.blockDataAPI,\n        focus: function(args) {\n            focusedBlock = args.blockId;\n        }\n    });\n    \n    apiBlockEditor.appendTo('#api-blockeditor');\n\n    var readonly = new ej.buttons.CheckBox({\n        checked: false,\n        change: function (args) {\n            apiBlockEditor.readOnly = args.checked;\n        }\n    });\n    readonly.appendTo('#readonly');\n\n    var enableDragDrop = new ej.buttons.CheckBox({\n        checked: true,\n        change: function (args) {\n            apiBlockEditor.enableDragAndDrop = args.checked;\n        }\n    });\n    enableDragDrop.appendTo('#enableDragDrop');\n\n    document.getElementById('getJson').onclick = function () {\n        var jsonData = apiBlockEditor.getDataAsJson(focusedBlock);\n        alert(JSON.stringify(jsonData, null, 2));\n    };\n\n    document.getElementById('getHtml').onclick = function () {\n        var htmlData = apiBlockEditor.getDataAsHtml();\n        alert(htmlData);\n    };\n\n    document.getElementById('getBlockCount').onclick = function () {\n        alert('Total blocks: ' + apiBlockEditor.getBlockCount());\n    };\n\n    document.getElementById('selectall').onclick = function () {\n        apiBlockEditor.selectAllBlocks();\n    };\n\n    document.getElementById('print').onclick = function () {\n        apiBlockEditor.print();\n    };\n\n    document.getElementById('focusIn').onclick = function () {\n        apiBlockEditor.focusIn();\n    };\n\n    document.getElementById('focusOut').onclick = function () {\n        apiBlockEditor.focusOut();\n    };\n"}