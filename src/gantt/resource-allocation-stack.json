{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/gantt/resource-allocation/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"resource\">\n        </div>\n    </div>\n</div>\n\n<script type=\"text/x-template\" id=\"resColumnTemplate\">\n    ${if(ganttProperties.resourceNames)}\n        ${if(ganttProperties.resourceNames.split('[')[0].includes('Rose Fuller'))}\n            <div class=\"text\" style=\"width:150px; height:24px; border-radius:100px; background-color:#1c5d8e; display: flex; align-items: center; justify-content: center;\">\n                <span style=\"color:white; font-weight:500;\">${ganttProperties.resourceNames}</span>\n            </div>\n        ${/if}\n\n        ${if(ganttProperties.resourceNames.split('[')[0].includes('Fuller King'))}\n            <div class=\"text\" style=\"width:150px; height:24px; border-radius:100px; background-color:#4a7537; display: flex; align-items: center; justify-content: center;\">\n                <span style=\"color:white; font-weight:500;\">${ganttProperties.resourceNames}</span>\n            </div>\n        ${/if}\n\n        ${if(ganttProperties.resourceNames.split('[')[0].includes('Van Jack'))}\n            <div class=\"text\" style=\"width:150px; height:24px; border-radius:100px; background-color:#b24531; display: flex; align-items: center; justify-content: center;\">\n                <span style=\"color:white; font-weight:500;\">${ganttProperties.resourceNames}</span>\n            </div>\n        ${/if}\n\n        ${if(ganttProperties.resourceNames.split('[')[0].includes('Bergs Anton'))}\n            <div class=\"text\" style=\"width:150px; height:24px; border-radius:100px; background-color:#a53576; display: flex; align-items: center; justify-content: center;\">\n                <span style=\"color:white; font-weight:500;\">${ganttProperties.resourceNames}</span>\n            </div>\n        ${/if}\n\n        ${if(ganttProperties.resourceNames.split('[')[0].includes('Tamer Vinet'))}\n            <div class=\"text\" style=\"width:150px; height:24px; border-radius:100px; background-color:#635688; display: flex; align-items: center; justify-content: center;\">\n                <span style=\"color:white; font-weight:500;\">${ganttProperties.resourceNames}</span>\n            </div>\n        ${/if}\n   ${/if}\n</script>\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}   \n    var dropdownlistObj;\n    var ganttChart = new ej.gantt.Gantt({\n        dataSource: window.resourceAllocationData,\n        height: '450px',\n        allowSelection: true,\n        highlightWeekends: true,\n        taskFields: {\n            id: 'TaskID',\n            name: 'TaskName',\n            startDate: 'StartDate',\n            endDate: 'EndDate',\n            duration: 'Duration',\n            progress: 'Progress',\n            dependency: 'Predecessor',\n            child: 'subtasks',\n            work:'work',\n            resourceInfo: 'resources',\n            type:'taskType'\n        },\n        resources: resourceAllocationResources,\n        resourceFields: {\n            id: 'resourceId',\n            name: 'resourceName',\n            unit: 'unit'\n        },\n        queryTaskbarInfo: function (args) {\n            if (args.data.ganttProperties.resourceNames) {\n                var resourceName = args.data.ganttProperties.resourceNames;\n                if (resourceName.split('[')[0].includes('Rose Fuller')) {\n                    args.taskbarBgColor = '#539ed6';\n                    args.milestoneColor = '#539ed6';\n                    args.progressBarBgColor = '#1c5d8e';\n                    args.taskbarBorderColor = '#1c5d8e';\n                    if (args.data.ganttProperties.progress === 0) {\n                        args.taskLabelColor = 'black';\n                    }\n                } else if (resourceName.split('[')[0].includes('Van Jack')) {\n                    args.taskbarBgColor = '#ff826b';\n                    args.milestoneColor = '#ff826b';\n                    args.progressBarBgColor = '#b24531';\n                    args.taskbarBorderColor = '#b24531';\n                    if (args.data.ganttProperties.progress === 0) {\n                        args.taskLabelColor = 'black';\n                    }\n                } else if (resourceName.split('[')[0].includes('Bergs Anton')) {\n                    args.taskbarBgColor = '#ef6fbb';\n                    args.milestoneColor = '#ef6fbb';\n                    args.progressBarBgColor = '#a53576';\n                    args.taskbarBorderColor = '#a53576';\n                    if (args.data.ganttProperties.progress === 0) {\n                        args.taskLabelColor = 'black';\n                    }\n                } else if (resourceName.split('[')[0].includes('Fuller King')) {\n                    args.taskbarBgColor = '#87b972';\n                    args.milestoneColor = '#87b972';\n                    args.progressBarBgColor = '#4a7537';\n                    args.taskbarBorderColor = '#4a7537';\n                    if (args.data.ganttProperties.progress === 0) {\n                        args.taskLabelColor = 'black';\n                    }\n                } else if (resourceName.split('[')[0].includes('Tamer Vinet')) {\n                    args.taskbarBgColor = '#a496cf';\n                    args.milestoneColor = '#a496cf';\n                    args.progressBarBgColor = '#635688';\n                    args.taskbarBorderColor = '#635688';\n                    if (args.data.ganttProperties.progress === 0) {\n                        args.taskLabelColor = 'black';\n                    }\n                }\n            }\n            if (args.taskbarType === 'ParentTask') {\n                args.taskbarBgColor = '#adadad';\n                args.progressBarBgColor = '#6b6b6b';\n                if (args.data.ganttProperties.progress === 0) {\n                    args.taskLabelColor = 'black';\n                }\n            }\n        },\n        taskType:\"FixedWork\",\n        workUnit:\"Hour\",\n        editSettings: {\n            allowAdding: true,\n            allowEditing: true,\n            allowDeleting: true,\n            allowTaskbarEditing: true,\n            showDeleteConfirmDialog: true\n        },\n        treeColumnIndex: 1,\n        columns: [\n            { field: 'TaskID', visible: false},\n            { field: 'TaskName', headerText: 'Task Name', width: '180'},\n            {\n                field: 'resources',\n                headerText: 'Resources',\n                width: '190',\n                template: '#resColumnTemplate',\n                editType: \"dropdownedit\",\n                edit: {\n                    read: function () {\n                        // Get the selected value from the dropdown\n                        var value = dropdownlistObj.value;\n                        if (value == null) {\n                            // If no value is selected, retain the existing resource(s)\n                            value = ganttChart.treeGridModule.currentEditRow[ganttChart.taskFields.resourceInfo];\n                        } else {\n                            // Update the resource info with the selected value\n                            ganttChart.treeGridModule.currentEditRow[ganttChart.taskFields.resourceInfo] = [value];\n                        }\n                        return value;\n                    },\n                    destroy: function () {\n                        // Clean up the dropdown instance\n                        dropdownlistObj.destroy();\n                    },\n                    write: function (args) {\n                        // Ensure the currentEditRow object is initialized\n                        ganttChart.treeGridModule.currentEditRow = {};\n            \n                        // Retrieve the existing resource(s) from the row data or set default\n                        var existingResourceIds = ganttChart.treeGridModule.getResourceIds(args.rowData);\n                        var selectedValue = (existingResourceIds && existingResourceIds.length > 0) ? existingResourceIds[0] : null;\n            \n                        // Initialize the DropDownList\n                        dropdownlistObj = new ej.dropdowns.DropDownList({\n                            dataSource: new ej.data.DataManager(ganttChart.resources),\n                            fields: { text: ganttChart.resourceFields.name, value: ganttChart.resourceFields.id },\n                            enableRtl: ganttChart.enableRtl,\n                            popupHeight: '350px',\n                            // Set the existing resource(s) as the selected value\n                            value: selectedValue,\n                        });\n                        // Append the dropdown to the element\n                        dropdownlistObj.appendTo(args.element);\n                    },\n                },\n            },\n            { field: 'work', width:'110'},\n            { field: 'Duration', width: '100' },\n            { field: 'taskType', headerText: 'Task Type', width: '110'}\n        ],\n        editDialogFields: [\n            { type: 'Resources' }\n        ],\n        addDialogFields: [\n            { type: 'Resources' }\n        ],\n        cellEdit: function (args) {\n            // Restrict editing based on row data\n            if (args.rowData.TaskID === 1 || args.rowData.TaskID === 5) { // Example: Prevent editing Task ID 1\n                args.cancel = true; // Cancel editing for this specific cell\n            }\n        },\n        actionBegin: function (args) {\n            if (args.requestType === 'beforeOpenEditDialog' || args.requestType === 'beforeOpenAddDialog') {\n                // Restrict editing based on row data for dialog\n                if (args.rowData.TaskID === 1 || args.rowData.TaskID === 5) {\n                    args.cancel = true; // Cancel editing for this specific row dialog\n                }\n                args.Resources.selectionSettings = {};\n                args.Resources.columns.splice(0, 1);\n            }\n        },\n        actionComplete: function (args) {\n            if (args.requestType === 'add' && !args.data.TaskName) {\n                var taskName = 'Task Name ' + args.data.TaskID;\n                args.data.TaskName = taskName;\n                args.data.ganttProperties.taskName = taskName;\n                args.data.taskData.TaskName = taskName;\n            }\n        },\n        toolbar: ['Add', 'Edit', 'Update', 'Delete', 'Cancel', 'ExpandAll', 'CollapseAll'],\n        splitterSettings: {\n            columnIndex: 2\n        },\n        labelSettings: {\n            rightLabel: 'resources',\n            taskLabel: '${Progress}%'\n        },\n        projectStartDate: new Date('03/28/2024'),\n        projectEndDate: new Date('07/28/2024')\n     });\n    ganttChart.appendTo('#resource');\n"}