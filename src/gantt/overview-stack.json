{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/gantt/overview/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"lineardeterminate\"></div>\n    <div id=\"gantt-sidebar-parent\"></div>\n    <div>\n        <div style=\"padding: 16px;\">\n            <button id=\"settings-btn\" class=\"gantt-settings-button\" aria-label=\"Open settings\">\n                <span class=\"e-ganttoverview-settings-icon\"></span>\n                Settings\n            </button>\n        </div>\n        <div id=\"sidebar-gantt\">\n            <div id=\"overviewSample\"></div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<script type=\"text/x-template\" id=\"columnTemplate\">\n    ${if(ganttProperties.resourceNames)}\n      <div class=\"image\">\n           <img src=\"//ej2.syncfusion.com/javascript/demos/src/gantt/images/${ganttProperties.resourceNames}.png\" style=\"height:25px;width:25px\" /><div style=\"display:inline-block;width:100%;position:relative;left:5px\">${ganttProperties.resourceNames}</div>\n       </div>\n   ${/if}\n</script>\n<script type=\"text/x-template\" id=\"columnTemplate1\">\n    ${if(taskData.Status)}\n    <div style=\"${Status(taskData.Status)}\"><span style=\"${StatusContent(taskData.Status)}\">${taskData.Status}</span></div>\n    ${/if}\n</script>\n<script type=\"text/x-template\" id=\"columnTemplate2\">\n    ${if(taskData.Priority)}\n    <div style=\"${Priority(taskData.Priority)}\"><span style=\"${PriorityContent(taskData.Priority)}\">${taskData.Priority}</span></div>\n    ${/if}\n</script>\n<style>\n    .gantt-settings-button {\n        position: absolute;\n        top: 10px;\n        right: 14px;\n        z-index: 20;\n        padding: 5px;\n        display: flex;\n    }\n\n    .gantt-settings-button .e-ganttoverview-settings-icon {\n        margin-right: 5px;\n    }\n\n    .ganttoverview-title-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 20px;\n        width: 262px;\n        color: #fff;\n        height: 57px;\n        background-color: #56697f;\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n    }\n\n    .ganttoverview-title {\n        font-size: 20px;\n        font-weight: bold;\n    }\n\n    .e-ganttoverview-close {\n        background: transparent;\n        border: none;\n        cursor: pointer;\n    }\n\n    .ganttoverview-settings-list {\n        margin: 16px 16px;\n        padding-left: 0px;\n    }\n\n    .ganttoverview-list-fields-labels {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 10px;\n    }\n\n    .ganttoverview-labels {\n        font-weight: 400;\n        font-size: 14px;\n        padding: 12px;\n    }\n\n    .ganttoverview-right-aligned-input {\n        float: right;\n        margin-right: 10px;\n    }\n\n    .ganttoverview-section-header {\n        font-weight: 400;\n        font-size: 14px;\n        padding-left: 12px;\n        padding-top: 12px;\n        border-top: 1px solid #837c7c;\n        margin: 10px 0 5px 0;\n    }\n\n    .ganttoverview-section-header-label {\n        color: #837c7c;\n        font-size: 16px !important;\n        font-weight: 600;\n    }\n\n    .e-ganttoverview-settings-icon::before {\n        font-family: 'e-icons' !important;\n        content: '\\e880';\n        font-size: 15px;\n    }\n\n    .e-ganttoverview-close::before {\n        font-family: 'e-icons' !important;\n        content: '\\e7e7';\n        font-size: 15px;\n    }\n\n    .highcontrast .e-ganttoverview-close::before {\n        content: '\\e7fc';\n        font-family: 'e-icons';\n        font-size: 15px;\n    }\n\n    .highcontrast .e-ganttoverview-settings-icon::before {\n        content: '\\e679';\n        font-family: 'e-icons';\n    }\n\n    /* Gantt Chart Styling */\n    #overviewSample .e-gantt-child-taskbar,\n    #overviewSample .e-gantt-parent-taskbar {\n        border-radius: 10px !important;\n    }\n\n\n    .ganttoverview-side-by-side-container {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 10px;\n    }\n\n    .ganttoverview-stack-container {\n        display: flex;\n        flex-direction: column;\n        margin-bottom: 10px;\n    }\n\n\n    .ganttoverview-right-aligned-input {\n        width: auto;\n    }\n\n\n    .ganttoverview-section-header {\n        font-weight: 600;\n        margin-top: 15px;\n        margin-bottom: 10px;\n    }\n\n    .ganttoverview-left-aligned-label {\n        display: block;\n        text-align: left;\n        margin-bottom: 5px;\n    }\n\n    .ganttoverview-list-fields {\n        display: flex;\n        flex-direction: column;\n        margin-bottom: 10px;\n        width: 100%;\n    }\n\n\n    .ganttoverview-labels-style {\n        font-weight: 400;\n        font-size: 14px;\n        margin-bottom: 5px;\n        text-align: left;\n        padding: 12px;\n    }\n\n    .ganttoverview-container {\n        padding-left: 10px;\n        width: 100%\n    }\n\n    #overivew-sidebar-parent {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-end;\n    }\n\n    #overviewSample .e-tbar-btn-text {\n        display: none;\n    }\n    .tailwind3 .ganttoverview-title-header, .tailwind3-dark .ganttoverview-title-header,\n    .tailwind .ganttoverview-title-header, .tailwind-dark .ganttoverview-title-header{\n        width: 262px;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/* jshint esversion: 6 */\n\n    var theme;\n    var style;\n    var CurrentTheme;\n    var statusStyleColor;\n    var priorityStyle;\n    var priorityContentStyle;\n    var statusContentstyleColor;\n    var isSideBar = false;\n    var sidebarObj;\n    var sidebarToggle;\n    var isChecked;\n\n    var gantt = new ej.gantt.Gantt({\n        dataSource: window.overviewData,\n        resources: window.editingResources,\n        height: '500px',\n        width: \"100%\",\n        highlightWeekends: true,\n        allowSelection: true,\n        allowSorting: true,\n        treeColumnIndex: 1,\n        viewType: 'ProjectView',\n        pdfQueryCellInfo: pdfQueryCellInfo,\n        taskFields: {\n            id: 'TaskId',\n            name: 'TaskName',\n            startDate: 'StartDate',\n            endDate: 'EndDate',\n            duration: 'TimeLog',\n            progress: 'Progress',\n            dependency: 'Predecessor',\n            parentID: 'ParentId',\n            resourceInfo: 'Assignee'\n        },\n        resourceFields: {\n            id: 'resourceId',\n            name: 'resourceName',\n        },\n        columns: [\n            { field: 'TaskId', width: 60, visible: false },\n            { field: 'TaskName', width: 200, headerText: 'Product Release' },\n            { field: 'Assignee', width: 135, allowSorting: false, headerText: 'Assignee', template: '#columnTemplate' },\n            { field: 'Status', minWidth: 100, width: 120, headerText: 'Status', template: '#columnTemplate1' },\n            { field: 'Priority', minWidth: 80, width: 100, headerText: 'Priority', template: '#columnTemplate2' },\n            { field: 'Work', width: 120, headerText: 'Planned Hours' },\n            { field: 'TimeLog', width: 120, headerText: 'Work Log' }\n        ],\n        toolbar: ['ExpandAll', 'CollapseAll', 'ZoomIn', 'ZoomOut', 'ZoomToFit', 'ExcelExport', 'CsvExport', 'PdfExport'],\n        allowExcelExport: true,\n        allowPdfExport: true,\n        toolbarClick: function (args) {\n            if (args.item.id === 'overviewSample_excelexport') {\n                gantt.excelExport();\n            }\n            else if (args.item.id === 'overviewSample_csvexport') {\n                gantt.csvExport();\n            } else if (args.item.id === 'overviewSample_pdfexport') {\n                gantt.pdfExport();\n            }\n        },\n        load: function (args) {\n            var themeCollection = ['bootstrap5', 'bootstrap', 'bootstrap4', 'fluent', 'fabric', 'fusionnew', 'material3', 'material', 'highcontrast', 'tailwind','fluent2','tailwind3','bootstrap5.3'];\n            var cls = document.body.className.split(' ');\n            theme = cls.indexOf('bootstrap5') > 0 ? 'bootstrap5' : cls.indexOf('bootstrap') > 0 ? 'bootstrap' : cls.indexOf('tailwind') > 0 ? 'tailwind' : cls.indexOf('tailwind3') > 0 ? 'tailwind3' :\n                cls.indexOf('fluent') > 0 ? 'fluent' :cls.indexOf('fluent2') > 0 ? 'fluent2' : cls.indexOf('fabric') > 0 ? 'fabric' : cls.indexOf('bootstrap5.3') > 0 ? 'bootstrap5.3' :\n                    cls.indexOf('material3') > 0 ? 'material3' : cls.indexOf('bootstrap4') > 0 ? 'bootstrap4' : cls.indexOf('material') > 0 ? 'material' :\n                        cls.indexOf('fusionnew') > 0 ? 'fusionnew' : cls.indexOf('highcontrast') > 0 ? 'highcontrast' : '';\n            var check = themeCollection.indexOf(theme);\n            if (check >= 0) {\n                CurrentTheme = true;\n            }\n            else {\n                CurrentTheme = false;\n            }\n        },\n        splitterSettings: {\n            position: \"50%\",\n        },\n        selectionSettings: {\n            mode: 'Row',\n            type: 'Single',\n            enableToggle: true\n        },\n        tooltipSettings: {\n            showTooltip: true\n        },\n        filterSettings: {\n            type: 'Menu'\n        },\n        allowFiltering: true,\n        gridLines: \"Vertical\",\n        showColumnMenu: true,\n        timelineSettings: {\n            showTooltip: true,\n            topTier: {\n                unit: 'Month',\n                format: 'MMM yyyy'\n            },\n            bottomTier: {\n                unit: 'Day',\n                count: 4,\n                format: 'dd'\n            }\n        },\n        eventMarkers: [\n            {\n                day: new Date('04/04/2024'),\n                cssClass: 'e-custom-event-marker',\n                label: 'Q-1 Release'\n            },\n            {\n                day: new Date('06/30/2024'),\n                cssClass: 'e-custom-event-marker',\n                label: 'Q-2 Release'\n            },\n            {\n                day: new Date('09/29/2024'),\n                cssClass: 'e-custom-event-marker',\n                label: 'Q-3 Release'\n            }\n        ],\n        holidays: [{\n            from: new Date(\"01/01/2024\"),\n            to: new Date(\"01/01/2024\"),\n            label: \"New Year holiday\",\n            cssClass: \"e-custom-holiday\"\n        },\n        {\n            from: new Date(\"12/25/2023\"),\n            to: new Date(\"12/26/2023\"),\n            label: \"Christmas holidays\",\n            cssClass: \"e-custom-holiday\"\n        }],\n        labelSettings: {\n            rightLabel: 'Assignee',\n            taskLabel: '${Progress}%'\n        },\n        allowResizing: true,\n        taskbarHeight: 24,\n        rowHeight: 36,\n        projectStartDate: new Date('12/17/2023'),\n        projectEndDate: new Date('10/26/2024'),\n    });\n    gantt.appendTo('#overviewSample');\n    function pdfQueryCellInfo(args) {\n        if (args.column.headerText === 'Assignee' && args.data.taskData.resourcesImage) {\n            {\n                args.image = { height:25,width:25, base64: args.data.taskData.resourcesImage };\n            }\n        }\n    }\n\n    window.Status = function (status) {\n        switch (status) {\n            case \"In Progress\":\n                statusStyleColor = (CurrentTheme) ? \"#DFECFF\" : \"#2D3E57\";\n                style = \"display: flex; padding: 0px 12px; gap: 10px; width: 96px; height: 24px; border-radius: 24px; background:\" + statusStyleColor;\n                break;\n            case \"Open\":\n                style = \"background-color: red; color: white; border-radius: 15px; padding:6px\";\n                break;\n            case \"On Hold\":\n                statusStyleColor = (CurrentTheme) ? \"#E4E4E7\" : \"#3C3B43\";\n                style = \"display: flex; border-radius: 24px; padding: 0px 12px; gap: 10px; width: 78px; height: 24px; background:\" + statusStyleColor;\n                break;\n            case \"Completed\":\n                statusStyleColor = (CurrentTheme) ? \"#DFFFE2\" : \"#16501C\";\n                style = \"display: flex; padding: 0px 12px; gap: 10px; width: 98px; height: 24px; border-radius: 24px;background:\" + statusStyleColor;\n                break;\n            case \"High\":\n                statusStyleColor = (CurrentTheme) ? \"#FFEBE9\" : \"#48211D\";\n                style = \"display: flex; padding: 0px 12px; gap: 10px; width: 55px; height: 24px; border-radius: 24px; background:\" + statusStyleColor;\n                break;\n        }\n        return style;\n    };\n    window.StatusContent = function (status) {\n        switch (status) {\n            case \"In Progress\":\n                statusContentstyleColor = (CurrentTheme) ? \"#006AA6\" : \"#34B6FF\";\n                style = \"width: 72px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 20px; text-align: center; color: \" + statusContentstyleColor;\n                break;\n            case \"Open\":\n                style = \"background-color: red; color: white; border-radius: 15px; padding:6px\";\n                break;\n            case \"On Hold\":\n                statusContentstyleColor = (CurrentTheme) ? \"#766B7C\" : \"#CDCBD7\";\n                style = \"width: 54px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 22px; text-align: center; color: \" + statusContentstyleColor;\n                break;\n            case \"Completed\":\n                statusContentstyleColor = (CurrentTheme) ? \"#00A653\" : \"#92FFC8\";\n                style = \"width: 74px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 20px; text-align: center; color: \" + statusContentstyleColor;\n                break;\n            case \"High\":\n                statusContentstyleColor = (CurrentTheme) ? \"#FF3740\" : \"#FFB5B8\";\n                style = \"width: 31px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 20px; text-align: center; color: \" + statusContentstyleColor;\n                break;\n        }\n        return style;\n    };\n    window.Priority = function (priority) {\n        switch (priority) {\n            case \"Low\":\n                priorityStyle = (CurrentTheme) ? \"#FFF6D1\" : \"#473F1E\";\n                style = \"display: flex; padding: 0px 12px; gap: 10px; width: 52px; height: 24px; border-radius: 24px; background: \" + priorityStyle;\n                break;\n            case \"Normal\":\n                priorityStyle = (CurrentTheme) ? \"#F5DFFF\" : \"#4D2F5A\";\n                style = \"display: flex; padding: 0px 12px; gap: 10px; width: 73px; height: 24px; border-radius: 24px; background: \" + priorityStyle;\n                break;\n            case \"Critical\":\n                priorityStyle = (CurrentTheme) ? \"#FFEBE9\" : \"#48211D\";\n                style = \"display: flex; padding: 0px 12px; gap: 10px; width: 72px; height: 24px; border-radius: 24px; background: \" + priorityStyle;\n                break;\n            case \"High\":\n                priorityStyle = (CurrentTheme) ? \"#FFEBE9\" : \"#48211D\";\n                style = \"display: flex; padding: 0px 12px; gap: 10px; width: 55px; height: 24px; border-radius: 24px; background: \" + priorityStyle;\n                break;\n        }\n        return style;\n    };\n    window.PriorityContent = function (priority) {\n        switch (priority) {\n            case \"Low\":\n                priorityContentStyle = (CurrentTheme) ? \"#70722B\" : \"#FDFF88\";\n                style = \"width: 28px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 20px; text-align: center; color: \" + priorityContentStyle;\n                break;\n            case \"Normal\":\n                priorityContentStyle = (CurrentTheme) ? \"#7100A6\" : \"#E3A9FF\";\n                style = \"width: 49px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 20px; text-align: center; color: \" + priorityContentStyle;\n                break;\n            case \"Critical\":\n                priorityContentStyle = (CurrentTheme) ? \"#FF3740\" : \"#FFB5B8\";\n                style = \"width: 48px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 20px; text-align: center; color: \" + priorityContentStyle;\n                break;\n            case \"High\":\n                priorityContentStyle = (CurrentTheme) ? \"#FF3740\" : \"#FFB5B8\";\n                style = \"width: 31px; height: 22px; font-style: normal; font-weight: 500; font-size: 14px; line-height: 20px; text-align: center; color: \" + priorityContentStyle;\n                break;\n        }\n        return style;\n    };\n    function initializeSidebar() {\n        if (isSideBar) {\n            if (!document.getElementById('sidebar')) {\n                var sidebarDiv = document.createElement('div');\n                sidebarDiv.id = 'sidebar';\n                sidebarDiv.innerHTML = `\n                <div class=\"ganttoverview-title-header\">\n                <div class=\"ganttoverview-title\">Project Settings</div>\n                    <button id=\"close\" class=\"e-ganttoverview-close\" aria-label=\"Close settings\"></button>\n                </div>\n                <ul class=\"ganttoverview-settings-list\">\n                    <li class=\"ganttoverview-list-fields\">\n                        <label for=\"default\" class=\"ganttoverview-labels-style\">Row height :</label>\n                        <div id=\"default\" style=\"left: 20px;\"></div>\n                    </li>\n                    <li class=\"ganttoverview-list-fields-labels ganttoverview-side-by-side-container\">\n                        <label for=\"showGridLines\" class=\"ganttoverview-labels\">Show grid lines :</label>\n                        <input id=\"showGridLines\" type=\"checkbox\" class=\"ganttoverview-right-aligned-input\">\n                    </li>\n                    <li class=\"ganttoverview-list-fields-labels ganttoverview-side-by-side-container\">\n                        <label for=\"showEventMarkers\" class=\"ganttoverview-labels\">Show event markers :</label>\n                        <input id=\"showEventMarkers\" type=\"checkbox\" class=\"ganttoverview-right-aligned-input\">\n                    </li>\n                    <li class=\"ganttoverview-list-fields-labels ganttoverview-side-by-side-container\">\n                        <label for=\"dependencyLines\" class=\"ganttoverview-labels\">Show dependencies :</label>\n                        <input id=\"dependencyLines\" type=\"checkbox\" class=\"ganttoverview-right-aligned-input\">\n                    </li>\n                    <li class=\"ganttoverview-list-fields-labels ganttoverview-side-by-side-container\">\n                        <label for=\"taskLabelChange\" class=\"ganttoverview-labels\">Show task labels :</label>\n                        <input id=\"taskLabelChange\" type=\"checkbox\" class=\"ganttoverview-right-aligned-input\">\n                    </li>\n                    <li class=\"ganttoverview-list-fields ganttoverview-section-header\">\n                        <label id=\"scheduling\" class=\"ganttoverview-section-header-label\">Scheduling Settings</label>\n                    </li>\n                    <li class=\"ganttoverview-list-fields\">\n                        <label for=\"WorkingDays\" class=\"ganttoverview-labels-style\">Working days:</label>\n                        <div class=\"ganttoverview-container\">\n                            <input id=\"WorkingDays\" type=\"checkbox\" class=\"ganttoverview-right-aligned-input\">\n                        </div>\n                    </li>\n                    <li class=\"ganttoverview-list-fields ganttoverview-stack-container\">\n                        <label for=\"DurationUnit\" class=\"ganttoverview-labels-style\">Duration unit:</label>\n                        <div class=\"ganttoverview-container\">\n                            <input id=\"DurationUnit\" type=\"text\" class=\"ganttoverview-right-aligned-input\">\n                        </div>\n                    </li>\n                    <li class=\"ganttoverview-list-fields ganttoverview-stack-container\">\n                        <label for=\"unitWidth\" class=\"ganttoverview-labels-style\">Timeline width:</label>\n                        <div class=\"ganttoverview-container\">\n                            <input id=\"unitWidth\" type=\"text\" class=\"ganttoverview-right-aligned-input\">\n                        </div>\n                    </li>\n                    <li class=\"ganttoverview-list-fields ganttoverview-section-header\">\n                        <label id=\"viewSettings\" class=\"ganttoverview-section-header-label\">View Settings</label>\n                    </li>\n                    <li class=\"ganttoverview-list-fields ganttoverview-stack-container\">\n                        <label for=\"viewType\" class=\"ganttoverview-labels-style\">View type:</label>\n                        <div class=\"ganttoverview-container\">\n                            <input id=\"viewType\" type=\"text\" class=\"ganttoverview-right-aligned-input\">\n                        </div>\n                    </li>\n                    <li class=\"ganttoverview-list-fields ganttoverview-stack-container\">\n                        <label for=\"viewMode\" class=\"ganttoverview-labels-style\">View mode:</label>\n                        <div class=\"ganttoverview-container\">\n                            <input id=\"viewMode\" type=\"text\" class=\"ganttoverview-right-aligned-input\">\n                        </div>\n                    </li>\n                </ul>\n                `;\n                document.querySelector('#gantt-sidebar-parent').appendChild(sidebarDiv);\n                document.getElementById('close').addEventListener('click', function () {\n                    document.getElementById('sidebar').remove();\n                    sidebarObj.hide();\n                    sidebarToggle = false;\n                    isSideBar = false;\n                });\n\n                sidebarObj = new ej.navigations.Sidebar({\n                    width: '280px',\n                    type: 'Over',\n                    position: 'Right',\n                    target: '#sidebar-gantt',\n                    isOpen: sidebarToggle\n                });\n                sidebarObj.appendTo('#sidebar');\n\n                // type change\n                var viewType = [\n                    { id: \"ResourceView\", Text: \"Resource View\" },\n                    { id: \"ProjectView\", Text: \"Project View\" }\n                ];\n\n                var checkListViewType = new ej.dropdowns.DropDownList({\n                    dataSource: viewType,\n                    change: typeChange,\n                    value: 'Day',\n                    fields: { text: 'Text', value: 'id' },\n                    placeholder: 'View type',\n                    popupHeight: '350px'\n                });\n                checkListViewType.appendTo('#viewType');\n\n                // grid lines\n                var gridLines = new ej.buttons.Switch({ checked: gantt.gridLines === 'Both', change: gridLinesChange });\n                gridLines.appendTo('#showGridLines');\n\n                // event markers\n                var eventMarkers = new ej.buttons.Switch({ checked: gantt.eventMarkers && gantt.eventMarkers.length > 0, change: eventMarkersChange });\n                eventMarkers.appendTo('#showEventMarkers');\n\n                // dependency lines\n                var ganttDependencyViewContainer = document.querySelector('.e-gantt-dependency-view-container');\n                dependency = new ej.buttons.Switch({\n                    checked: ganttDependencyViewContainer && ganttDependencyViewContainer.style.visibility || isChecked !== 'hidden', change: dependencyChange\n                });\n                dependency.appendTo('#dependencyLines');\n\n                // task label\n                var taskLabel = new ej.buttons.Switch({ checked: gantt.labelSettings.rightLabel && gantt.labelSettings.rightLabel.length > 0, change: taskLabelChange });\n                taskLabel.appendTo('#taskLabelChange');\n\n                var defaultObj = new ej.inputs.Slider({\n                    min: 40,\n                    value: 30,\n                    max: 60,\n                    step: 5,\n                    width: '190px',\n                    tooltip: { placement: 'Before', isVisible: true, showOn: \"Hover\" },\n                    ticks: { placement: 'Before', largeStep: 10, smallStep: 10, showSmallTicks: true },\n                    changed: onChanged\n                });\n                defaultObj.appendTo('#default');\n\n                // working days\n                var workDays = [\n                    { id: 'Sunday', day: 'Sunday' },\n                    { id: 'Monday', day: 'Monday' },\n                    { id: 'Tuesday', day: 'Tuesday' },\n                    { id: 'Wednesday', day: 'Wednesday' },\n                    { id: 'Thursday', day: 'Thursday' },\n                    { id: 'Friday', day: 'Friday' },\n                    { id: 'Saturday', day: 'Saturday' }\n                ];\n\n                var checkListWorkingDays = new ej.dropdowns.MultiSelect({\n                    dataSource: workDays,\n                    select: selected,\n                    removed: deselected,\n                    value: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n                    placeholder: 'WorkWeek',\n                    fields: { text: 'day', value: 'id' },\n                    mode: 'CheckBox',\n                    showDropDownIcon: true,\n                    popupHeight: '350px'\n                });\n                checkListWorkingDays.appendTo('#WorkingDays');\n\n                // duration unit\n                var durationUnit = [\n                    { id: \"Minute\", Text: \"Minute\" },\n                    { id: \"Hour\", Text: \"Hour\" },\n                    { id: \"Day\", Text: \"Day\" }\n                ];\n\n                var input = new ej.dropdowns.DropDownList({\n                    dataSource: durationUnit,\n                    change: durationChange,\n                    placeholder: 'Day',\n                    fields: { text: 'Text', value: 'id' }\n                });\n                input.appendTo('#DurationUnit');\n\n                // timline unit size\n                var unitWidthNumObj = new ej.inputs.NumericTextBox({\n                    min: 10,\n                    format: 'n',\n                    value: 33,\n                    change: unitChange\n                });\n                unitWidthNumObj.appendTo('#unitWidth');\n\n\n                // view mode\n                viewMode = [\n                    { ID: \"Default\", Text: \"Default\" },\n                    { ID: \"Grid\", Text: \"Grid\" },\n                    { ID: \"Chart\", Text: \"Chart\" }\n                ];\n\n                var checkListViewMode = new ej.dropdowns.DropDownList({\n                    dataSource: viewMode,\n                    placeholder: 'View',\n                    fields: { value: 'ID', text: 'Text' },\n                    change: viewChange,\n                    popupHeight: '350px'\n                });\n                checkListViewMode.appendTo('#viewMode');\n            }\n        }\n    }\n\n    var clickBtn = new ej.buttons.Button();\n    clickBtn.appendTo('#settings-btn');\n    document.getElementById('settings-btn').addEventListener('click', function () {\n        sidebarToggle = !sidebarToggle;\n        isSideBar = true;\n        initializeSidebar();\n        sidebarObj.isOpen = true;\n    });\n\n    function gridLinesChange(args) {\n        gantt.gridLines = args.checked ? 'Both' : 'Vertical';\n    }\n\n    var tempEventMarkers = [];\n    function eventMarkersChange(args) {\n        if (args.checked) {\n            gantt.eventMarkers = tempEventMarkers;\n        } else {\n            tempEventMarkers = gantt.eventMarkers;\n            gantt.eventMarkers = null;\n        }\n    }\n\n    function dependencyChange(args) {\n        var ganttDependencyViewContainer = document.querySelector('.e-gantt-dependency-view-container');\n        if (ganttDependencyViewContainer) {\n            ganttDependencyViewContainer.style.visibility = args.checked ? 'visible' : 'hidden';\n        }\n    }\n\n    function initializeDependencySwitch() {\n        var ganttDependencyViewContainer = document.querySelector('.e-gantt-dependency-view-container');\n        if (!dependency) {\n            dependency = new ej.buttons.Switch({\n                checked: (ganttDependencyViewContainer && ganttDependencyViewContainer.style.visibility !== 'hidden') || isChecked,\n                change: dependencyChange\n            });\n            dependency.appendTo('#dependencyLines');\n        } else {\n            dependency.checked = (ganttDependencyViewContainer && ganttDependencyViewContainer.style.visibility !== 'hidden') || isChecked;\n        }\n    }\n\n    var tempRightLabel = null;\n    function taskLabelChange(args) {\n        if (args.checked) {\n            gantt.labelSettings.rightLabel = tempRightLabel;\n        } else {\n            tempRightLabel = gantt.labelSettings.rightLabel;\n            gantt.labelSettings.rightLabel = null;\n        }\n    }\n\n    function onChanged(args) {\n        gantt.rowHeight = args.value;\n    }\n\n    function selected(args) {\n        var workingDays = ej.base.extend([], this.value, [], true);\n        workingDays.push(args.itemData.day);\n        gantt.workWeek = workingDays;\n    }\n\n    function deselected(args) {\n        var index = gantt.workWeek.indexOf(args.itemData.day);\n        if (index !== -1) {\n            gantt.workWeek = this.value;\n        }\n    }\n\n    function durationChange(args) {\n        gantt.durationUnit = args.value;\n    }\n\n    function unitChange(args) {\n        gantt.timelineSettings.timelineUnitSize = args.value;\n    }\n\n    function typeChange(args) {\n        gantt.viewType = args.value;\n        setTimeout(() => {\n            isChecked = true;\n            initializeDependencySwitch();\n        }, 0);\n    }\n\n    function viewChange(args) {\n        if (args.value === 'Grid') {\n            gantt.setSplitterPosition('100%', 'position');\n        } else if (args.value === 'Chart') {\n            gantt.setSplitterPosition('0%', 'position');\n        } else {\n            gantt.setSplitterPosition('50%', 'position');\n        }\n    }\n"}