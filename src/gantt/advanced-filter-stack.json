{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/gantt/advanced-filter/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/27.1.48/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/27.1.48/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\" style=\"padding-top: 0px;\">\n    <div class=\"content-wrapper\">\n        <div id=\"ganttsidebar-parent\" style=\"overflow: hidden; height: 460px;\">\n            <button id=\"filter-btn\">\n                <span class=\"e-quickfilter\" style=\"padding: 3px;\"></span>\n                Advanced Filters\n            </button>\n            <div id=\"AdvancedFiltering\"></div>\n        </div>\n    </div>\n</div>\n\n\n<style type=\"text/css\"> \n    #filter-btn {\n        padding: 5px;\n        margin: 5px;\n        cursor: pointer;\n        float: right;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    #ganttSidebar {\n        height: 453px !important;\n        border: 1px solid rgb(204, 202, 200);\n    }\n    #ganttquerybuilder {\n        margin: 12px;\n    }\n    .e-bigger {\n        .e-gantt {\n            .e-sidebar {\n                width: 100% !important;\n            }\n        }\n    }\n    .ganttsidebar-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 16px;\n    }\n    .ganttsidebar-header {\n        .title {\n            font-size: 18px;\n            font-weight: 500;\n        }\n    }\n    .ganttsidebar-header {\n        .e-close {\n            background: transparent;\n            border: none;\n            cursor: pointer;\n        }\n    }\n    .ganttsidebar-header {\n        .e-close::before {\n            font-family: 'e-icons' !important;\n            content: '\\e7e7';\n            font-size: 15px;\n        }\n    }\n    .ganttsidebar-header {\n        .highcontrast .e-close::before {\n            content: '\\e7fc';\n            font-family: 'e-icons';\n            font-size: 15px;\n        }\n    }\n    .ganttbtn-container {\n        padding: 10px;\n        float: right;\n    }\n    #ganttsidebar-parent .e-quickfilter::before {\n        content: '\\e7ee';\n    }\n    .fabric #ganttsidebar-parent .e-quickfilter::before,\n    .fabric-dark #ganttsidebar-parent .e-quickfilter::before,\n    .highcontrast #ganttsidebar-parent .e-quickfilter::before {\n        content: '\\e21c';\n        font-family: 'e-icons';\n    }\n    .bootstrap #ganttsidebar-parent .e-quickfilter::before,\n    .bootstrap-dark #ganttsidebar-parent .e-quickfilter::before {\n        content: '\\e946';\n        font-family: 'e-icons';\n    }\n    .bootstrap4 #ganttsidebar-parent .e-quickfilter::before {\n        content: '\\e714';\n        font-family: 'e-icons';\n    }\n    .bootstrap5 #ganttsidebar-parent .e-quickfilter::before,\n    .material3 #ganttsidebar-parent .e-quickfilter::before,\n    .bootstrap5-dark #ganttsidebar-parent .e-quickfilter::before,\n    .bootstrap5\\.3 #ganttsidebar-parent .e-quickfilter::before,\n    .bootstrap5\\.3-dark #ganttsidebar-parent .e-quickfilter::before,\n    .fluent #ganttsidebar-parent .e-quickfilter::before, .fluent2 #ganttsidebar-parent .e-quickfilter::before,\n    .fluent2-highcontrast #ganttsidebar-parent .e-quickfilter::before,.fluent2-dark #ganttsidebar-parent .e-quickfilter::before, \n    .fluent-dark #ganttsidebar-parent .e-quickfilter::before,.tailwind #ganttsidebar-parent  .e-quickfilter::before,\n    .tailwind-dark #ganttsidebar-parent .e-quickfilter::before,\n    .tailwind3 #ganttsidebar-parent .e-quickfilter::before,\n    .tailwind3-dark #ganttsidebar-parent .e-quickfilter::before {\n      content: '\\e7f7';\n      font-family: 'e-icons';\n    }\n\n</style>\n\n\n\n</div></body></html>","index.js":"{{ripple}}/* jshint esversion: 6 */\n\n    var searchQuery;\n    var sidebarToggle;\n    var create;\n    var isSideBar = false;\n    var predicatevalue;\n    var querybuilderevent = false;\n    var sidebarObj;\n    var queryBuilderObj;\n\n    var clickBtn = new ej.buttons.Button();\n    clickBtn.appendTo('#filter-btn');\n    document.getElementById('filter-btn').addEventListener('click', function() {\n        sidebarToggle = !sidebarToggle;\n        isSideBar = true;\n        initializeSidebar();\n        if (querybuilderevent) {\n            create = queryBuilderObj.getSqlFromRules();\n        }\n        sidebarObj.isOpen = true;\n    });\n    \n    function rowSelectEvent() {\n        sidebarToggle = false;\n        if (isSideBar) {\n            create = queryBuilderObj.getSqlFromRules();\n            isSideBar = false;\n            sidebarObj.isOpen = false;\n        }\n    }\n\n    var ganttChart = new ej.gantt.Gantt({\n        dataSource: window.projectNewData,\n        taskFields: {\n            id: 'TaskID',\n            name: 'TaskName',\n            startDate: 'StartDate',\n            endDate: 'EndDate',\n            duration: 'Duration',\n            progress: 'Progress',\n            dependency: 'Predecessor',\n            child: 'subtasks'\n        },\n        columns: [\n            { field: 'TaskID', width: 80 },\n            { field: 'TaskName',headerText: 'Name', width: 250 },\n            { field: 'StartDate' },\n            { field: 'Duration' },\n            { field: 'EndDate' },\n            { field: 'Progress' },\n            { field: 'Predecessor' }\n        ],\n        treeColumnIndex: 0, \n        allowFiltering: true,\n        includeWeekend: true,\n        height: '410px',\n        splitterSettings: {\n            columnIndex: 4\n        },\n        rowSelected: rowSelectEvent,\n        labelSettings: {\n            rightLabel: 'TaskName',\n        },\n        projectStartDate: new Date('04/01/2024'),\n        projectEndDate: new Date('07/06/2024')\n    });\n    ganttChart.appendTo('#AdvancedFiltering');\n\n    function initializeSidebar() {\n        if (isSideBar) {\n            if (!document.getElementById('ganttSidebar')) {\n                var sidebarDiv = document.createElement('div');\n                sidebarDiv.id = 'ganttSidebar';\n                sidebarDiv.innerHTML = `\n                    <div class=\"ganttsidebar-header\">\n                        <div class=\"title\">Advanced Filters</div>\n                        <button id=\"close\" class=\"e-close\"></button>\n                    </div>\n                    <div id=\"ganttquerybuilder\"></div>\n                    <div class=\"ganttbtn-container\">\n                        <button type=\"button\" id=\"apply\" class=\"e-control e-btn apply-btn\">Apply</button>\n                        <button type=\"button\" id=\"clear\" class=\"e-control e-btn clear-btn\">Clear</button>\n                    </div>\n                `;\n                document.querySelector('.content-wrapper').appendChild(sidebarDiv);\n                document.getElementById('close').addEventListener('click', function() {\n                    sidebarObj.destroy();\n                    document.getElementById('ganttSidebar').remove();\n                    sidebarObj.hide();\n                    create = queryBuilderObj.getSqlFromRules();\n                    sidebarToggle = false;\n                    isSideBar = false;\n                });\n                // Initialize EJ2 buttons\n                var applyBtn = new ej.buttons.Button({ isPrimary: true });\n                applyBtn.appendTo('#apply');\n\n                var clearBtn = new ej.buttons.Button();\n                clearBtn.appendTo('#clear');\n\n                applyBtn.element.addEventListener('click', function() {\n                    if (predicatevalue != null) {\n                        searchQuery = new ej.data.Query().where(predicatevalue);\n                    } else {\n                        searchQuery = new ej.data.Query().select(['TaskID','TaskName', 'StartDate', 'Duration', 'EndDate', 'Progress', 'Predecessor']);\n                    }\n                    ganttChart.query = searchQuery;\n                    ganttChart.refresh();\n                });\n                clearBtn.element.addEventListener('click', function() {\n                    queryBuilderObj.reset();\n                    predicatevalue = null;\n                    searchQuery = new ej.data.Query();\n                    ganttChart.query = searchQuery;\n                    ganttChart.refresh();\n                });\n\n                sidebarObj = new ej.navigations.Sidebar({\n                    width: '65%',\n                    type: 'Over',\n                    position: 'Right',\n                    isOpen: sidebarToggle,\n                    target: '#ganttsidebar-parent'\n                });\n                sidebarObj.appendTo('#ganttSidebar');\n                queryBuilderObj = new ej.querybuilder.QueryBuilder({\n                    dataSource: window.projectNewData,\n                    allowValidation: true,\n                    columns: [\n                        { field: 'TaskID', label: 'Task ID', type: 'number' },\n                        { field: 'TaskName', label: 'Task Name', type: 'string' },\n                        { field: 'StartDate', label: 'Start Date', type: 'date', format: 'MM/dd/yyyy' },\n                        { field: 'Duration', label: 'Duration', type: 'number' },\n                        { field: 'EndDate', label: 'End Date', type: 'date', format: 'MM/dd/yyyy' },\n                        { field: 'Progress', label: 'Progress', type: 'number' },\n                        { field: 'Predecessor', label: 'Predecessor', type: 'string' }\n                    ],\n                    ruleChange: updateRule,\n                    created: created\n                });\n                queryBuilderObj.appendTo('#ganttquerybuilder');\n            }\n        }\n    }\n   \n    function updateRule(args) {\n        predicatevalue = queryBuilderObj.getPredicate(args.rule);\n        if (args.Type == \"DeleteRule\" && predicatevalue != null) {\n            searchQuery = new ej.data.Query().where(predicatevalue);\n        } else if (predicatevalue == null && args.Type == \"DeleteRule\") {\n            searchQuery = new ej.data.Query().select(['TaskID', 'TaskName', 'StartDate', 'Duration', 'EndDate', 'Progress', 'Predecessor']);\n        }\n    }\n\n    function created() {\n        querybuilderevent = true;\n        if (create && create !== \"\") {\n            queryBuilderObj.setRulesFromSql(create);\n        }\n    }\n\n"}